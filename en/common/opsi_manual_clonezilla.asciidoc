////
; Copyright (c) uib gmbh (www.uib.de)
; This documentation is owned by uib
; and published under the german creative commons by-sa license
; see:
; http://creativecommons.org/licenses/by-sa/3.0/de/
; http://creativecommons.org/licenses/by-sa/3.0/de/legalcode
; english:
; http://creativecommons.org/licenses/by-sa/3.0/
; http://creativecommons.org/licenses/by-sa/3.0/legalcode
; 
; credits: http://www.opsi.org/credits/
////

////
;***************************************************************************
; Subversion:
; $Revision$ $Author$
; $Date$
;***************************************************************************
////


:Author:    uib gmbh
:Email:     info@uib.de
:Date:      14.08.2014
:Revision:  4.0.5
:toclevels: 6


include::../common/opsi_terms.asciidoc[]

[[opsi-manual-clonezilla]]
== opsi Extension 'opsi-clonezilla'


[[opsi-manual-clonezilla-preconditions]]
=== Preconditions for the opsi Extensions 'opsi-clonezilla'


Technical preconditions are opsi 4.0.3 with the following package and product versions:

.Needed product and package versions
[options="header"]
|==========================
|opsi-Paket|Version
|opsi-linux-bootimage|>= 20130207-1
|==========================

or opsi 4.0.5 with the following package and product versions:

.Needed product and package versions
[options="header"]
|==========================
|opsi packet|version
|opsi-linux-bootimage|>= 20140805-1
|opsi-clonezilla|>= 4.0.5-1
|==========================


[[opsi-manual-clonezilla-introduction]]
=== Introduction

Besides of the packet based (unattended) installation, opsi had in the past just a rudimental support for image based installations. With integrating the technique of the Open Source product clonezilla (http://clonezilla.org/) into opsi, now a comprehensive and flexible solution for handling partition and disc images is available.

[[opsi-manual-clonezilla-concept]]
=== Concept

We have combined the clonezilla scrips with the opsi-linux-bootimage to generate the following benefits:

* integration into the opsi process control

* automated mount of the shares for the image repository

* availability of automated processing

[[opsi-manual-clonezilla-interactive]]
=== Interactive Proceedings

Starting the opsi-clonezilla per default starts in the interactive mode. This interactive mode allows to choose the desired operations and parameters easily. Knowing the commands and their parameters from this makes it easy to create non-interactive run commands from this.

* Set for the property `imageshare` a share as value. This share should have the format `//server/share`. Please note the use of slashes instead of back slashes. This share should be mountable by the opsi user `pcpatch` with the password as known by the opsi-server. This is normally the share opsi_images from the opsi-server.

* Switch the property `runcommand` to `/opt/drbl/sbin/ocs-live` or `ocs-live` using opsi >= 4.0.5. This is the interactive mode of clonezilla.

* Start the netboot product.

* At the first dialog you will be asked, whether anything should be mounted to  `/home/partimg`. Choose  `Skip` because the mount has already be done by the opsi bootimage.

.Skip: The share given by the property 'imageshare' will be mounted by the bootimage to `/home/partimg`.
image::../images/clonezilla_skip.png[width=500]

The mounted partition will be displayed:

.Mounted partitions.
image::../images/clonezilla_existing_setting.png[width=400]

By choosing `Expert` or `Beginner` you decide if you want to use all default parameters or have the possibility to modify them. 

If you have opsi version less than 4.0.5 it is a good idea to choose `Expert` in order to be able to change parameters for non-interactive use.

Since opsi 4.0.5 you may also choose the `Beginner` mode.

.Expert or Beginner ?
image::../images/clonezilla_expert.png[width=300]

Now you have to choose which basic operation you like to run. In this manual we discuss only the following operations:

* save disk

* save partition

* restore disk

* restore partition

.Choose operation.
image::../images/clonezilla_select_mode.png[width=500]

[[opsi-manual-clonezilla-interactive-save-expert]]
==== Interactive savedisk in the expert mode

Here we show (as an example for similar operations) the additional dialogs you will get in the savedisk expert mode.

.Choose the tools (default value recommended)
image::../images/clonezilla_tool-priority.png[width=500]

.miscellaneous: unset -c here to suppress interactive questions for automation.
image::../images/clonezilla_parameters1.png[width=500]


.compression method before opsi 4.0.5, which is bootimages <= 20130207 (opsi-clonezilla_2.01-3), select here -z1. With opsi 4.0.5 and above not required anymore.
image::../images/clonezilla_compression.png[width=500]


.Check filesystem (den default 'skip' nutzen)
image::../images/clonezilla_parameter4.png[width=500]

.Check the saved image (den default 'yes' nutzen)
image::../images/clonezilla_parameter5.png[width=500]

.Action after cloning (use the default '-p true', the reboot is triggered by the opsi bootimage).
image::../images/clonezilla_parameters6.png[width=300]


[[opsi-manual-clonezilla-interactive-savedisk]]
==== Interactive savedisk 


.Name for the image to be saved on disc.
image::../images/clonezilla_imagename.png[width=300]


.Select the disc to create the image from
image::../images/clonezilla_choose_disk.png[width=500]

.The resulting command. This can be set as product property 'runcommand'
image::../images/clonezilla_savedisk_command.png[width=500]


.Progress bar
image::../images/clonezilla_savedisk_progress.png[width=500]


[[opsi-manual-clonezilla-interactive-savepart]]
==== Interactive savepart 

.Name for the partition image to be saved as.
image::../images/clonezilla_imagename.png[width=300]

.Select the partition to create the image from
image::../images/clonezilla_choosepart.png[width=500]

.The resulting command. This can be set as product property 'runcommand'
image::../images/clonezilla_saveparts_command.png[width=500]

.Progress bar
image::../images/clonezilla_savepart_progress.png[width=500]

[[opsi-manual-clonezilla-interactive-restoredisk]]
==== Interactive restoredisk 


.Selct the disc image to be restored
image::../images/clonezilla_choose_diskimage2restore.png[width=300]

.Select the disc where the image is to be restored to
image::../images/clonezilla_choose_restore_targetdisk.png[width=500]

.The resulting command. This can be set as product property 'runcommand'
image::../images/clonezilla_restoredisk_command.png[width=500]

.Query before starting to overwrite the disc. Can be supressed by omitting the option -c from the command.
image::../images/clonezilla_restoredisk_askbeforeinst.png[width=500]

.Progress bar
image::../images/clonezilla_restoredisk_progress.png[width=300]

[[opsi-manual-clonezilla-interactive-restorepart]]
==== Interactive restorepart


.Select the partimage to be restored
image::../images/clonezilla_choose_partimage2restore.png[width=300]

.Select the partition where the image is to be restored to.
image::../images/clonezilla_choose_restore_targetpart.png[width=500]

.The resulting command. This can be set as product property 'runcommand'image::../images/clonezilla_restorepart_command.png[width=500]

.Query before starting to overwrite the disc. Can be supressed by omitting the option -c from the command.
image::../images/clonezilla_restorepart_askbeforeinst.png[width=500]

.Progress bar
image::../images/clonezilla_restorepart_progress.png[width=300]

[[opsi-manual-clonezilla-not-interactive]]
=== Not interactive processes

By setting the desired command as the product property `runcommand` opsi-clonezilla is switched to the non interactive mode.

* Set the property `imageshare` to a share, that can be mounted by the user `pcpatch` with the password as known by the opsi-server. The format for the share is `//server/share` (attention: use forward slashes, not backward slashes).

* Set the property `runcommand` to the non interactive command.

Here are some non interactive versions of the examples from above (without -c and with --batch). Since opsi 4.0.5 the parameter `-z1` can be omitted. This accelerates the compression with multi processor kernels:

* `/opt/drbl/sbin/ocs-sr --batch -q2 -j2 -rm-win-swap-hib -z1 -i 2000 -p true  savedisk 2014-06-11-12-img sda` +

* `/opt/drbl/sbin/ocs-sr --batch -q2 -j2 -rm-win-swap-hib -z1 -i 2000 -p true  saveparts partimg sda1` +

* `/opt/drbl/sbin/ocs-sr --batch -g auto -e1 auto -e2 -r -j2 -p true restoredisk 2014-06-11-12-img sda` +

* `/opt/drbl/sbin/ocs-sr --batch -g auto -e1 auto -e2 -r -j2 -k -p true restoreparts partimg sda1` +

Furthermore in these examples the image names `2014-06-11-12-img` or `partimg` can be replaced by the string 'imagefile'. In this case the string 'imagefile' will be substituted by the value of the property `imagefile`.

[[opsi-manual-clonezilla-known-bugs]]
=== opsi-clonezilla known bugs

At opsi-clonezilla version 4.0.5-2 with bootimage Version 20140819-1 there are problems while imaging computers that running in UEFI mode.

[[opsi-manual-clonezilla-command-reference]]
=== Clonezilla command reference

http://clonezilla.org/clonezilla-live-doc.php

http://allthatnetwork.blogspot.de/2012/10/clonezilla-ocs-sr-options.html


 Clonezilla ocs-sr options

 Setting the TERM as linux  
 /opt/drbl/sbin/ocs-sr: -h: invalid option  
 Usage:  
 To save or restore image  
 ocs-sr [OPTION] {savedisk|saveparts|restoredisk|restoreparts} IMAGE_NAME DEVICE  
  Options for saving:  

  -fsck-src-part, --fsck-src-part:: Run fsck interactively on the source file system before saving it.  
  
  -fsck-src-part-y, --fsck-src-part-y :: Run fsck automatically on the source file system before saving it. This option will always attempt to fix any detected filesystem corruption automatically. //NOTE// Use this option in caution.  
  
  -gm, --gen-md5sum :: Generate the MD5 checksum for the image. Later you can use -cm|--check-md5sum option to check the image when restoring the image. Note! It might take a lot of time to generate if the image size is large.  
  -gs, --gen-sha1sum :: Generate the SHA1 checksum for the image. Later you can use -cs|--check-sha1sum option to check the image when restoring the image. Note! It might take a lot of time to generate if the image size is large.  
  -j2, --clone-hidden-data :: Use dd to clone the image of the data between MBR (1st sector, i.e. 512 bytes) and 1st partition, which might be useful for some recovery tool.  
  -ntfs-ok, --ntfs-ok ::  Assume the NTFS integrity is OK, do NOT check again (for ntfsclone only)  
  -rm-win-swap-hib, --rm-win-swap-hib :: Try to remove the MS windows swap file in the source partition.  
  -q, --use-ntfsclone  :: If the partition to be saved is NTFS, use program ntfsclone instead of partimage (i.e. Priority: ntfsclone > partimage > dd)  
  -q1, --force-to-use-dd :: Force to use dd to save partition(s) (inefficient method, very slow, but works for all the file system).  
  -q2, --use-partclone  :: Use partclone to save partition(s) (i.e. partclone > partimage > dd).  
  -rescue, --rescue :: Turn on rescue mode, i.e. try to skip bad sectors.  
  -sc, --skip-check-restorable :: By default Clonezilla will check the image if restorable after it is created. This option allows you to skip that.  
  -z0, --no-compress  ::  Don't compress when saving: very fast but very big image file (NOT compatible with multicast restoring!!!)  
  -z1, --gzip-compress ::  Compress using gzip when saving: fast and small image file (default)  
  -z1p, --smp-gzip-compress :: Compress using parallel gzip program (pigz) when saving: fast and small image file, good for multi-core or multi-CPU machine  
  -z2, --bz2-compress  :: Compress using bzip2 when saving: slow but smallest image file  
  -z2p, --smp-bzip2-compress :: Compress using parallel bzip2 program (pbzip2) when saving: faster and smallest image file, good for multi-core or multi-CPU machine  
  -z3, --lzo-compress  :: Compress using lzop when saving: similar to the size by gzip, but faster than gzip.  
  -z4, --lzma-compress  :: Compress using lzma when saving: slow but smallest image file, faster decompression than bzip2.  
  -z5, --xz-compress  ::  Compress using xz when saving: slow but smallest image file, faster decompression than bzip2.  
  -z5p, --smp-xz-compress :: Compress using parallel xz when saving: slow but smallest image file, faster decompression than bzip2.  
  -z6, --lzip-compress  :: Compress using lzip when saving: slow but smallest image file, faster decompression than bzip2.  
  -z6p, --smp-lzip-compress :: Compress using parallel lzip when saving: slow but smallest image file, faster decompression than bzip2.  
  -z7, --lrzip-compress  :: Compress using lrzip when saving.  
  -i, --image-size SIZE :: Set the split image file volume size SIZE (MB). When ocs-sr is run with -x, the default SIZE is set as 2000, if without -x, we will not split it. 
  

Three words are reserved for IMAGE_NAME, "ask_user" is used to let user to input a name when saving an image. "autoname" is used to automatically generate the image name based on network card MAC address and time. "autohostname" is used to automatically generate the image name based on hostname.  
  
A word is reserved for DEVICE, "ask_user" could be used to let user to select the source device when saving an image.  


  Options for restoring:  
  
  -g, --grub-install GRUB_PARTITION  :: Install grub in the MBR of the disk containing partition GRUB_PARTITION with root grub directory in the same GRUB_PARTITION when restoration finishs, GRUB_PARTITION can be one of "/dev/hda1", "/dev/hda2"... or "auto" ("auto" will let clonezilla detect the grub root partition automatically). If "auto" is assigned, it will work if grub partition and root partition are not in the same partition.  
  -r, --resize-partition :: Resize the partition when restoration finishes, this will try to fix the problem when small partition image is restored to larger partition. Warning!!! Use this carefully... Backup your data first  
  -k, --no-fdisk, --no-create-partition :: Do NOT create partition in target harddisk. If this option is set, you must make sure there is an existing partition table in the current restored harddisk. Default is to create the partition table.  
  -icrc, --icrc    ::  Skip Partclone CRC checking.  
  -irhr, --irhr    ::  Skip removing the Linux udev hardware records on the restored GNU/Linux.  
  -ius, --ius    ::   Skip updating syslinux-related files on the restored GNU/Linux.  
  -icds, --ignore-chk-dsk-size-pt :: Skip checking destination disk size before creating the partition table on it. By default it will be checked and if the size is smaller than the source disk, quit.  
  -k1,        ::   Create partition table in the target disk proportionally.  
  -k2,        ::   Enter command line prompt to create partition table manually before restoring image.  
  -t, --no-restore-mbr :: Do NOT restore the MBR (Mater Boot Record) when restoring image. If this option is set, you must make sure there is an existing MBR in the current restored harddisk. Default is Yes  
  -u, --select-img-in-client :: Input the image name in clients  
  -e, --load-geometry :: Force to use the saved CHS (cylinders, heads, sectors) when using sfdisk  
  -e1, --change-geometry NTFS-BOOT-PARTITION :: Force to change the CHS (cylinders, heads, sectors) value of NTFS boot partitoin after image is restored. NTFS-BOOT-PARTITION can be one of "/dev/hda1", "/dev/hda2"... or "auto" ("auto" will let clonezilla detect the NTFS boot partition automatically)  
  -e2, --load-geometry-from-edd :: Force to use the CHS (cylinders, heads, sectors) from EDD (Enhanced Disk Device) when creating partition table by sfdisk  
  -y, -y0, --always-restore, --always-restore-default-local :: Let Clonezilla server as restore server, i.e. client will always has restore mode to choose (However default mode in PXE menu is local boot)  
  -y1, --always-restore-default-clone :: Let Clonezilla server as restore server, i.e. client will always has restore mode to choose (The default mode in PXE menu is clone, so if client boots, it will enter clone always, i.e. clone forever)  
  -j, --create-part-by-sfdisk :: Use sfdisk to create partition table instead of using dd to dump the partition table from saved image (This is default)  
  -j0, --create-part-by-dd :: Use dd to dump the partition table from saved image instead of sfdisk. ///Note/// This does NOT work when logical drives exist.  
  -j1, --dump-mbr-in-the-end :: Use dd to dump the MBR (total 512 bytes, i.e. 446 bytes (executable code area) + 64 bytes (table of primary partitions) + 2 bytes (MBR signature; # 0xAA55) = 512 bytes) after disk image was restored. This is an insurance for some hard drive has different numbers of cylinder, head and sector between image was saved and restored.  
  -j2, --clone-hidden-data :: Use dd to clone the image of the data between MBR (1st sector, i.e. 512 bytes) and 1st partition, which might be useful for some recovery tool.  
  -hn0 PREFIX  :: Change the hostname of M$ Windows based on the combination of hostname prefix and IP address, i.e. PREFIX-IP  
  -hn1 PREFIX  :: Change the hostname of M$ Windows based on the combination of hostname prefix and NIC MAC address, i.e. PREFIX-MAC  
  --max-time-to-wait TIME :: When not enough clients have connected (but at least one), start anyways when TIME seconds since first client connection have pased. This option is used with --clients-to-wait  
  -cm, --check-md5sum :: Check the MD5 checksum for the image. To use this option, you must enable -gm|--gen-md5sum option when the image is saved. Note! It might take a lot of time to check if the image size is large.  
  -cs, --check-sha1sum :: Check the SHA1 checksum for the image. To use this option, you must enable -gs|--gen-sha1sum option when the image is saved. Note! It might take a lot of time to check if the image size is large.  
  --mcast-port  NO  :: Assign the udp port number for multicast restore. This is used by clonezilla server. Normally it's not necessary to manually assign this option.  
  

A word is reserved for IMAGE_NAME, "ask_user" is used to let user to input a name when saving an image.  
  
A word is reserved for DEVICE, "ask_user" could be used to let user to select the source device when saving an image.  

  
  General options:  
  
 -l, --language INDEX :: Set the language to be shown by index number:  +
     [0|en_US.UTF-8]: English,  +
     [1|zh_TW.BIG5]: Traditional Chinese (Big5) - Taiwan,  +
     [2|zh_TW.UTF-8]: Traditional Chinese (UTF-8, Unicode) - Taiwan  +
     [a|ask]: Prompt to ask the language index  
  -b, -batch, --batch  :: (DANGEROUS!) Run program in batch mode, i.e. without any prompt or wait for pressing enter key. //NOTE// You have to use '-batch' instead of '-b' when you want to use it in the boot parameters. Otherwise the program init on system will honor '-b', too.  
  -c, --confirm   ::   Wait for confirmation before saving or restoring  
  -d, --debug-mode  ::   Enter command mode to debug before saving/restoring  
  --debug=LEVEL   ::   Output the partimage debug log in directory /var/log/ with debug LEVEL (0,1,2... default=0)  
  -m, --module MODULE  :: Force to load kernel module MODULE, this is useful when some SCSI device is not detected. NOTE! Use only one module, more than one may cause parsing problem.  
  -o0, --run-prerun-dir :: Run the script in the direcoty /opt/drbl/share/ocs/postrun before clone is started. The command will be run before MBR is created or saved.  
  -o1, -o, --run-postrun-dir :: Run the script in the direcoty /opt/drbl/share/ocs/postrun when clone is finished. The command will be run before that assigned in -p or --postaction.  
  -w, --wait-time TIME ::  Wait for TIME secs before saving/restoring  
  --nogui    ::     Do not show GUI of partimage, use text only  
  -a, --no-force-dma-on :: Do not force to turn on HD DMA  
  -mp, --mount-point MOUNT_POINT :: Use NFS to mount MOUNT_POINT as directory ocsroot (ocsroot is assigned in drbl.conf)  
  -or, --ocsroot DIR   :: Specify DIR (absolute path) as directory ocsroot (i.e. overwrite the ocsroot assigned in drbl.conf)  
  -p, --postaction [choose|poweroff|reboot|command|CMD]  :: When save/restoration finishs, choose action in the client, poweroff, reboot (default), in command prompt or run CMD  
  -ns, --ntfs-progress-in-image-dir :: Save the ntfsclone progress tmp file in the image dir so that if cloning is in DRBL client, the progress can be check in the server (Default in to be put in local /tmp/, which is local tmpfs).  
  -um, --user-mode [beginner|expert] ::  Specify the mode to use. If not specified, default mode is for a beginner.  
  -v, --verbose   ::   Prints verbose information  
  -d0, --dialog   ::  Use dialog  
  -d1, --Xdialog  ::  Use Xdialog  
  -d2, --whiptail ::   Use whiptail  
  -d3, --gdialog  ::  Use gdialog  
  -d4, --kdialog  ::  Use kdialog  
  -x, --interactive  :: Interactive mode to save or restore.  
  
Example:
 
* To save or restore image in client (Only that DRBL client will join, and its local partitions is NOT mounted). NOTE!!! You should run the command in DRBL client or you have to make sure the target device is NOT busy!.  

* To save all the data in local first IDE harddrive 'hda' as image 'IMAGE1', use ntfsclone instead of partimage, and lzop compression (NOTE!!! You should run the command in DRBL client or make sure hda is NOT busy/mounted!):  +
`ocs-sr --use-ntfsclone -z3 savedisk IMAGE1 hda`  

* To save the data in first and second partitions in local first IDE harddrive 'hda' as image 'IMAGE2', use ntfsclone instead of partimage, and lzop compression (NOTE!!! You should run the command in DRBL client, or make sure hda is NOT busy/mounted!):  +
`ocs-sr --use-ntfsclone -z3 saveparts IMAGE2 "hda1 hda2"`

* To restore image IMAGE1 to local hda. grub-install will be run after cloning (image IMAGE1 is already in DRBL server. NOTE!!! You should run the command in DRBL client or make sure hda is NOT busy/mounted!):  +
`ocs-sr -g auto restoredisk IMAGE1 hda`

* To restore image first and second partitions from IMAGE2 to local hda1 and hda2. grub-install will be run after cloning (image IMAGE2 is already in DRBL server. NOTE!!! You should run the command in DRBL client or make sure hda is NOT busy/mounted!):  +
`ocs-sr -g auto restoreparts IMAGE2 "hda1 hda2"`

* To save disk(s)/partitition(s) as an image or restore an image to disk(s)/partitition(s) interactively, use:  +
`ocs-sr -x`  









