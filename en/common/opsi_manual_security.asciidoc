////
; Copyright (c) uib gmbh (www.uib.de)
; This documentation is owned by uib
; Until we found a better license:
; All rights reserved.
; credits: http://www.opsi.org/credits/
////

:Author:    uib gmbh
:Email:     info@uib.de
:Date:      17.06.2011
:Revision:  4.0.1
:toclevels: 6


include::../common/opsi_terms.asciidoc[]

[[opsi-manual-security]]
== Security

[[opsi-manual-security-introduction]]
=== Introduction

Opsi is a powerful tool for the administration of many clients.

According to that fact, the '{opsi-server}' has to be in the focus of security considerations.

If you control the '{opsi-server}' you have the control over all the clients behind the '{opsi-server}'.

How much time and money you will spend in hardening your '{opsi-server}', depends on your needs in security and the way you use opsi. So for example a '{opsi-server}' in the 'cloud' is more in danger then a '{opsi-server}' in separated network.

In the following chapter we have collected the most important tasks and problems.

At this place we say 'thank you' to all customers and users which informed us about security problems and helped us to improve the security of the opsi system. If you find any security problem, please inform us (at info@uib.de) before making the problem pulic. 

[[opsi-manual-security-staytuned]]
=== Stay tuned

Information about security relevant updates and tasks are published at:

The news aerea at the opsi forum: +
https://forum.opsi.org/viewforum.php?f=10


[[opsi-manual-security-server]]
=== General server security

The opsi software may not be more secure then the underlying operating system. So please make sure to update your server with the security updates by your linux distribution. This have to done not only at the '{opsi-configserver}' but also at all '{opsi-depotserver}'.

It may help you to install programs which inform you by email if there are new updates available.

Debian, Ubuntu:: apticron

RHEL, CentOS::  yum-updatesd

There a lot more possibilities to enhance the security of your Linux server. But this is not the task of this manual. 

We would be happy to help at this task as part of support contract.

[[opsi-manual-security-depotshare]]
=== Read Only depotshare

The 'depot_share' which is used by the clients should be read-only. This is important to avoid virus infections of the files at the 'depot_share' by a infected client.

Since opsi 4.0.1 there is a new share 'opsi_depot' which is read-only.
In order to use this share please execute (on all your 'opsi-servers'):

[source,prompt]
----
opsi-setup --auto-configure-samba
----

This command creates the new share. This share points to the directory `/var/lib/opsi/depot`.
According to your Linux distribution a symbolic link from this directory to `/opt/pcbin/install` will be created.

To tell the clients that they have now to use this new share you should execute at your '{opsi-configserver}' the following script:

[source,prompt]
----
for depot in $(opsi-admin -dS method host_getIdents unicode "{\"type\":\"OpsiDepotserver\"}"); do
   echo "Depot: $depot"
   depot_remote=$(opsi-admin -dS method host_getObjects [] "{\"id\":\"$depot\"}" | grep "depotRemoteUrl=" | cut -d "=" -f2)
   depot_local=$(opsi-admin -dS method host_getObjects [] "{\"id\":\"$depot\"}" | grep "depotLocalUrl=" | cut -d "=" -f2)
   depot_remote_new=$(echo $depot_remote | sed "s|/opt_pcbin/install|/opsi_depot|")
   depot_local_new=$(echo $depot_local | sed "s|/opt/pcbin/install|/var/lib/opsi/depot|")
   servertype=$(opsi-admin -dS method host_getObjects [] "{\"id\":\"$depot\"}" | grep "type=" | cut -d "=" -f2)
   opsi-admin -d method host_updateObjects "{\"type\":\"$servertype\",\"id\":\"$depot\",\"depotLocalUrl\":\"$depot_local_new\",\"depotRemoteUrl\":\"$depot_remote_new\"}"
done
----

[[opsi-manual-security-client2server]]
=== Client authentication at the server
The client authenicates it self using the FQDN as username and the 'opsi-host-key' as password.

The 'opsi-host-key' is stored at the client in the file: + `%programfiles%\opsi.org\opsi-client-agent\opsiclientd\opsiclientd.conf` +
which is only readable with administrative privileges. +
The 'opsi-host-key' is stored at the server in the used backen (e.g at `/etc/opsi/pckeys`).

In addition to this authentication you may tell the opsiconfd to check if the clients IP address matches to the given FQDN. To activate this check set at the `/etc/opsi/opsiconfd.conf`:

[source,configfile]
----
verify ip = yes
----
and reload the teh 'opsiconfd':

[source,prompt]
----
/etc/init.d/opsiconfd reload
----
CAUTION: Do not use this feature if you are not really sure, that your name resolution work properly in both directions for all clients.

[[opsi-manual-security-server2client]]
=== Server authentication at the client


Since opsi 4.0.1 there are different possibilities to check the trustworthiness of the contacted server.

CAUTION: Do not use them together. Choose only one way or you will be locked out from your client.

==== Variant 1: verify_server_cert

At the first contact to a opsi-server the client will accept the given SSL certificate and store it at `C:\opsi.org\opsiclientd\server-certs`. +
On any subsequent contact the client creates a random string and use the  'public key' of the stored certificate to encrypt this string (and the own access data). This encrypted data will be send to the server. +
The server use the 'private key' of its own SSL certificate to decrypt the data and send the decrypted random string back to the client. +
Now the client checks if the correct string was send back. If not the communication to the server will be aborted.

You may avoid at this way that somebody direct your clients to a wrong server e.g. by manipulating the DNS. At the other hand if you setup a new server you may migrate the SSL certifikate from the old to the new server with out problems. And you must not deploy any certification authority (CA).

The problem at this method is, that a 'man-in-the-middle' attack is still possible.

This security check works at the communication between client and '{opsi-configserver}'.

Using the opsi WAN extension and as +clientconfig.depot.protocol+ +webdav+, so also the communication to the '{opsi-depotserver}' is checked.
////
<<opsi-manual-wansupport-depot-protocol>>
////

To activate this check, set at the `opsiclientd.conf` in the section '[global]' the option:
[source,configfile]
----
verify_server_cert = true
----
Run the following command at your '{opsi-configserver}' to set this as default for all clients:

[source,prompt]
----
opsi-admin -d method config_createBool opsiclientd.global.verify_server_cert "verify_server_cert" true
----

==== Variant 2: verify_server_cert_by_ca

This variant works just like SSL certificates are used in your browser. +
The given SSL certificate will be accepted if the are issued for exactly that FQDN ('commonName') the server works with (or the DNS tells that this is the FQDN for the IP address of the server) *and* the certificate is issued and signed by the 'uib gmbh'.

Is one of these conditions not true, the communication to the server will be aborted.

This method is more secure than the first one. But you have to buy the certificates by the 'uib gmbh'.
For prizes and conditions have a look at the prize list of the 'uib gmbh': +
http://uib.de/en/opsi_support/index.html

Any surplusses of selling these certificates will go back to the maintance of the opsi security.


To activate this check, set at the `opsiclientd.conf` in the section '[global]' the option:
[source,configfile]
----
verify_server_cert_by_ca = true
----
Run the following command at your '{opsi-configserver}' to set this as default for all clients:

[source,prompt]
----
opsi-admin -d method config_createBool opsiclientd.global.verify_server_cert_by_ca "verify_server_cert_by_ca" true
----

[[opsi-manual-security-clientcontrolserver]]
=== Authentifizierung beim controlserver des Client

Der '{opsiclientd}' besitzt eine Webservice-Schnittstelle die es erlaubt dem opsiclientd Anweisungen von aussen zu erteilen (<<opsi-manual-clientagent-control>>).

Für den Zugriff auf den Webservice wird eine Authentifizierung benötigt.
Dies geschieht entweder mittels des lokalen Administrator-Accounts (ein leeres Passwort ist unzulässig) oder mittels leerem Benutzernamen und dem '{opsi-host-key}s' als Passwort.

[[opsi-manual-security-adminnetwork]]
=== Konfiguration eines Admin-Networks

Die Idee eines Admin-Networks ist es, administrative Zugriffe auf Server nicht aus dem allgemeinen Produktiv-Netz zu erlauben, sondern nur von einem speziellen und abgesicherten Netzbereich.

Zwar müssen alle 'opsi-clients' Zugang zum opsi-webservice haben, diese dürfen aber nur eingeschränkt Daten abrufen und ändern.
Ein administrativer Zugang zum Webservice setzt die Mitgliedschaft in der Gruppe 'opsiadmin' voraus.

Über die Option +[global] admin networks+ in der `/etc/opsi/opsiconfd.conf` kann der administrative Zugriff auf den 'opsiconfd' auf Verbindungen von bestimmten Netzwerkadressen eingeschränkt werden. +
Es können mehrere Netzwerkadressen durch Kommas getrennt angegeben werden. +
Nicht-administrative Client-Verbindungen können auch aus anderen Netzwerken erfolgen.

Der default ist:
[source,configfile]
----
admin networks = 0.0.0.0/0
----
und erlaubt Zugriff von allen Netzen.

Eine Konfiguration wie z.B.
[source,configfile]
----
admin networks = 127.0.0.1/32, 10.1.1.0/24
----
würde administrative Zugriffe nur vom Server selbst und aus dem Netz '10.1.1.0/24' erlauben.

[[opsi-manual-security-pcpatch]]
=== Der user pcpatch

Der user 'pcpatch' dient in opsi 4 ausschließlich dem Mounten des depot-Shares durch den Client (und zur Zeit noch dem Schreiben und Lesen von Image-Dateien durch die Netboot Produkte 'ntfs-write-image' bzw. 'ntfs-restore-image').

Das Passwort des Benutzers 'pcpatch' wird in der Regel verschlüsselt abgelegt und auch nur verschlüsselt übertragen.
Es existieren jedoch auch unter gewissen Umständen Möglichkeiten das Passwort in Erfahrung zu bringen.
Um den Schaden der hierdurch entstehen kann zu minimieren empfehlen wir folgende Maßnahmen:

In der `/etc/samba/smb.conf` in allen Share-Definitionen ausser 'opsi_depot' dem user pcpatch den Zugriff verbieten über den Eintrag:
[source,configfile]
----
invalid users = root pcpatch
----

Alternativ +
In der `/etc/samba/smb.conf` dem User 'pcpatch' auf Leserechte beschränken durch den Eintrag in der [global] Sektion:

[source,configfile]
----
read list = pcpatch
----

Als weitere Maßnahme sollten Sie das Passwort des Users 'pcpatch' öfters ändern.
Da das Klartext-Passwort niemandem bekannt sein muss, kann es z.B. durch den regelmäßigigen Aufruf (z.B. per cronjob) des folgenden Scriptes auf ein zufälliges Passwort setzen.

pass=$(< /dev/urandom tr -dc _A-Z-a-z-0-9 | head -c16)

[source,prompt]
----
opsi-admin -d task setPcpatchPassword $(< /dev/urandom tr -dc _A-Z-a-z-0-9 | head -c16)
----

Wenn Sie die Netboot Produkte 'ntfs-write-image' bzw. 'ntfs-restore-image' nicht verwenden,
so können Sie zusätzlich die Anmeldung des users 'pcpatch' am Server unterbinden indem Sie in der `/etc/passwd` dem user 'pcpatch' die Shell +/bin/false+ zuweisen.



