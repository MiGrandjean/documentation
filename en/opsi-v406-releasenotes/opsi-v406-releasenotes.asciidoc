////
; Copyright (c) uib gmbh (www.uib.de)
; This documentation is owned by uib
; and published under the german creative commons by-sa license
; see:
; http://creativecommons.org/licenses/by-sa/3.0/de/
; http://creativecommons.org/licenses/by-sa/3.0/de/legalcode
; english:
; http://creativecommons.org/licenses/by-sa/3.0/
; http://creativecommons.org/licenses/by-sa/3.0/legalcode
;
; credits: http://www.opsi.org/credits/
////

////
;***************************************************************************
; Subversion:
; $Revision:  $ $Author: oertel $
; $Date: $
;***************************************************************************
////

:Author:    uib gmbh
:Email:     info@uib.de
:Revision:  4.0.6
:doctype:   book

// Include common opsi terms
include::../common/opsi_terms.asciidoc[]


= opsi Version 4.0.6 Release Notes

// Include common opsi copyright
include::../common/opsi_manual_copyright.asciidoc[]

[[opsi-406-releasenotes-supportmatrix]]
== opsi Support Matrix

Here an overview on which distributions and releases the opsi-server will run:

include::../common/opsi_manual_supportmatrix.asciidoc[]

If you are using an OS version which is not contained in the section above, we recommend updating the OS before installing opsi v 4.0.6.


[[opsi-406-releasenotes-overview]]
== Overview of the new features

The Highlights of this Release are:

* Windows 10 Support
* New opsi bootimage
* New opsi-linux netboot products

The opsi Service Release 4.0.6 comes with a whole bunch of new features and improvements. Here a survey:




* Windows netboot products +
** Windows 10 Products
** winpe Partition are now formatted with NTFS (on non UEFI Systems).
See special chapter: <<opsi-406-releasenotes-win10notes>>.

* New opsi-bootimage based on Ubuntu Trusty / Kernel 4.1 supporting new hardware.

* opsi-configed: 

** Der opsi-configed kann jetzt seine Tabellen auch als PDF-Exporte für einen PDF-Viewer zur Verfügung stellen oder als 
Datei exportieren.

** Auf der Seite Hardwareinformationen des opsi-configed wird ein automatisierter Weg für die PC-spezifische Treiberintegration angeboten. 
Der ByAudit-Treiberpfad wird entsprechend den Anforderungen des Bootimages erzeugt und auf Wunsch angelegt. Anschließend 
können die Treiberdateien auch mittels des opsi-configed direkt auf den Konfigserver kopiert werden, wo dann auch die Dateizugriffsrechte korrekt 
gesetzt werden.

** Es sind an diversen Stellen optimierte Datenzugriffe für das MySQL-Backend implementiert.

** Auf den Logging-Seiten ist die Suchfunktion in mehrfacher Hinsicht verbessert. Insbesondere startet die Suche jetzt an der Cursor-Position (und nicht bei jedem Aufruf von vorne), Suchstrings werden in einer Combobox zwischengespeichert.

** Auf der Software-Inventur-Seite wird jetzt eine Suchfunktion für die Tabelle angeboten. Außerdem kann gewählt werden, ob die MS-Updates ausgeblendet werden (Default Ausblendung).

** In der Lizenzstatistik war ein tief versteckter Bug, der unter gewissen Umständen dazu geführt hat, dass die Zählung der verfügbaren Lizenzen zu niedrig angesetzt war. Das ist behoben.

* opsi-client-agent: +

** Überarbeitetes Script `opsi-deploy-client-agent`. +
Damit es ist einfach möglich zur Verteilung mit einer IP-Adresse zu
arbeiten. +
Außerdem wurde die Möglichkeit zum Kopieren der Dateien auf `mount` zurück +
zu greifen wieder eingeführt. +
Das Script wird selbstständig ermitteln welche Art von Adresse übergeben
wird. Zur manuellen Bestimmung, stehen Parameter bereit.

** Feature zur Steuerung von den Paketen, die für die einzelnen Events freigeschaltet oder ausgeschlossen werden sollen, über den configed mit den Produktgruppen.

** Neues Property `depends_on_service`: +
Dies ist eine Liste von Diensten welche laufen müssen bevor der opsiclientd gestartet wird. Der Default ist: `Dhcp, Dnscache` +
Achtung: Änderungen an diesem Property können leicht dazu führen, dass der opsiclientd nicht mehr startet.

** Neues Property `setup_after_install`: +
Dies ist eine Liste von opsi Produkten welche auf setup gestellt werden wenn der opsi-client-agent installiert ist.

* python-opsi:

** Many improvements, new features and bugfixes. +
See special chapter: <<opsi-406-releasenotes-python-opsi>>


* New optional config: `clientconfig.depot.user` to configure `domain\user` for pcpatch +
Siehe auch gesondertes Kapitel: <<opsi-manual-samba4>>.


* opsi-winst / opsi-script (4.11.5.13) (from 4.0.5): +

** Files commands for hardlinks, symbolic links, Rename and Move in Files sections

** For-To Loop

** Switch / Case Statement

** New Stringlist function: `removeFromListByContaining`

** New Stringlist function: `LoadTextFileWithEncoding(` <file name> `,` <encoding>`)`

** New String function `unquote2(<string>,<quote-string>)`

** New String function `GetShortWinPathName(<longpath string>)`

** New String function `GetConfidentialProductProperty (` <PropertyName>, <DefaultValue>`)`

** New boolean function `CompareDotSeparatedNumbers(<str1>, <relationstr>, <str2>)`

** New boolean function `CompareDotSeparatedStrings(<str1>, <relationstr>, <str2>)`

** New statement `UpdateEnvironment`. The call of `UpdateEnvironment` forces Windows to reload the environment variables from the registry (NT6 only).

** Files command `del`: ATTENTION changed behaviour: Similar like it is implemented for the copy command: +
If a system file is in use, then it can be deleted only after a reboot. The '{opsi-winst}/opsi-script' default behaviour is therefore that a file in use will be marked for delete after the next reboot, AND the '{opsi-winst}/opsi-script' reboot flag is set. Setting the copy option `-c` turns the automatic reboot off. Instead normal processing continues, the deleting will be completed only when a reboot is otherwise triggered.

** Upgrade of the SSL libraries to 1.0.2d, update of the SSL protocol to TLS autonegotiation

** See special chapter: <<opsi-script>>


* Linux Netboot Produkte:

** Die neue Generation der Linux Netbootprodukte arbeitet mit dem Orginal Installer der Distribution und einer entsprechenden Antwortdatei.

** Produkte auf dieser Basis gibt es für: SLES12, openSuse13-2, Ubuntu14-04, Debian7, Debian8, CentOS70, Redhat70

** Siehe auch gesondertes Kapitel: <<opsi-manual-linux>>.

////
For details please refer to the opsi-v405-releasenotes manual and the revised opsi manuals.
////

[[opsi-406-releasenotes-packages]]
== Paketliste

.Server-Pakete:

* opsi-depotserver_4.0.6.4-1
* opsi-linux-support_1.0-4
* opsi-utils_4.0.6.6-2
* opsiconfd_4.0.6.6-1
* python-opsi_4.0.6.15-1
* opsi-linux-bootimage_20150818-1


.opsi-Pakete (Localboot):
* opsi-client-agent (4.0.6.2-1)

.opsi-Pakete (netboot):
* win* 4.0.6.1-1 (inclusive Windows 10 Pakete)
* opsi-clonezilla (4.0.6-1)
* memtest86 5.01-1

.opsi-Pakete (opsi-linux):
* centos70_4.0.6.2-1
* redhat70_4.0.6.2-1
* debian7-4.0.6-1
* debian8-4.0.6-1
* Ubuntu14-04_4.0.6-2
* Ubuntu15-04_4.0.6-2
* opensuse13-2_4.0.6.2-2
* sles12_4.0.6.2-2
* opsi-linux-client-agent ??????

.opsi-Pakete (opsi-local-image):
* opsi-local-image-win* 4.0.6.1-1



[[opsi-406-releasenotes-missing]]
== Was fehlt noch (und ist in Arbeit)

* opsi-client-agent: +
Die Möglichkeit im Rahmen 'User Profile Management' den opsi-winst komplett im Kontext des eingeloggten Users laufen zu lassen.

* opsi-linux-client-agent: +
Ein echter opsiclientd der auch 'pusch Installationen' ermöglicht.

* opsi-linux netboot Produkt Fedora22

* opsi-linux 4.0.6 netboot products: uefi support

* opsi-clonezilla: uefi support



[[opsi-406-releasenotes-knownbugs]]
== Known Bugs / Known Problems

.KNOWN BUGS:

* (Not documented yet)

.KNOWN PROBLEMS:

* (Not documented yet)

[[opsi-405-releasenotes-eol]]
== Discontinuation

[[opsi-406-releasenotes-eol_server]]
=== Abkündigung: Distributionen für opsi-server


In diesem Kapitel werden die Abkündigungen aufgelistet. Diese Distributionsversionen werden aus verschiedenen Gründen nicht mehr weiter von opsi unterstützt.

* Univention Corporate Server: Die Versionen 3.0 und 3.1 sind von Univention abgekündigt und werden nicht mehr unterstützt.

* Debian 6 Squeeze

* Ubuntu Lucid 10.04

* OpenSuse 12.3

Siehe auch gesondertes Kapitel: <<opsi-406-releasenotes-supportmatrix>>.

[[opsi-406-releasenotes-eol_winclient]]
=== Abkündigung Clients: Windows Versionen

Ab opsi v 4.0.6 werden wir die Netbootpakete für 

* Windows 8 und 
* Server 2003 

nicht mehr weiter pflegen. Ebenso
planen wir für diese Windowsversionen die Unterstützung in den Update Abo’s einzustellen. Wer hierzu Fragen oder Probleme hat möge sich bei uns melden.

Siehe auch gesondertes Kapitel: <<opsi-406-releasenotes-netboot-windows>>.

[[opsi-406-releasenotes-eol_linclient]]
=== Abkündigung Clients: Linux Versionen

Ab opsi v 4.0.6 werden wir die Netbootpakete für 

* openSuse 12.3 
* Fedora20
* Ubuntu 10.04 (Lucid)
* Debian 6 (Squeeze)

nicht mehr weiter pflegen. Ebenso
planen wir für diese Windowsversionen die Unterstützung in den Update Abo’s einzustellen. Wer hierzu Fragen oder Probleme hat möge sich bei uns melden.

Siehe auch gesondertes Kapitel: <<opsi-manual-linux>>.

[[opsi-406-releasenotes-installation]]
== Installation notes

For safety reasons we recommend before installing the update to make a backup of your backends with opsi-backup:
[source,prompt]
----
opsi-backup create
----

The products contained in this release in many cases depend on each other. So do not try to install just a part of this update.

First update the server, then the opsi products.

When upgrading an existing opsi server your package manager may ask you if you want to replace `/etc/opsi/opsi.conf` with a newer version.
If this question appears and you did not change the mentioned file you can replace the file with the new one.
If you changed the file or are unsure please deny the replacement.

As it was described above, a new version of `/etc/opsi/opsi-product-updater.conf` may be suggested as update.
The new version gives also support for smtpusers with smtppasswords to systems that require this type authentication.
Besides the value to Exclude-Files (exclude = ^win* ) was removed, so the windows-netboot-products are not excluded anymore from the updates. 

We recommend to run ``opsi-setup --set-rights`` after the installation to make sure that the permissions on the used folders are set as expected. Please be aware that the execution of this task can last for many minutes.


[[opsi-406-releasenotes-installation-opsipackages]]
=== Notes for updating opsi-packets (Testing)

////
Bitte nachstehenden Block bei release nicht löschen sondern auskommentieren
////

For installing the testing server packets the opsi repository has to be changed from `opsi40` to `opsi40-testing`.

In case of Ubuntu 14.04: +
`deb http://download.opensuse.org/repositories/home:/uibmz:/opsi:/opsi40/xUbuntu_14.04 ./` +
replace with: +
`deb http://download.opensuse.org/repositories/home:/uibmz:/opsi:/opsi40-testing/xUbuntu_14.04 ./`

Then the packages can be updated. +
For example Ubuntu / Debian:
[source,prompt]
----
aptitude update
aptitude full-upgrade
----

For installing the testing opsi products you should add to the file: +
`/etc/opsi/opsi-product-updater.conf` +
the following section

[source,prompt]
----
[repository_opsi_406_testing]
baseUrl = http://download.uib.de
dirs = opsi4.0/testing/opsi-v406/products/localboot, opsi4.0/testing/opsi-v406/products/netboot
active = true
username =
password =
autoInstall = false
autoUpdate = true
autoSetup = false
onlyDownload = false
----

You may append the `dirs` line by:

* `, opsi4.0/testing/opsi-v406/opsi-linux`

* `, opsi4.0/testing/opsi-v406/opsi-local-image`


Set in the section `[repository_uib]` the following line:
[source,prompt]
----
active = false
----
Then execute the opsi-product-updater.
To install all packets:
[source,prompt]
----
opsi-product-updater -i -vv
----

To install updates only:
[source,prompt]
----
opsi-product-updater -vv
----

////
Bitte vorstehenden Block bei release nicht löschen sondern auskommentieren
////

////
The installation does not require any special action. It is performed within the normal updates of your server and opsi products.

First update the server according to the update command of your Linux distribution. +

We recommend to set in `/etc/opsi/opsi-product-updater.conf`
in the section `[repository_uib]` the following to get all products even if they start with win* :
[source,prompt]
----
excludes =
----

If you need the opsi-linux products you should append the `dirs` entry: +

[source,prompt]
----
dirs = opsi4.0/products/localboot, opsi4.0/products/netboot
----
by the path `opsi4.0/products/opsi-linux`

If you need the opsi-local-image products you should append the `dirs` entry
by the path `opsi4.0/products/opsi-local-image`

Then execute the opsi-product-updater.

[source,prompt]
----
opsi-product-updater -i -vv
----

To install updates only:
[source,prompt]
----
opsi-product-updater -vv
----

In case of a multi depot installation, first upgrade the config-server before upgrading the depot server.


If you want to use product-ids with a length of more than 32 characters and are using the MySQL-backend please update the table definition on your configserver with the following command:

[source,prompt]
----
opsi-setup --update-mysql
----

[[opsi-405-releasenotes-update-java]]
=== Hints for updating the Java Runtime Environment

The '{opsi-configed}' now requires a Java Runtime Enviromnent (JRE) on the computer on which
it is run, at least in version 7 (internal version 1.7).

If you do not run the '{opsi-configed}' on the server, e.g. because the server does not offer
a graphical user interface, opsi does not require a Java installation on the server at all.

In the other case, you must get a Java Runtime Engine at least in version 7 active.
If there is still an older version active you should deinstall the old one and install the new one.
For Ubuntu the commands are


[source,prompt]
----
apt-get remove openjdk-6-jre
apt-get remove openjdk-6-jre-lib
apt-get install openjdk-7-jre
----

Thereafter the command


[source,prompt]
----
java -version
----

should indicate that a least version 1.7.0 is running.

////

[[opsi-406-releasenotes-win10notes]]
== Hinweise zur Nutzung von Windows 10

[[opsi-406-releasenotes-win10notes-detect]]
=== Windows 10 Erkennung

Die opsi-winst Funktion `getMsVersionInfo` liefert bei Windows 8.1 den Wert 6.3
und bei Windows 10 den Wert '10.0'. Dies ist etwas verwirrend, zumal Windows 10 von der Architektur doch sehr nach NT6 aussieht. +
Wichtig ist dies aber vorallem bei der Unterscheidung zwischen NT5 und NT6.

Zum Vergleich von getMsVersionInfo mit einem String wie "6.0" dürfen Sie nicht einen Stringvergleich mit `<` oder `=` oder `>` verwenden, da der String "10" kleiner ist als der Sting "6" da 1 kleiner ist wie 6.

Richtig ist die Verwendung folgender Methode:

[source,winst]
----
if CompareDotSeparatedNumbers(getMsVersionInfo,"6.0") < "0"
  comment "We are on NT5"
else
  comment "We are on NT6"
endif
----

Ab opsi-winst 4.11.5 können Sie das auch lesbarer schreiben

[source,winst]
----
if CompareDotSeparatedNumbers(getMsVersionInfo, "<", "6.0")
  comment "We are on NT5"
else
  comment "We are on NT6"
endif
----

[[opsi-406-releasenotes-win10notes-helper]]
=== Windows 10 Hilfsprodukte

Zum Arbeiten mit Windows 10 insbesondere im Desktopbetrieb seien Ihnen folgende Produkte empfohlen:

* classic_shell: +
http://download.uib.de/opsi4.0/products/contribute/full-package/classic-shell_4.2.1-1.opsi

* config-win81-desktop: +
http://download.uib.de/opsi4.0/products/contribute/full-package/config-win81-desktop_4.0.5-3.opsi



include::../common/opsi_manual_samba4.asciidoc[]

include::../common/opsi_manual_linux.asciidoc[]

[[opsi-script]]
== opsi-script / opsi-winst 4.11.5

* Upgrade of the SSL libraries to 1.0.2c, update of the SSL protocol to TLS 1.2 

.In Files sections:

* `hardlink` <existing file> <new file> // since 4.11.5 [W/L] +
A existing <new file> will be over written. +
`hardlink` works only on filesystems that support hard links like NTFS and standard Linux filesystems.

* `symlink` <existing file> <new file> // since 4.11.5 [W/L] +
A existing <new file> will be over written. +
At Windows is `symlink` only available since NT6 and up ! 

* `rename` <old filename> <new filename> // since 4.11.5 [W/L] +
`move` <old filename> <new filename> // since 4.11.5 [W/L] +
There is no difference between `rename` and `move`, that are just two names for the same function +
A existing <new file> will be over written. +
 +
Windows: <new filename> may be located in a differen directory or volume / disk. In the second case (different volume / disk) the file will be copied  and than the original file will be deleted. +
If it is not possible to create the target file becaus the file is in use, then it can be overwritten only after a reboot. The '{opsi-winst}/opsi-script' default behaviour is therefore that a file in use will be marked for overwriting after the next reboot, AND the '{opsi-winst}/opsi-script' reboot flag is set. Setting the copy option `-c` turns the automatic reboot off. Instead normal processing continues, the copying will be completed only when a reboot is otherwise triggered. +
Creating Junctions at Windows is not supported right now. +
 +
Linux: <new filename> may be located in a different directory but not in a different filesystem. The Option `-c` will be ignored at Linux. +
 +
Example: 
[source,winst]
----
[Files_link_move]
del "$HomeTestFiles$\files\hardlink.txt"
hardlink "$HomeTestFiles$\files\dummy.txt" "$HomeTestFiles$\files\hardlink.txt"
del "$HomeTestFiles$\files\symlink.txt"
symlink "$HomeTestFiles$\files\dummy.txt" "$HomeTestFiles$\files\symlink.txt"
del "$HomeTestFiles$\files\temp\rename.txt"
del "$HomeTestFiles$\files\temp\move.txt"
copy "$HomeTestFiles$\files\dummy2.txt" "$HomeTestFiles$\files\temp\"
rename "$HomeTestFiles$\files\temp\dummy2.txt" "$HomeTestFiles$\files\temp\rename.txt"
copy "$HomeTestFiles$\files\dummy2.txt" "$HomeTestFiles$\files\temp\"
move "$HomeTestFiles$\files\temp\dummy2.txt" "$HomeTestFiles$\files\temp\move.txt"
----

* The function `del` and `delete`  +
ATTENTION changed behaviour: Similar like it is implemented for the copy command: +
If a system file is in use, then it can be deleted only after a reboot. The '{opsi-winst}/opsi-script' default behaviour is therefore that a file in use will be marked for delete after the next reboot, AND the '{opsi-winst}/opsi-script' reboot flag is set. Setting the copy option `-c` turns the automatic reboot off. Instead normal processing continues, the deleting will be completed only when a reboot is otherwise triggered. +
The Option `-c` will be ignored at Linux. .

.For-To Loop [W/L] 

* Useful for multiple calls of a single command or of a sub-section

* Syntax:

`for` %<temporary string variable>% `=` <start string> `to` <end string> `do` <one statement> //since 4.11.5 [W/L]

The temporary varibale %<temporary string variable>% must not be declared and is 
available in the called sub-section as constant.

* Example: 

Code from opsi-winst-test:
[source,winst]
----
message "for to loop"
set $ConstTest$ = "12345"
set $CompValue$ = ""
for %s% = "1" to "5" do sub_iteration_test
if ($ConstTest$ = $CompValue$)
	comment "passed"
else
	set $TestResult$ = "not o.k."
	LogWarning "failed"
endif

[sub_iteration_test]
set $CompValue$ = $CompValue$ + '%s%'
----

produces the log:

[source,winst]
----
message for to loop
Set  $ConstTest$ = "12345"
  The value of the variable "$ConstTest$" is now: "12345"
Set  $CompValue$ = ""
  The value of the variable "$CompValue$" is now: ""

~~~~~~ Looping through:  '1', '2', '3', '4', '5'
  
  ~~~~~~~ Start Sub ~~~~~~~  sub_iteration_test
  Set  $CompValue$ = $CompValue$ + '1'
    The value of the variable "$CompValue$" is now: "1"
  
  ~~~~~~~ End Sub   ~~~~~~~  sub_iteration_test
  
  
  ~~~~~~~ Start Sub ~~~~~~~  sub_iteration_test
  Set  $CompValue$ = $CompValue$ + '2'
    The value of the variable "$CompValue$" is now: "12"
  
  ~~~~~~~ End Sub   ~~~~~~~  sub_iteration_test
  
  
  ~~~~~~~ Start Sub ~~~~~~~  sub_iteration_test
  Set  $CompValue$ = $CompValue$ + '3'
    The value of the variable "$CompValue$" is now: "123"
  
  ~~~~~~~ End Sub   ~~~~~~~  sub_iteration_test
  
  
  ~~~~~~~ Start Sub ~~~~~~~  sub_iteration_test
  Set  $CompValue$ = $CompValue$ + '4'
    The value of the variable "$CompValue$" is now: "1234"
  
  ~~~~~~~ End Sub   ~~~~~~~  sub_iteration_test
  
  
  ~~~~~~~ Start Sub ~~~~~~~  sub_iteration_test
  Set  $CompValue$ = $CompValue$ + '5'
    The value of the variable "$CompValue$" is now: "12345"
  
  ~~~~~~~ End Sub   ~~~~~~~  sub_iteration_test
  

~~~~~~ End Loop
If
  $ConstTest$ = $CompValue$   <<< result true
  ($ConstTest$ = $CompValue$)   <<< result true
Then
  comment: passed
Else
EndIf
----

.Switch / Case Statement [W/L] 

* Syntax:

----
Switch <string expression> 
  Case <string const>
    <statement(s)> 
  EndCase
  [DefaultCase
    <statement(s)> 
   EndCase]
EndSwitch
----

* Examples:

Code from opsi-winst-test:
[source,winst]
----
set $ConstTest$ = "5"
Switch $ConstTest$
	Case "1"
		set $CompValue$ = "1"
	EndCase
	Case "2"
		set $CompValue$ = "2"
	EndCase
	Case "3"
		set $CompValue$ = "3"
	EndCase
	Case "4"
		set $CompValue$ = "4"
	EndCase
	Case "5"
		set $CompValue$ = "5"
	EndCase
	Case "6"
		set $CompValue$ = "6"
	EndCase
	Case "7"
		set $CompValue$ = "7"
	EndCase
	DefaultCase
		set $CompValue$ = "notexisting"
	EndCase
EndSwitch
if ($ConstTest$ = $CompValue$)
	comment "passed"
else
	set $TestResult$ = "not o.k."
	LogWarning "failed"
endif
----

.
[source,winst]
----
[Sub_check_exitcode]
comment "Test for installation success via exit code"
set $ExitCode$ = getLastExitCode
; informations to exit codes see
; http://msdn.microsoft.com/en-us/library/aa372835(VS.85).aspx
; http://msdn.microsoft.com/en-us/library/aa368542.aspx
Switch $ExitCode$
	Case "0"
		comment "Looks good: setup program gives exitcode zero"
	EndCase
	Case "1605"
		comment "ERROR_UNKNOWN_PRODUCT	1605"
		comment "This action is only valid for products that are currently installed."
		comment "Uninstall of a not installed product failed - no problem"
	EndCase
	Case "1641"
		comment "looks good: setup program gives exitcode 1641"
		comment "ERROR_SUCCESS_REBOOT_INITIATED	164"	
		comment "The installer has initiated a restart." 
		comment "This message is indicative of a success."
		ExitWindows /Reboot
	EndCase
	Case "3010"
		comment "looks good: setup program gives exitcode 3010"
		comment "ERROR_SUCCESS_REBOOT_REQUIRED	3010"
		comment "A restart is required to complete the install."
		comment "This message is indicative of a success."
		ExitWindows /Reboot
	EndCase
	DefaultCase
		logError "Fatal: Setup program gives an unknown exitcode unequal zero: " + $ExitCode$
		isFatalError "Exit Code: "+ $ExitCode$
	EndCase
EndSwitch
----

.Parameter for sections

* Using `ShellBatch`, `ShellInAnIcon`, `DosBatch`, `DosInAnIcon`, `ExecWith` +
you may now use as parameter not only string constants but also string variables (but no string functions).

Example:

Code from opsi-winst-test:
[source,winst]
----
comment "Testing parameters for ShellBatch"
set $ConstTest$ = "Hello world"
set $list$ = getOutStreamFromSection('DosInAnIcon_with_parameter world')
set $CompValue$ = takeString(2,$list$)
if ($ConstTest$ = $CompValue$)
	comment "ShellBatch parameter passed"
else
	set $TestResult$ = "not o.k."
	LogWarning "ShellBatch parameter failed"
endif

comment "Testing parameters for ShellBatch"
set $ConstTest$ = "Hello world"
set $tmp$ = "world"
set $list$ = getOutStreamFromSection('DosInAnIcon_with_parameter $tmp$')
set $CompValue$ = takeString(2,$list$)
if ($ConstTest$ = $CompValue$)
	comment "ShellBatch parameter passed"
else
	set $TestResult$ = "not o.k."
	LogWarning "ShellBatch parameter failed"
endif
----

produces the log:

[source,winst]
----
comment: Testing parameters for ShellBatch
Set  $ConstTest$ = "Hello world"
  The value of the variable "$ConstTest$" is now: "Hello world"
Set  $list$ = getOutStreamFromSection('DosInAnIcon_with_parameter world')
  
  DosInAnIcon_with_parameter
    c:\opsi.org\tmp\_opsiscript_Kj23Ej02.cmd saved back
    Executing "cmd.exe" /C c:\opsi.org\tmp\_opsiscript_Kj23Ej02.cmd world
    ExitCode 0
                
                output:
                --------------
                
                C:\Windows\system32>echo Hello world 
                Hello world
    
    The file: c:\opsi.org\tmp\_opsiscript_Kj23Ej02.cmd has been deleted
    retrieving strings from getOutStreamFromSection [switch to loglevel 7 for debugging]
        (string   0)
        (string   1)C:\Windows\system32>echo Hello world 
        (string   2)Hello world
        
Set  $CompValue$ = takeString(2,$list$)
    retrieving strings from $list$ [switch to loglevel 7 for debugging]
        (string   0)
        (string   1)C:\Windows\system32>echo Hello world 
        (string   2)Hello world
        
  The value of the variable "$CompValue$" is now: "Hello world"
If
  $ConstTest$ = $CompValue$   <<< result true
  ($ConstTest$ = $CompValue$)   <<< result true
Then
  comment: ShellBatch parameter passed
Else
EndIf

comment: Testing parameters for ShellBatch
Set  $ConstTest$ = "Hello world"
  The value of the variable "$ConstTest$" is now: "Hello world"
Set  $tmp$ = "world"
  The value of the variable "$tmp$" is now: "world"
Set  $list$ = getOutStreamFromSection('DosInAnIcon_with_parameter $tmp$')
  
  DosInAnIcon_with_parameter
    c:\opsi.org\tmp\_opsiscript_Kz50Gi50.cmd saved back
    Executing "cmd.exe" /C c:\opsi.org\tmp\_opsiscript_Kz50Gi50.cmd world
    ExitCode 0
                
                output:
                --------------
                
                C:\Windows\system32>echo Hello world 
                Hello world
    
    The file: c:\opsi.org\tmp\_opsiscript_Kz50Gi50.cmd has been deleted
    retrieving strings from getOutStreamFromSection [switch to loglevel 7 for debugging]
        (string   0)
        (string   1)C:\Windows\system32>echo Hello world 
        (string   2)Hello world
        
Set  $CompValue$ = takeString(2,$list$)
    retrieving strings from $list$ [switch to loglevel 7 for debugging]
        (string   0)
        (string   1)C:\Windows\system32>echo Hello world 
        (string   2)Hello world
        
  The value of the variable "$CompValue$" is now: "Hello world"
If
  $ConstTest$ = $CompValue$   <<< result true
  ($ConstTest$ = $CompValue$)   <<< result true
Then
  comment: ShellBatch parameter passed
Else
EndIf
----

.Functions and Statements

* `UpdateEnvironment` [W]: +
Sends Windows the signal to reload the environment values from the registry.
This statement may be called after any rocess that may have changed the environment (e.g. Registry section or setup program).
Even if the program that runs after the opsi-script get the new environment, the next process that is started (via DosBatch or Winbatch) from this opsi-script instance will still inherit the old environment. To start a subsequent process with the new environment you have to use `winbatch` with the `/RunElevated` parameter. +
Works only with NT6 and up.

Example:
[source,winst]
----
comment "Set Environment Variables and check for it ...."
Registry_add_environment /sysnative
UpdateEnvironment

comment "This will not work because the environment is inherited from the running process"
set $list$ = shellCall('set opsi-script-test')

comment "This will work because this new started process will get a new environment"
winbatch_check_environment /RunElevated
if ("42" = getlastExitCode)
	comment "passed"
else
	comment "failed"
endif

[Registry_add_environment]
openkey [HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\Environment]
set "opsi-script-test"="deleteme"

[winbatch_check_environment]
"%system%\cmd.exe" /c "if %opsi-script-test%==deleteme exit 42"
----

* `sleepseconds` [W/L] +
As parameter for the count of seconds you may now use not only string constants but also string variables or string functions.

* `MaximizeWinst` [W/L] +
Sets the '{opsi-winst}/opsi-script' window to the 'maximized' mode

* The search path for `include_insert` and `include_append` is extended by `%ScriptPath%/../lib` and works in the same way now also for external `sub` -section files.  +

The searche rule is: +
<file name> may be:

* A complete path to an existing file. [W/L]

* A existing file in `%ScriptPath%` [W/L]

* A file in `%opsiScriptHelperPath%\lib` [W] +
Is equivalent to: '%ProgramFiles32Dir%\opsi.org\opsiScriptHelper\lib'

* A existing file in `%ScriptPath%/../lib` [W/L]

* A existing file in `%WinstDir%\lib` [W]

The tests for the location of the <file name> are done in the order above. '{opsi-winst}/opsi-script' uses the first file it finds that has a matching name.

* `getProductPropertyList(`<propname>,<default value>`)` +
Is available since 4.11.3 with <default value> as string expression. +
Since 4.11.5.6 `<default value>` may also be a string list expression.

* `LoadTextFileWithEncoding(` <file name> `,` <encoding>`)` [W/L] +
reads the file <file name> and generates the string list, that contains all lines of the file. The string will be reencoded from <encoding> to system encoding.

* `removeFromListByContaining(`<search string>`,` <target list>`)` [W/L] +
Returns a copy of <target list> where all lines that contains <search string> are removed. The match to <search string> is case insensitiv.

* `removeFromListByContaining(`<search list>`,` <target list>`)` [W/L] +
Returns a copy of <target list> where all lines are removed that contains a string out of <search list>. The match to <search list> is case insensitiv.

Examples:

File "%Scriptpath%\test-files\encoding\10lines.txt" is:
----
line 1
line 2
line 3
line 4
line 5
line 6
line 7
line 8
line 9
line 10
----

Code from opsi-winst-test:

[source,winst]
----
comment ""
comment "-------------------------------------"
comment "Testing: "
message "removeFromListByContaining"
set $string1$ = "%Scriptpath%\test-files\encoding\10lines.txt"
set $list1$ = loadTextFileWithEncoding($string1$, "cp1252")
comment "search with string"
comment "search with string constant"
set $ConstTest$ = "9"
set $list2$ = removeFromListByContaining("line 5", $list1$)
set $CompValue$ = count($list2$)
if ($ConstTest$ = $CompValue$)
	comment "passed"
else
	set $TestResult$ = "not o.k."
	LogWarning "failed"
endif

set $ConstTest$ = "9"
set $list2$ = removeFromListByContaining("LINE 5", $list1$)
comment "the match is case insensitive"
set $CompValue$ = count($list2$)
if ($ConstTest$ = $CompValue$)
	comment "passed"
else
	set $TestResult$ = "not o.k."
	LogWarning "failed"
endif


set $ConstTest$ = "0"
set $list2$ = removeFromListByContaining("line", $list1$)
set $CompValue$ = count($list2$)
if ($ConstTest$ = $CompValue$)
	comment "passed"
else
	set $TestResult$ = "not o.k."
	LogWarning "failed"
endif

set $ConstTest$ = "8"
comment "searchstr 1 will found in 'line 1' and 'line 10'"
set $list2$ = removeFromListByContaining("1", $list1$)
set $CompValue$ = count($list2$)
if ($ConstTest$ = $CompValue$)
	comment "passed"
else
	set $TestResult$ = "not o.k."
	LogWarning "failed"
endif

comment "search with string function"
set $ConstTest$ = "9"
set $list2$ = removeFromListByContaining(trim(" line 5 "), $list1$)
set $CompValue$ = count($list2$)
if ($ConstTest$ = $CompValue$)
	comment "passed"
else
	set $TestResult$ = "not o.k."
	LogWarning "failed"
endif

comment "search with string variable"
set $string1$ = "line 5"
set $ConstTest$ = "9"
set $list2$ = removeFromListByContaining($string1$, $list1$)
set $CompValue$ = count($list2$)
if ($ConstTest$ = $CompValue$)
	comment "passed"
else
	set $TestResult$ = "not o.k."
	LogWarning "failed"
endif

comment "search with string list"
comment "search with string list variable"
set $list3$ = createStringList ('1', '2', '3', '4', '5')
comment "searchstr 1 will found in 'line 1' and 'line 10'"
set $ConstTest$ = "4"
set $list2$ = removeFromListByContaining($list3$, $list1$)
set $CompValue$ = count($list2$)
if ($ConstTest$ = $CompValue$)
	comment "passed"
else
	set $TestResult$ = "not o.k."
	LogWarning "failed"
endif

comment "search with string list variable"
comment "searchstr 1 will found in 'line 1' and 'line 10'"
set $ConstTest$ = "4"
set $list2$ = removeFromListByContaining(createStringList ('1', '2', '3', '4', '5'), $list1$)
set $CompValue$ = count($list2$)
if ($ConstTest$ = $CompValue$)
	comment "passed"
else
	set $TestResult$ = "not o.k."
	LogWarning "failed"
endif
----

* String function `unquote2(<string>,<quote-string>)` [W/L] +
Acts like `unquote(<string>,<quote-string>)` with the following differences: +
If <quote-string> contains only one char, so this char will be used as 'start quote char' and 'end quote char'. If <quote-string> contains two chars, so the first char will be used as 'start quote char' and the second char as 'end quote char'. Example: a <quote-string> like "()" will unquote a string like '(hello)'. +
The function returns the unchanged <string> if not ('start quote char' AND 'end quote char') is found.

* Logging in the `silent_install` mode:
If `opsi-script / opsi-winst` is started from a `silent_install` event (e.g. to run inventory scripts in the background), so any logs produced in this case will be written to the opsi-server in the append mode.

* String function `GetShortWinPathName(<longpath string>)` [W] +
Returns the short path (8.3) from <longpath string>. If ther is no short path for <longpath string>, so you will get an empty string. +
Example: `GetShortWinPathName("C:\Program Files (x86)")` returns `"C:\PROGRA~2"`

* `GetConfidentialProductProperty (` <PropertyName>, <DefaultValue>`)` //since 4.11.5.2 +
like `GetProductProperty` but handles the resulting value as confidential string. +
Useful for getting passwords without logging. see also `SetConfidential`

* Boolean function `CompareDotSeparatedStrings(`<str1>,<relation str>,<str2>`)`  //since 4.11.5.2: [W/L] +
compares two strings of the form <str>[.<str>[.<str>[.<str>]]] +
by the <relation str> which may be one of [<,<=,=,>=,>]. +
see also: string function `CompareDotSeparatedStrings(`<string1>, <string2>`)`

* Boolean function `CompareDotSeparatedNumbers(`<str1>,<relation str>,<str2>`)`  //since 4.11.5.2: [W/L] +
compares two strings of the form <number>[.<number>[.<number>[.<number>]]] +
by the <relation str> which may be one of [<,<=,=,>=,>]. +
see also: string function `CompareDotSeparatedNumbers(`<string1>, <string2>`)`

Example: +
The code:
[source,winst]
----
set $string1$ = "1.2.30.4.5"
set $string2$ = "1.20.30.4.5"
if CompareDotSeparatedNumbers($string1$, "<", $string2$)
	comment "passed"
else
	set $TestResult$ = "not o.k."
	LogWarning "failed"
endif
if CompareDotSeparatedNumbers($string1$, "<=", $string2$)
	comment "passed"
else
	set $TestResult$ = "not o.k."
	LogWarning "failed"
endif
if CompareDotSeparatedNumbers($string1$, "=<", $string2$)
	comment "passed"
else
	set $TestResult$ = "not o.k."
	LogWarning "failed"
endif
if CompareDotSeparatedNumbers($string1$, "=", $string2$)
	set $TestResult$ = "not o.k."
	LogWarning "failed"
else
	comment "passed"
endif
if CompareDotSeparatedNumbers($string1$, ">=", $string2$)
	set $TestResult$ = "not o.k."
	LogWarning "failed"
else
	comment "passed"
endif
if CompareDotSeparatedNumbers($string1$, "=>", $string2$)
	set $TestResult$ = "not o.k."
	LogWarning "failed"
else
	comment "passed"
endif
if CompareDotSeparatedNumbers($string1$, ">", $string2$)
	set $TestResult$ = "not o.k."
	LogWarning "failed"
else
	comment "passed"
endif
----
produce the log:
[source,winst]
----
Set  $string1$ = "1.2.30.4.5"
  The value of the variable "$string1$" is now: "1.2.30.4.5"
Set  $string2$ = "1.20.30.4.5"
  The value of the variable "$string2$" is now: "1.20.30.4.5"
If
    Checking if "1.2.30.4.5" is "<" than / as "1.20.30.4.5"
  CompareDotSeparatedNumbers($string1$, "<", $string2$)   <<< result true
Then
  comment: passed
Else
EndIf
If
    Checking if "1.2.30.4.5" is "<=" than / as "1.20.30.4.5"
  CompareDotSeparatedNumbers($string1$, "<=", $string2$)   <<< result true
Then
  comment: passed
Else
EndIf
If
    Checking if "1.2.30.4.5" is "=<" than / as "1.20.30.4.5"
  CompareDotSeparatedNumbers($string1$, "=<", $string2$)   <<< result true
Then
  comment: passed
Else
EndIf
If
    Checking if "1.2.30.4.5" is "=" than / as "1.20.30.4.5"
  CompareDotSeparatedNumbers($string1$, "=", $string2$)   <<< result false
Then
Else
  comment: passed
EndIf
If
    Checking if "1.2.30.4.5" is ">=" than / as "1.20.30.4.5"
  CompareDotSeparatedNumbers($string1$, ">=", $string2$)   <<< result false
Then
Else
  comment: passed
EndIf
If
    Checking if "1.2.30.4.5" is "=>" than / as "1.20.30.4.5"
  CompareDotSeparatedNumbers($string1$, "=>", $string2$)   <<< result false
Then
Else
  comment: passed
EndIf
If
    Checking if "1.2.30.4.5" is ">" than / as "1.20.30.4.5"
  CompareDotSeparatedNumbers($string1$, ">", $string2$)   <<< result false
Then
Else
  comment: passed
EndIf
----



.opsi-Linux support:

* Winbatch sections are now also available at Linux.

* LinkFolder sections are now also available at Linux.. +
Possible BaseFolder are: `common_programs`,`common_autostart`,`desktop`, `autostart` +
Subfolder is always "" (empty).
The Link Option `icon_index` is ignored. +
As additional link option we have: `link_categories`. Here you may use the following values, separated and terminated by a semikolon: `AudioVideo`, `Audio`, `Video`, `Development`, `Education`, `Game`, `Graphics`, `Network`, `Office`, `Settings`, `System`, `Utility` +
The LinkFolder sections at Linux work with different desktop system (so they work according to the freedesktop.org standards). 

* `shellCall` will now give the correct exit code of the called command. +
Technical background: The called command is extended by ` || exit $?` so that it give the exit code of the called command.

[[opsi-406-releasenotes-python-opsi]]
== python-opsi 4.0.6.

The Python-library used by opsi has received a lot of improvements and
bugfixes.

Functionality used by external scripts have been moved into python-opsi
to reduce maintenance efforts and make the functionality usable in other
applications.

This process has resulted in the following new modules:
`OPSI.Util.Task.Rights` allows setting the rights for opsi on files and
directories.
`OPSI.Util.Task.UpdateBackend.MySQL` can be used to update the MySQL
backend.
`OPSI.Util.Task.Samba` can be used to configure Samba for the use with
opsi.

The sourcecode of the new modules was improved in many place to be
future-proff and more efficent.

The function `OPSI.Types.forceList` is now able to work with tuples and
generators. Generators will be consumed if they are converted into a
list.

Typechecks inside many methods have been reworked so that not only the
baseclasses `dict` and `list` but also there subclasses are recognized.

We improved error messages to be more helpful when creating new objects
through the commandline.

The module `OPSI.Util.Task.Certificate` now follows RFC5820 and increases
existing serial numbers for certificates. If no serial number is found
a randome one will be generated. This avoids problems caused by equal
serial numbers.
This gets used i.e. when running `opsi-setup --renew-opsiconfd-cert`.

`OPSI.SharedAlgorithm` now does not rely on evaluating strings anymore
because this wasn't used by any official component.

Alongside this change the methods for defining the ordering of products
for installation have been overhauled. Creating a circular dependency
will result in an error being thrown in any method.
In addition to this a logentry will be created for every product
depedency that is contrary to any product priority and would lead to
unforseeable results.
For easier log interpretation many backend objects now have improved
representations.

Calling `backend_getSharedAlgorithm` will now result in throwing an
exception.

The method `OPSI.System.Windows.mount` now accepts `dynamic` as a mount
target. This makes it possible to let the agent find a free mountpoint
for the depot share.
To use this feature you need to set the property
`clientconfig.depot.drive` of a client to `dynamic`. Adding the property
on the opsi configserver can be achieved by running
`opsi-setup --init-current-config`.
Thanks to Markus Kötter for the initial patch.

Driver integration now handles directories with names ending in an
underscore as if they were ending on a dot. This fixes problems
regarding filesystem limitations on Windows.
As an example if you'd be using the integration of drivers via byAudit
for computers of a company called `Dilbert. Inc.` you now would name the
folder `Dilbert Inc_`.

The cleanup of backends through `OPSI.Util.Task.CleanupBackend` has
received speed improvements. Mass operations will be split into smaller
parts to avoid performance bottlenecks.

The packaging has been overhauled to follow current recommendations and
requirements of the various disitributions. Users or groups will not be
created with an specific ID anymore to avoid conflicts with the IDs
being already in use.

Communicating with the webservice currently leads to a a HTTP header
"content-type" that does not match the real content encoding.
It now is possible to activate a RFC 2616 compatible behaviour by
creating the file `/etc/opsi/opsi.header.fix.enable` and restarting the
service. This makes it easier to communicate with the client through
third party applications.
Because this new beheviour may lead to communication failures with clients
expecting the broken behaviour this is disabled by default.
The client components provided with this release have been updated so
that they can work with both.

* opsi server parts: +

There are many improvements and bugfixes.

** The info page for the opsi server now collects information about the
amount of methods called.

** The size limit for logfiles created through opsiconfd can now be
configured. Due to historical reasons there was a limit of ~5MB per file.
This behaviour will be kept as default. To change the behaviour the
attribute `max log size` in the sektion `global` in `/etc/opsi/opsiconfd.conf`
can be adjusted. A value of 0 disables the limiting.

To avoid logs growing unlimited the configuration file for logrotate
has been updated. You can find it at `/etc/logrotate.d/opsiconfd`.
This file contains a new configuration regarding `/var/log/opsi/package.log`.
The package log was not limited in size before.

opsiconfd is able to recognize rotated logs and also uses them when
reading logs through the service.

** In the MySQL backend all columns referencing the ID of a host are now
the same size of 255 characters. Newly created backend automatically
receive this size. Old backends have to be adjusted manually through
running `opsi-setup --update-mysql`.

** If the connection to the databse fails during initialisating the
MySQL backend there will be a 5 seconds wait with an additional try to
connect to the database.

** The tools  `opsi-product-updater`, `opsi-newprod` and
`opsi-package-manager` now al use the same function to set the rights
to avoid inconsistent access rights.

** A patch provided by Antoine Guevara allows to use arbitrary subjects
for e-mails sended by `opsi-product-updater`.
The subject can be set through the attribute `subject` in the section
`notification` in `/etc/opsi/opsi-product-updater.conf`.

** The tool `opsi-admin` gained a new task: +
setActionRequestWhereOutdatedWithDependencies
It has similar behaviour like setActionRequestWhereOutdated but also
takes any depedencies into account.
Thanks for Daniel Koch for providing the patch.

** Running `opsi-admin` in non-interactive mode now will return exitcodes
other than 0 if any problems occured.
To keep the previous behaviour where any action would result in an
exitcode 0 you must supply `--exit-zero` to the call.


[[opsi-406-releasenotes-netboot-windows]]
== opsi Support Matrix Windows Clients

Im folgenden finden Sie eine Übersicht auf welchen Windows Plattformen opsi
als Client läuft.

include::../common/opsi_manual_supportmatrix-winclient.asciidoc[]



[[opsi-406-releasenotes-misc]]
== Miscellaneous


[[opsi-406-releasenotes-misc-changelogs]]
=== Changelogs:

###################################