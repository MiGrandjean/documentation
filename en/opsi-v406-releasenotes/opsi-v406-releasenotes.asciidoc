////
; Copyright (c) uib gmbh (www.uib.de)
; This documentation is owned by uib
; and published under the german creative commons by-sa license
; see:
; http://creativecommons.org/licenses/by-sa/3.0/de/
; http://creativecommons.org/licenses/by-sa/3.0/de/legalcode
; english:
; http://creativecommons.org/licenses/by-sa/3.0/
; http://creativecommons.org/licenses/by-sa/3.0/legalcode
;
; credits: http://www.opsi.org/credits/
////

////
;***************************************************************************
; Subversion:
; $Revision:  $ $Author: oertel $
; $Date: $
;***************************************************************************
////

:Author:    uib gmbh
:Email:     info@uib.de
:Revision:  4.0.6
:doctype:   book

// Include common opsi terms
include::../common/opsi_terms.asciidoc[]

= opsi Version 4.0.6 Release Notes

// Include common opsi copyright
include::../common/opsi_manual_copyright.asciidoc[]

[[opsi-406-releasenotes-overview]]
== Overview of the new features

The opsi Service Release 4.0.6 comes with a whole bunch of new features and improvements. Here a survey:

* with opsi 4.0.6 (exclusively) the following distributions are supported as opsi-server: +
** Ubuntu: 12.04 (Precise), 14.04 (Trusty), 14.10 (Utopic Unicorn)
** Debian: 6.0 (Squeeze), 7.0 (Wheezy)
** Univention Corporate Server (UCS): 3.2, 4.0
** openSUSE 12.3, 13.1
** SLES 11SP3, 12
** RHEL 6, 7
** CentOS 6, 7

If you are using an OS version which is not contained in the list above, we recommend updating the OS before installing opsi v 4.0.6.

* New opsi-bootimage based on Ubuntu Precise / Kernel 3.15.1 supporting new hardware.

* Windows netboot products +
** winpe Partition are now formatted with NTFS (on non UEFI Systems).

* opsi-winst / opsi-script (4.11.5.2): +

** Files commands for hardlinks, symbolic links, Rename and Move in Files sections

** For-To Loop

** Switch / Case Statement

** New Stringlist function: `removeFromListByContaining`

** New Stringlist function: `LoadTextFileWithEncoding(` <file name> `,` <encoding>`)`

** New String function `unquote2(<string>,<quote-string>)`

** New String function `GetShortWinPathName(<longpath string>)`

** New String function `GetConfidentialProductProperty (` <PropertyName>, <DefaultValue>`)`

** New boolean function `CompareDotSeparatedNumbers(<str1>, <relationstr>, <str2>)`

** New boolean function `CompareDotSeparatedStrings(<str1>, <relationstr>, <str2>)`

** New statement `UpdateEnvironment`. The call of `UpdateEnvironment` forces Windows to reload the environment variables from the registry (NT6 only).

** Files command `del`: ATTENTION changed behaviour: Similar like it is implemented for the copy command: +
If a system file is in use, then it can be deleted only after a reboot. The '{opsi-winst}/opsi-script' default behaviour is therefore that a file in use will be marked for delete after the next reboot, AND the '{opsi-winst}/opsi-script' reboot flag is set. Setting the copy option `-c` turns the automatic reboot off. Instead normal processing continues, the deleting will be completed only when a reboot is otherwise triggered.

** Upgrade of the SSL libraries to 1.0.2a, update of the SSL protocol to TLS 1.2

** See special chapter: <<opsi-script>>

* opsi-configed:

** (Not documented yet)

* opsi-client-agent: 

** (Not documented yet)

* python-opsi:

** (Not documented yet)

* New optional config: `clientconfig.depot.user` to configure `domain\user` for pcpatch

////
For details please refer to the opsi-v405-releasenotes manual and the revised opsi manuals.
////

[[opsi-406-releasenotes-knownbugs]]
== Known Bugs / Known Problems

.KNOWN BUGS:

* (Not documented yet)

.KNOWN PROBLEMS:

* (Not documented yet)

[[opsi-405-releasenotes-eol]]
== Discontinuation

* (Not documented yet)


[[opsi-405-releasenotes-eol_windows]]
=== Discontinuation: Windows versions

With opsi v 4.0.5 the maintenance of the netboot packets for Windows Vista and Server 2008 is discontinued. Also the update abonnements will not support these Windows versions anymore. For questions or problems regarding the discontinuation please contact us.

Windows XP is not supported by Microsoft anymore and support for Windows 2003 Server ends in 2015. Because of the still frequent use of these versions, we will continue to maintain these packages for some time. Nevertheless we announce the discontinuation in short time and it is recommended to updade the clients to recent Windows versions (or Linux).

[[opsi-406-releasenotes-installation]]
== Installation notes

For safety reasons we recommend before installing the update to make a backup of your backends with opsi-backup:
[source,prompt]
----
opsi-backup create
----

The products contained in this release in many cases depend on each other. So do not try to install just a part of this update.

First update the server, then the opsi products.

When upgrading an existing opsi server your package manager may ask you if you want to replace `/etc/opsi/opsi.conf` with a newer version.
If this question appears and you did not change the mentioned file you can replace the file with the new one.
If you changed the file or are unsure please deny the replacement.

As it was described above, a new version of `/etc/opsi/opsi-product-updater.conf` may be suggested as update.
The new version gives also support for smtpusers with smtppasswords to systems that require this type authentication.
Besides the value to Exclude-Files (exclude = ^win* ) was removed, so the windows-netboot-products are not excluded anymore from the updates. 

We recommend to run ``opsi-setup --set-rights`` after the installation to make sure that the permissions on the used folders are set as expected. Please be aware that the execution of this task can last for many minutes.

[[opsi-406-releasenotes-update-opsivm]]
=== Installation notes regarding opsi server vm Version 4.0.6

During the 'opsi-depotserver' upgrade you may be asked again for information about a SSL certificate preparation.

[[opsi-406-releasenotes-installation-opsipackages]]
=== Notes for updating opsi-packets

////
Bitte nachstehenden Block bei release nicht löschen sondern auskommentieren
////

For installing the testing server packets the opsi repository has to be changed from `opsi40` to `opsi40-testing`.

In case of Ubuntu 14.04: +
`deb http://download.opensuse.org/repositories/home:/uibmz:/opsi:/opsi40/xUbuntu_14.04 ./` +
replace with: +
`deb http://download.opensuse.org/repositories/home:/uibmz:/opsi:/opsi40-testing/xUbuntu_14.04 ./`

Then the packets can be updated. +
For example Ubuntu / Debian:
[source,prompt]
----
aptitude update
aptitude full-upgrade
----

For installaing the testing opsi products
`/etc/opsi/opsi-product-updater.conf`

[source,prompt]
----
[repository_opsi_406_testing]
baseUrl = http://download.uib.de
dirs = dirs = opsi4.0/testing/opsi-v406/products/localboot, opsi4.0/testing/opsi-v406/products/netboot, opsi4.0/testing/opsi-v405/opsi-linux
active = true
username = 
password = 
autoInstall = false
autoUpdate = true
autoSetup = false
onlyDownload = false 
----

in der Sektion `[repository_uib]` folgende Zeile zu setzen:
[source,prompt]
----
active = false
----
Then execute the opsi-product-updater.
To install all packets:
[source,prompt]
----
opsi-product-updater -i -vv
----

To install updates only:
[source,prompt]
----
opsi-product-updater -vv
----

////
Bitte vorstehenden Block bei release nicht löschen sondern auskommentieren
////

////
The installation does not require any special action. It is performed within the normal updates of your server and opsi products.

First update the server according to the update command of your Linux distribution. +

We recommend to set in `/etc/opsi/opsi-product-updater.conf`
in the section `[repository_uib]` the following to get all products even if they start with win* :
[source,prompt]
----
excludes =
----

If you need the opsi-linux products you should append the `dirs` entry: +

[source,prompt]
----
dirs = opsi4.0/products/localboot, opsi4.0/products/netboot
----
by the path `opsi4.0/products/opsi-linux`

If you need the opsi-local-image products you should append the `dirs` entry
by the path `opsi4.0/products/opsi-local-image`

Then execute the opsi-product-updater.

[source,prompt]
----
opsi-product-updater -i -vv
----

To install updates only:
[source,prompt]
----
opsi-product-updater -vv
----

In case of a multi depot installation, first upgrade the config-server before upgrading the depot server.


If you want to use product-ids with a length of more than 32 characters and are using the MySQL-backend please update the table definition on your configserver with the following command:

[source,prompt]
----
opsi-setup --update-mysql
----

[[opsi-405-releasenotes-update-java]]
=== Hints for updating the Java Runtime Environment

The '{opsi-configed}' now requires a Java Runtime Enviromnent (JRE) on the computer on which
it is run, at least in version 7 (internal version 1.7).

If you do not run the '{opsi-configed}' on the server, e.g. because the server does not offer
a graphical user interface, opsi does not require a Java installation on the server at all.

In the other case, you must get a Java Runtime Engine at least in version 7 active.
If there is still an older version active you should deinstall the old one and install the new one.
For Ubuntu the commands are


[source,prompt]
----
apt-get remove openjdk-6-jre
apt-get remove openjdk-6-jre-lib
apt-get install openjdk-7-jre
----

Thereafter the command


[source,prompt]
----
java -version
----

should indicate that a least version 1.7.0 is running.

////
[[opsi-script]]
== opsi-script / opsi-winst 4.11.5.2

* Upgrade of the SSL libraries to 1.0.2a, update of the SSL protocol to TLS 1.2 

.In Files sections:

* `hardlink` <existing file> <new file> // since 4.11.5 [W/L] +
A existing <new file> will be over written. +
`hardlink` works only on filesystems that support hard links like NTFS and standard Linux filesystems.

* `symlink` <existing file> <new file> // since 4.11.5 [W/L] +
A existing <new file> will be over written. +
At Windows is `symlink` only available since NT6 and up ! 

* `rename` <old filename> <new filename> // since 4.11.5 [W/L] +
`move` <old filename> <new filename> // since 4.11.5 [W/L] +
There is no difference between `rename` and `move`, that are just two names for the same function +
A existing <new file> will be over written. +
 +
Windows: <new filename> may be located in a differen directory or volume / disk. In the second case (different volume / disk) the file will be copied  and than the original file will be deleted. +
If it is not possible to create the target file becaus the file is in use, then it can be overwritten only after a reboot. The '{opsi-winst}/opsi-script' default behaviour is therefore that a file in use will be marked for overwriting after the next reboot, AND the '{opsi-winst}/opsi-script' reboot flag is set. Setting the copy option `-c` turns the automatic reboot off. Instead normal processing continues, the copying will be completed only when a reboot is otherwise triggered. +
Creating Junctions at Windows is not supported right now. +
 +
Linux: <new filename> may be located in a different directory but not in a different filesystem. The Option `-c` will be ignored at Linux. +
 +
Example: 
[source,winst]
----
[Files_link_move]
del "$HomeTestFiles$\files\hardlink.txt"
hardlink "$HomeTestFiles$\files\dummy.txt" "$HomeTestFiles$\files\hardlink.txt"
del "$HomeTestFiles$\files\symlink.txt"
symlink "$HomeTestFiles$\files\dummy.txt" "$HomeTestFiles$\files\symlink.txt"
del "$HomeTestFiles$\files\temp\rename.txt"
del "$HomeTestFiles$\files\temp\move.txt"
copy "$HomeTestFiles$\files\dummy2.txt" "$HomeTestFiles$\files\temp\"
rename "$HomeTestFiles$\files\temp\dummy2.txt" "$HomeTestFiles$\files\temp\rename.txt"
copy "$HomeTestFiles$\files\dummy2.txt" "$HomeTestFiles$\files\temp\"
move "$HomeTestFiles$\files\temp\dummy2.txt" "$HomeTestFiles$\files\temp\move.txt"
----

* The function `del` and `delete`  +
ATTENTION changed behaviour: Similar like it is implemented for the copy command: +
If a system file is in use, then it can be deleted only after a reboot. The '{opsi-winst}/opsi-script' default behaviour is therefore that a file in use will be marked for delete after the next reboot, AND the '{opsi-winst}/opsi-script' reboot flag is set. Setting the copy option `-c` turns the automatic reboot off. Instead normal processing continues, the deleting will be completed only when a reboot is otherwise triggered. +
The Option `-c` will be ignored at Linux. .

.For-To Loop [W/L] 

* Useful for multiple calls of a single command or of a sub-section

* Syntax:

`for` %<temporary string variable>% `=` <start string> `to` <end string> `do` <one statement> //since 4.11.5 [W/L]

The temporary varibale %<temporary string variable>% must not be declared and is 
available in the called sub-section as constant.

* Example: 

Code from opsi-winst-test:
[source,winst]
----
message "for to loop"
set $ConstTest$ = "12345"
set $CompValue$ = ""
for %s% = "1" to "5" do sub_iteration_test
if ($ConstTest$ = $CompValue$)
	comment "passed"
else
	set $TestResult$ = "not o.k."
	LogWarning "failed"
endif

[sub_iteration_test]
set $CompValue$ = $CompValue$ + '%s%'
----

produces the log:

[source,winst]
----
message for to loop
Set  $ConstTest$ = "12345"
  The value of the variable "$ConstTest$" is now: "12345"
Set  $CompValue$ = ""
  The value of the variable "$CompValue$" is now: ""

~~~~~~ Looping through:  '1', '2', '3', '4', '5'
  
  ~~~~~~~ Start Sub ~~~~~~~  sub_iteration_test
  Set  $CompValue$ = $CompValue$ + '1'
    The value of the variable "$CompValue$" is now: "1"
  
  ~~~~~~~ End Sub   ~~~~~~~  sub_iteration_test
  
  
  ~~~~~~~ Start Sub ~~~~~~~  sub_iteration_test
  Set  $CompValue$ = $CompValue$ + '2'
    The value of the variable "$CompValue$" is now: "12"
  
  ~~~~~~~ End Sub   ~~~~~~~  sub_iteration_test
  
  
  ~~~~~~~ Start Sub ~~~~~~~  sub_iteration_test
  Set  $CompValue$ = $CompValue$ + '3'
    The value of the variable "$CompValue$" is now: "123"
  
  ~~~~~~~ End Sub   ~~~~~~~  sub_iteration_test
  
  
  ~~~~~~~ Start Sub ~~~~~~~  sub_iteration_test
  Set  $CompValue$ = $CompValue$ + '4'
    The value of the variable "$CompValue$" is now: "1234"
  
  ~~~~~~~ End Sub   ~~~~~~~  sub_iteration_test
  
  
  ~~~~~~~ Start Sub ~~~~~~~  sub_iteration_test
  Set  $CompValue$ = $CompValue$ + '5'
    The value of the variable "$CompValue$" is now: "12345"
  
  ~~~~~~~ End Sub   ~~~~~~~  sub_iteration_test
  

~~~~~~ End Loop
If
  $ConstTest$ = $CompValue$   <<< result true
  ($ConstTest$ = $CompValue$)   <<< result true
Then
  comment: passed
Else
EndIf
----

.Switch / Case Statement [W/L] 

* Syntax:

----
Switch <string expression> 
  Case <string const>
    <statement(s)> 
  EndCase
  [DefaultCase
    <statement(s)> 
   EndCase]
EndSwitch
----

* Examples:

Code from opsi-winst-test:
[source,winst]
----
set $ConstTest$ = "5"
Switch $ConstTest$
	Case "1"
		set $CompValue$ = "1"
	EndCase
	Case "2"
		set $CompValue$ = "2"
	EndCase
	Case "3"
		set $CompValue$ = "3"
	EndCase
	Case "4"
		set $CompValue$ = "4"
	EndCase
	Case "5"
		set $CompValue$ = "5"
	EndCase
	Case "6"
		set $CompValue$ = "6"
	EndCase
	Case "7"
		set $CompValue$ = "7"
	EndCase
	DefaultCase
		set $CompValue$ = "notexisting"
	EndCase
EndSwitch
if ($ConstTest$ = $CompValue$)
	comment "passed"
else
	set $TestResult$ = "not o.k."
	LogWarning "failed"
endif
----

.
[source,winst]
----
[Sub_check_exitcode]
comment "Test for installation success via exit code"
set $ExitCode$ = getLastExitCode
; informations to exit codes see
; http://msdn.microsoft.com/en-us/library/aa372835(VS.85).aspx
; http://msdn.microsoft.com/en-us/library/aa368542.aspx
Switch $ExitCode$
	Case "0"
		comment "Looks good: setup program gives exitcode zero"
	EndCase
	Case "1605"
		comment "ERROR_UNKNOWN_PRODUCT	1605"
		comment "This action is only valid for products that are currently installed."
		comment "Uninstall of a not installed product failed - no problem"
	EndCase
	Case "1641"
		comment "looks good: setup program gives exitcode 1641"
		comment "ERROR_SUCCESS_REBOOT_INITIATED	164"	
		comment "The installer has initiated a restart." 
		comment "This message is indicative of a success."
		ExitWindows /Reboot
	EndCase
	Case "3010"
		comment "looks good: setup program gives exitcode 3010"
		comment "ERROR_SUCCESS_REBOOT_REQUIRED	3010"
		comment "A restart is required to complete the install."
		comment "This message is indicative of a success."
		ExitWindows /Reboot
	EndCase
	DefaultCase
		logError "Fatal: Setup program gives an unknown exitcode unequal zero: " + $ExitCode$
		isFatalError "Exit Code: "+ $ExitCode$
	EndCase
EndSwitch
----

.Parameter for sections

* Using `ShellBatch`, `ShellInAnIcon`, `DosBatch`, `DosInAnIcon`, `ExecWith` +
you may now use as parameter not only string constants but also string variables (but no string functions).

Example:

Code from opsi-winst-test:
[source,winst]
----
comment "Testing parameters for ShellBatch"
set $ConstTest$ = "Hello world"
set $list$ = getOutStreamFromSection('DosInAnIcon_with_parameter world')
set $CompValue$ = takeString(2,$list$)
if ($ConstTest$ = $CompValue$)
	comment "ShellBatch parameter passed"
else
	set $TestResult$ = "not o.k."
	LogWarning "ShellBatch parameter failed"
endif

comment "Testing parameters for ShellBatch"
set $ConstTest$ = "Hello world"
set $tmp$ = "world"
set $list$ = getOutStreamFromSection('DosInAnIcon_with_parameter $tmp$')
set $CompValue$ = takeString(2,$list$)
if ($ConstTest$ = $CompValue$)
	comment "ShellBatch parameter passed"
else
	set $TestResult$ = "not o.k."
	LogWarning "ShellBatch parameter failed"
endif
----

produces the log:

[source,winst]
----
comment: Testing parameters for ShellBatch
Set  $ConstTest$ = "Hello world"
  The value of the variable "$ConstTest$" is now: "Hello world"
Set  $list$ = getOutStreamFromSection('DosInAnIcon_with_parameter world')
  
  DosInAnIcon_with_parameter
    c:\opsi.org\tmp\_opsiscript_Kj23Ej02.cmd saved back
    Executing "cmd.exe" /C c:\opsi.org\tmp\_opsiscript_Kj23Ej02.cmd world
    ExitCode 0
                
                output:
                --------------
                
                C:\Windows\system32>echo Hello world 
                Hello world
    
    The file: c:\opsi.org\tmp\_opsiscript_Kj23Ej02.cmd has been deleted
    retrieving strings from getOutStreamFromSection [switch to loglevel 7 for debugging]
        (string   0)
        (string   1)C:\Windows\system32>echo Hello world 
        (string   2)Hello world
        
Set  $CompValue$ = takeString(2,$list$)
    retrieving strings from $list$ [switch to loglevel 7 for debugging]
        (string   0)
        (string   1)C:\Windows\system32>echo Hello world 
        (string   2)Hello world
        
  The value of the variable "$CompValue$" is now: "Hello world"
If
  $ConstTest$ = $CompValue$   <<< result true
  ($ConstTest$ = $CompValue$)   <<< result true
Then
  comment: ShellBatch parameter passed
Else
EndIf

comment: Testing parameters for ShellBatch
Set  $ConstTest$ = "Hello world"
  The value of the variable "$ConstTest$" is now: "Hello world"
Set  $tmp$ = "world"
  The value of the variable "$tmp$" is now: "world"
Set  $list$ = getOutStreamFromSection('DosInAnIcon_with_parameter $tmp$')
  
  DosInAnIcon_with_parameter
    c:\opsi.org\tmp\_opsiscript_Kz50Gi50.cmd saved back
    Executing "cmd.exe" /C c:\opsi.org\tmp\_opsiscript_Kz50Gi50.cmd world
    ExitCode 0
                
                output:
                --------------
                
                C:\Windows\system32>echo Hello world 
                Hello world
    
    The file: c:\opsi.org\tmp\_opsiscript_Kz50Gi50.cmd has been deleted
    retrieving strings from getOutStreamFromSection [switch to loglevel 7 for debugging]
        (string   0)
        (string   1)C:\Windows\system32>echo Hello world 
        (string   2)Hello world
        
Set  $CompValue$ = takeString(2,$list$)
    retrieving strings from $list$ [switch to loglevel 7 for debugging]
        (string   0)
        (string   1)C:\Windows\system32>echo Hello world 
        (string   2)Hello world
        
  The value of the variable "$CompValue$" is now: "Hello world"
If
  $ConstTest$ = $CompValue$   <<< result true
  ($ConstTest$ = $CompValue$)   <<< result true
Then
  comment: ShellBatch parameter passed
Else
EndIf
----

.Functions and Statements

* `UpdateEnvironment` [W]: +
Sends Windows the signal to reload the environment values from the registry.
This statement may be called after any rocess that may have changed the environment (e.g. Registry section or setup program).
Even if the program that runs after the opsi-script get the new environment, the next process that is started (via DosBatch or Winbatch) from this opsi-script instance will still inherit the old environment. To start a subsequent process with the new environment you have to use `winbatch` with the `/RunElevated` parameter. +
Works only with NT6 and up.

Example:
[source,winst]
----
comment "Set Environment Variables and check for it ...."
Registry_add_environment /sysnative
UpdateEnvironment

comment "This will not work because the environment is inherited from the running process"
set $list$ = shellCall('set opsi-script-test')

comment "This will work because this new started process will get a new environment"
winbatch_check_environment /RunElevated
if ("42" = getlastExitCode)
	comment "passed"
else
	comment "failed"
endif

[Registry_add_environment]
openkey [HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\Environment]
set "opsi-script-test"="deleteme"

[winbatch_check_environment]
"%system%\cmd.exe" /c "if %opsi-script-test%==deleteme exit 42"
----

* `sleepseconds` [W/L] +
As parameter for the count of seconds you may now use not only string constants but also string variables or string functions.

* `MaximizeWinst` [W/L] +
Sets the '{opsi-winst}/opsi-script' window to the 'maximized' mode

* The search path for `include_insert` and `include_append` is extended by `%ScriptPath%/../lib` and works in the same way now also for external `sub` -section files.  +

The searche rule is: +
<file name> may be:

* A complete path to an existing file. [W/L]

* A existing file in `%ScriptPath%` [W/L]

* A file in `%opsiScriptHelperPath%\lib` [W] +
Is equivalent to: '%ProgramFiles32Dir%\opsi.org\opsiScriptHelper\lib'

* A existing file in `%ScriptPath%/../lib` [W/L]

* A existing file in `%WinstDir%\lib` [W]

The tests for the location of the <file name> are done in the order above. '{opsi-winst}/opsi-script' uses the first file it finds that has a matching name.

* `getProductPropertyList(`<propname>,<default value>`)` +
Is available since 4.11.3 with <default value> as string expression. +
Since 4.11.5.6 `<default value>` may also be a string list expression.

* `LoadTextFileWithEncoding(` <file name> `,` <encoding>`)` [W/L] +
reads the file <file name> and generates the string list, that contains all lines of the file. The string will be reencoded from <encoding> to system encoding.

* `removeFromListByContaining(`<search string>`,` <target list>`)` [W/L] +
Returns a copy of <target list> where all lines that contains <search string> are removed. The match to <search string> is case insensitiv.

* `removeFromListByContaining(`<search list>`,` <target list>`)` [W/L] +
Returns a copy of <target list> where all lines are removed that contains a string out of <search list>. The match to <search list> is case insensitiv.

Examples:

File "%Scriptpath%\test-files\encoding\10lines.txt" is:
----
line 1
line 2
line 3
line 4
line 5
line 6
line 7
line 8
line 9
line 10
----

Code from opsi-winst-test:

[source,winst]
----
comment ""
comment "-------------------------------------"
comment "Testing: "
message "removeFromListByContaining"
set $string1$ = "%Scriptpath%\test-files\encoding\10lines.txt"
set $list1$ = loadTextFileWithEncoding($string1$, "cp1252")
comment "search with string"
comment "search with string constant"
set $ConstTest$ = "9"
set $list2$ = removeFromListByContaining("line 5", $list1$)
set $CompValue$ = count($list2$)
if ($ConstTest$ = $CompValue$)
	comment "passed"
else
	set $TestResult$ = "not o.k."
	LogWarning "failed"
endif

set $ConstTest$ = "9"
set $list2$ = removeFromListByContaining("LINE 5", $list1$)
comment "the match is case insensitive"
set $CompValue$ = count($list2$)
if ($ConstTest$ = $CompValue$)
	comment "passed"
else
	set $TestResult$ = "not o.k."
	LogWarning "failed"
endif


set $ConstTest$ = "0"
set $list2$ = removeFromListByContaining("line", $list1$)
set $CompValue$ = count($list2$)
if ($ConstTest$ = $CompValue$)
	comment "passed"
else
	set $TestResult$ = "not o.k."
	LogWarning "failed"
endif

set $ConstTest$ = "8"
comment "searchstr 1 will found in 'line 1' and 'line 10'"
set $list2$ = removeFromListByContaining("1", $list1$)
set $CompValue$ = count($list2$)
if ($ConstTest$ = $CompValue$)
	comment "passed"
else
	set $TestResult$ = "not o.k."
	LogWarning "failed"
endif

comment "search with string function"
set $ConstTest$ = "9"
set $list2$ = removeFromListByContaining(trim(" line 5 "), $list1$)
set $CompValue$ = count($list2$)
if ($ConstTest$ = $CompValue$)
	comment "passed"
else
	set $TestResult$ = "not o.k."
	LogWarning "failed"
endif

comment "search with string variable"
set $string1$ = "line 5"
set $ConstTest$ = "9"
set $list2$ = removeFromListByContaining($string1$, $list1$)
set $CompValue$ = count($list2$)
if ($ConstTest$ = $CompValue$)
	comment "passed"
else
	set $TestResult$ = "not o.k."
	LogWarning "failed"
endif

comment "search with string list"
comment "search with string list variable"
set $list3$ = createStringList ('1', '2', '3', '4', '5')
comment "searchstr 1 will found in 'line 1' and 'line 10'"
set $ConstTest$ = "4"
set $list2$ = removeFromListByContaining($list3$, $list1$)
set $CompValue$ = count($list2$)
if ($ConstTest$ = $CompValue$)
	comment "passed"
else
	set $TestResult$ = "not o.k."
	LogWarning "failed"
endif

comment "search with string list variable"
comment "searchstr 1 will found in 'line 1' and 'line 10'"
set $ConstTest$ = "4"
set $list2$ = removeFromListByContaining(createStringList ('1', '2', '3', '4', '5'), $list1$)
set $CompValue$ = count($list2$)
if ($ConstTest$ = $CompValue$)
	comment "passed"
else
	set $TestResult$ = "not o.k."
	LogWarning "failed"
endif
----

* String function `unquote2(<string>,<quote-string>)` [W/L] +
Acts like `unquote(<string>,<quote-string>)` with the following differences: +
If <quote-string> contains only one char, so this char will be used as 'start quote char' and 'end quote char'. If <quote-string> contains two chars, so the first char will be used as 'start quote char' and the second char as 'end quote char'. Example: a <quote-string> like "()" will unquote a string like '(hello)'. +
The function returns the unchanged <string> if not ('start quote char' AND 'end quote char') is found.

* Logging in the `silent_install` mode:
If `opsi-script / opsi-winst` is started from a `silent_install` event (e.g. to run inventory scripts in the background), so any logs produced in this case will be written to the opsi-server in the append mode.

* String function `GetShortWinPathName(<longpath string>)` [W] +
Returns the short path (8.3) from <longpath string>. If ther is no short path for <longpath string>, so you will get an empty string. +
Example: `GetShortWinPathName("C:\Program Files (x86)")` returns `"C:\PROGRA~2"`

* `GetConfidentialProductProperty (` <PropertyName>, <DefaultValue>`)` //since 4.11.5.2 +
like `GetProductProperty` but handles the resulting value as confidential string. +
Useful for getting passwords without logging. see also `SetConfidential`

* Boolean function `CompareDotSeparatedStrings(`<str1>,<relation str>,<str2>`)`  //since 4.11.5.2: [W/L] +
compares two strings of the form <str>[.<str>[.<str>[.<str>]]] +
by the <relation str> which may be one of [<,<=,=,>=,>]. +
see also: string function `CompareDotSeparatedStrings(`<string1>, <string2>`)`

* Boolean function `CompareDotSeparatedNumbers(`<str1>,<relation str>,<str2>`)`  //since 4.11.5.2: [W/L] +
compares two strings of the form <number>[.<number>[.<number>[.<number>]]] +
by the <relation str> which may be one of [<,<=,=,>=,>]. +
see also: string function `CompareDotSeparatedNumbers(`<string1>, <string2>`)`

Example: +
The code:
[source,winst]
----
set $string1$ = "1.2.30.4.5"
set $string2$ = "1.20.30.4.5"
if CompareDotSeparatedNumbers($string1$, "<", $string2$)
	comment "passed"
else
	set $TestResult$ = "not o.k."
	LogWarning "failed"
endif
if CompareDotSeparatedNumbers($string1$, "<=", $string2$)
	comment "passed"
else
	set $TestResult$ = "not o.k."
	LogWarning "failed"
endif
if CompareDotSeparatedNumbers($string1$, "=<", $string2$)
	comment "passed"
else
	set $TestResult$ = "not o.k."
	LogWarning "failed"
endif
if CompareDotSeparatedNumbers($string1$, "=", $string2$)
	set $TestResult$ = "not o.k."
	LogWarning "failed"
else
	comment "passed"
endif
if CompareDotSeparatedNumbers($string1$, ">=", $string2$)
	set $TestResult$ = "not o.k."
	LogWarning "failed"
else
	comment "passed"
endif
if CompareDotSeparatedNumbers($string1$, "=>", $string2$)
	set $TestResult$ = "not o.k."
	LogWarning "failed"
else
	comment "passed"
endif
if CompareDotSeparatedNumbers($string1$, ">", $string2$)
	set $TestResult$ = "not o.k."
	LogWarning "failed"
else
	comment "passed"
endif
----
produce the log:
[source,winst]
----
Set  $string1$ = "1.2.30.4.5"
  The value of the variable "$string1$" is now: "1.2.30.4.5"
Set  $string2$ = "1.20.30.4.5"
  The value of the variable "$string2$" is now: "1.20.30.4.5"
If
    Checking if "1.2.30.4.5" is "<" than / as "1.20.30.4.5"
  CompareDotSeparatedNumbers($string1$, "<", $string2$)   <<< result true
Then
  comment: passed
Else
EndIf
If
    Checking if "1.2.30.4.5" is "<=" than / as "1.20.30.4.5"
  CompareDotSeparatedNumbers($string1$, "<=", $string2$)   <<< result true
Then
  comment: passed
Else
EndIf
If
    Checking if "1.2.30.4.5" is "=<" than / as "1.20.30.4.5"
  CompareDotSeparatedNumbers($string1$, "=<", $string2$)   <<< result true
Then
  comment: passed
Else
EndIf
If
    Checking if "1.2.30.4.5" is "=" than / as "1.20.30.4.5"
  CompareDotSeparatedNumbers($string1$, "=", $string2$)   <<< result false
Then
Else
  comment: passed
EndIf
If
    Checking if "1.2.30.4.5" is ">=" than / as "1.20.30.4.5"
  CompareDotSeparatedNumbers($string1$, ">=", $string2$)   <<< result false
Then
Else
  comment: passed
EndIf
If
    Checking if "1.2.30.4.5" is "=>" than / as "1.20.30.4.5"
  CompareDotSeparatedNumbers($string1$, "=>", $string2$)   <<< result false
Then
Else
  comment: passed
EndIf
If
    Checking if "1.2.30.4.5" is ">" than / as "1.20.30.4.5"
  CompareDotSeparatedNumbers($string1$, ">", $string2$)   <<< result false
Then
Else
  comment: passed
EndIf
----



.opsi-Linux support:

* Winbatch sections are now also available at Linux.

* LinkFolder sections are now also available at Linux.. +
Possible BaseFolder are: `common_programs`,`common_autostart`,`desktop`, `autostart` +
Subfolder is always "" (empty).
The Link Option `icon_index` is ignored. +
As additional link option we have: `link_categories`. Here you may use the following values, separated and terminated by a semikolon: `AudioVideo`, `Audio`, `Video`, `Development`, `Education`, `Game`, `Graphics`, `Network`, `Office`, `Settings`, `System`, `Utility` +
The LinkFolder sections at Linux work with different desktop system (so they work according to the freedesktop.org standards). 

* `shellCall` will now give the correct exit code of the called command. +
Technical background: The called command is extended by ` || exit $?` so that it give the exit code of the called command.

[[opsi-406-releasenotes-python-opsi]]
== python-opsi 4.0.6.

* (Not documented yet)


[[opsi-configed]]
== opsi-configed 4.0.6.

* (Not documented yet)

[[opsi-406-releasenotes-bootimage]]
== opsi-linux-bootimage

* (Not documented yet)

[[opsi-406-releasenotes-misc]]
== Miscellaneous

=== Config (e.g. for Samba4): clientconfig.depot.user
Using samba 4 it may be necessary to provide exactly which domain and user combination should be used in order to mount the depot share. +
The default is to use just as user `pcpatch` and nothing as domain. If this fails becaus the mount command defaults to the wrong domain you should configure the correct daomain (in most cases: the hostname of the opsi-server).
The config has the name: `clientconfig.depot.user`
The value of this config has the syntax: `<domain name>\<user name>`
A config: +
`clientconfig.depot.user = opsiserver\pcpatch` +
tells that mounting the opsi depot share as domain we should use `opsiserver` and as user `pcpatch`.
You may creat such a config using the opsi-configed:
Serverconfiguration / clientconfig / right mouse button: Add standard configuration entry. +
You may also use the command line to create this configuration (replace 'pcpatch' by the string you need e.g. 'opsiserver\pcpatch':
[source,prompt]
----
opsi-admin -d method config_createUnicode clientconfig.depot.user "clientconfig.depot.user" pcpatch
----
This system wide configuration may be changed client specific (e.g at the opsi-configed 

[[opsi-406-releasenotes-misc-changelogs]]
=== Changelogs:



[[opsi-406-releasenotes-misc-changelogs-opsi-configed]]
==== Changelog opsi-configed
////
opsi-configed (4.0.5.1.2-1) testing; urgency=low
////
####################

[[opsi-406-releasenotes-misc-changelogs-opsi-client-agent]]
==== Changelog opsi-client-agent

////
opsi-client-agent (4.0.5.1-8) stable; urgency=low
////
####################

[[opsi-406-releasenotes-misc-changelogs-opsi-script]]
==== Changelog opsi-script / opsi-winst

opsi-winst/opsi-script (4.11.5.2) stable; urgency=low

  * upgrade to ssl Libraries 1.0.2a (libeay32.dll, ssleay32.dll)
  * files commands move / rename / hardlink / symlink now work with overwrite; fixes #1435
  * if move / rename fails (file is in use) we retry it with MOVEFILE_DELAY_UNTIL_REBOOT
    So the move will be done at the next reboot. Reboot will be set automatically if not Option -c is set.
  * file command del / delete now with option -c and retry to delete on next boot if file in use ; fixes # 788
  * osfunc: new function opsiunquotestr2
  * new string function unquote2(s1,s2): like unquote but:
        removes only quotes if they found at start and end
        s2 may be two chars long. Then the first char is the start mark
        and the second char is the end mark
  * osparser: GetString: new boolean switch requote
  * osparser: GetString requote=true: change double quoted (""str"") to alternative double quoted ('""');  references #1284
  * new string function: GetShortWinPathName(longpath) ; fixes #581
        Windows only
        Gives short path (8.3) from a long path e.g.
        GetShortWinPathName("C:\Program Files (x86)") gives "C:\PROGRA~2"
        In case of Error the result is an empty string
  * osfunc: startprocess_cp: translate windows showWindowFlag to TProcess TShowWindowOptions
  * osparser: doRegistryHack* : fix for not HKCU reg enties in loginscripts; fixes #1538
  * oswebservice: more log for "unexpected Result from webservice in retrieveJSONObject, number of lines: 0"
  * new string function: GetConfidentialProductProperty : like GetProductProperty but handles the result as confidential string ; fixes #462
  * fixes at GetNTVersion for Win10
  * new boolean function CompareDotSeparatedNumbers(<str1>,<relation str>,<str2>)
        <relation str> may be: one of [<,<=,=,>=,>]
  * new boolean function CompareDotSeparatedStrings(<str1>,<relation str>,<str2>)
        <relation str> may be: one of [<,<=,=,>=,>]
  * hide non visible processes (SW_HIDE) like winbatch or shellInAnIcon
  * (Security Update) oswebservice: use TLS1.2 instead of SSLv3

-- Detlef Oertel <d.oertel@uib.de>  Wed,  01 Apr 2015:15:00:00 +0200


opsi-winst/opsi-script (4.11.5.1) stable; urgency=low

  * osparser: commandline := 'cmd64.exe /c "reg delete ""'+key_completepath+'"" /f'; (fixes #1299)
  * port of the changes since 4.11.4.6 to Linux
  * osparser: New files commands hardlink, symlink, rename, move
  * osfunc: new tuibinstall methods: hardlink, symlink, rename (Linux / Windows ; fixes #1319, #362)
  * osparser: execDosBatch: The path to temporary file is only quoted if it contains spaces
  * osparser: execDosBatch: Variables are now allowed as Parameters (but no functions) fixes #1312
  * osparser: executeWith: Variables are now allowed as Parameters (but no functions)
  * osparser: doAktionen: Variables and functions are now allowed as sleepsecond Parameters; fixes #1193
  * osparser: %SriptPath%/../lib as additional Path in Search path for includes; fixes #1201
  * osparser: searchpath for includes are now works also for sub <file> ; fixes #1201
  * New loop statement: for %s% = $start$ to $stop$ do <statement> ;  references #407
      - $start$ and $stop$ has to be integer strings
      - $start$ < $stop$ is required
      - in fact a stringlist $start$ to $stop$ is generated over which we iterate while loop
  * osparser: tsLoopForTo  for %s% = $start$ to $stop$ do <statement>
  * osparser: activating winbatch for linux ; fixes #1170
  * replacing opsi-winst constants by opsi-script
  * osparser: produceStringList: New (overloaded) stringlist function (references #1110):
              - removeFromListByContaining(<search string>, <target list>) removes  <search string> from <target list>
              - removeFromListByContaining(<search list>, <target list>) removes  <search list> from <target list>
              - both functions search case insensitive for a matching substring
  * ospparser: fix for filexists* to detect symlinks
  * upgrade to ssl Libraries 1.0.1L (libeay32.dll, ssleay32.dll)
  * osmain: GetParameter + StartProgramModes: more try - except : port from 4.11.4.16
  * osparser: doOpsiServiceCall: more try - except : port from 4.11.4.16
  * osparser: doTextPatchMain: do not use CheckFileExists in SaveToFile ; references #171
  * HowToBuild.txt ; fixes #1372
  * oswebservice: finishOpsiConf: if runproductlist then Logg-Appendmode := true; references #1379
  * new Statement: UpdateEnvironment : Triggers Windows to reload Environment from Registry; Win only; references #1364
  * new Control Statement: Switch  ; references  #740
    - osparser: Switch <string expr ; normally variable>
                  Case <string expr; normally const>
                    statments
                  EndCase
                  [Defaultcase
                    statments
                  EndCase]
                EndSwitch
  * LinkFolder for Linux activated: No BaseFolder, No SubFolder, No Iconindex
      but link_categories: 'AudioVideo',
      'Audio', 'Video', 'Development', 'Education', 'Game', 'Graphics',  'Network',
      'Office', 'Settings', 'System', 'Utility'
      // from http://standards.freedesktop.org/menu-spec/menu-spec-1.0.html#category-registry
      changes in osparser, osfunclin and new unit oslindesktop
  * some more ExpandFilename calls to handle incorrect path delimiter
  * oswebservice: sendlog: replace old writeLog by new log_write method
  * New Statement: MaximizeWinst at osparser
  * Extended function `getProductPropertyList(`<propname>,<default value>`)` with `<default value>` as string or string list
  * New Functions LoadTextFileWithEncoding(file,encoding) strLoadTextFileWithEncoding(file,encoding) at osparser
  * osencoding: LoadFromFileWithEncoding
  * oswebservice: sendlog: at Linux do not convert logstrings to uft8
  * oslog: dependentadd: more try except
  * osparser: sleepseconds (tsSleep): more try except and more logging
  * osparser: winbatch: trim targetfilename
  * osparser: shellBatch: Parameter at Linux (wrong bash parameter)
  * osmain: User Profile Management (runloginscripts) is now free
  * osmain: do not switch opsi-script to setup (even if it is opsi-winst); references # 1437

-- Detlef Oertel <d.oertel@uib.de>  Thu,  22 Dec 2014:15:00:00 +0200

opsi-winst/opsi-script (4.11.4.14) stable; urgency=low

  * less (only 512 chars) debug output: oswebservice: retrieveJSONObject: log ResultLines.Strings[0] if Result = nil
  * oswebservice: retrieveJSONObject: FillChar(buffer^, 655360,' '); before read to buffer
  * manifest extended for win 10: <supportedOS Id="{8e0f7a12-bfb3-4fe8-b9a5-48fd50a15a9a}"/>

-- Detlef Oertel <d.oertel@uib.de>  Thu,  04 Dec 2014:15:00:00 +0200


opsi-winst/opsi-script (4.11.4.13) stable; urgency=low

  * more debug output: oswebservice: retrieveJSONObject: log ResultLines.Strings[0] if Result = nil

-- Detlef Oertel <d.oertel@uib.de>  Wed,  12 Nov 2014:15:00:00 +0200


opsi-winst/opsi-script (4.11.4.12) stable; urgency=low

  * fix: osmain: StartProgramModes: correct Path to the opsiclientd.conf in batch mode
  * Logdevel while writing log to Service decreased
  * fix: command typo: ErrorsOccuredSinceMark is wrong, now also allowed: ErrorsOccurredSinceMark  fixes #1121
  * bakup files of log now are opsi-script.log.x where x is 0 - 8
  * do not run login scripts if user is 'opsisetupadmin' fixes #1248

-- Detlef Oertel <d.oertel@uib.de>  Fri,  24 Oct 2014:15:00:00 +0200


opsi-winst/opsi-script (4.11.4.11) stable; urgency=low

  * new unit: SystemCriticalU
  * osmain: in StartprogramModes set SystemCritical.IsCritical := true;
  * osmain: in BuildPC set SystemCritical.IsCritical := true;
  * osmain: in Terminateapp set SystemCritical.IsCritical := false;
  * osmain: in different execept set SystemCritical.IsCritical := false;

-- Detlef Oertel <d.oertel@uib.de>  Wed,  09 Oct 2014:15:00:00 +0200



[[opsi-406-releasenotes-misc-changelogs-windows-netboot]]
==== Changelog windows netboot products

////
windows (4.0.5-4) stable; urgency=low
////
####################

[[opsi-406-releasenotes-misc-changelogs-linux-netboot]]
==== Changelog linux netboot products
////
*Debian*

debian-4.0.5-4 stable; urgency=low

*Ubuntu*

ubuntu-4.0.5-7 testing; urgency=low

*openSUSE*

opensuse13-1_13.01-6 stable; urgency=low

opensuse12-3_12.03-5 stable; urgency=low

*sles11sp3*

*centos65*

centos65_6.5-3 testing; urgency=low

*Fedora 20*

fedora_20_20-4 stable; urgency=low
////
####################

[[opsi-406-releasenotes-misc-changelogs-opsi-local-image]]
==== Changelog opsi-local-image

////
*opsi-local-image-backup*

opsi-local-image-win* (4.0.5.1-3) stable; urgency=low

*opsi-local-image-capture*

opsi-local-image-capture (4.0.5.1-5) stable; urgency=low


*opsi-local-image-delimage*


*opsi-local-image-prepare*

opsi-local-image-win* (4.0.5.1-3) stable; urgency=low

*opsi-local-image-restore*

opsi-local-image-restore (4.0.5.1-2) stable; urgency=low

*opsi-local-image-sysprep*

opsi-local-image-sysprep (4.0.5.1-1) stable; urgency=low

*opsi-local-image-win**

opsi-local-image-win* (4.0.5.1-6) stable; urgency=low

*opsi-local-image-ubuntu*

opsi-local-image-ubuntu (4.0.5.1-1) stable; urgency=low
////
####################

[[opsi-406-releasenotes-misc-changelogs-python-opsi]]
==== Changelog python-opsi

////
python-opsi (4.0.5.15-1) experimental; urgency=low
////
####################

[[opsi-406-releasenotes-misc-changelogs-opsipxeconfd]]
==== Changelog opsipxeconfd
////
opsipxeconfd (4.0.5.3-6) experimental; urgency=low
////
####################

[[opsi-406-releasenotes-misc-changelogs-opsiconfd]]
==== Changelog opsiconfd
////
opsiconfd (4.0.5.2-1) experimental; urgency=low
////
####################

[[opsi-406-releasenotes-misc-changelogs-opsi-utils]]
==== Changelog opsi-utils
////
opsi-utils (4.0.5.6-2) experimental; urgency=low
////
####################

[[opsi-406-releasenotes-misc-changelogs-opsi-linux-bootimage]]
==== Changelog opsi-linux-bootimage
////
opsi-linux-bootimage (20140919-2) stable; urgency=medium
////
####################

[[opsi-406-releasenotes-misc-changelogs-opsi-depotserver]]
==== Changelog opsi-depotserver
////
opsi-depotserver (4.0.5.11-1) experimental; urgency=low
////
####################

[[opsi-406-releasenotes-misc-changelogs-opsi-atftp]]
==== Changelog opsi-atftp
////
opsi-atftp (0.7.dfsg-4) stable; urgency=medium
////
####################

[[opsi-406-releasenotes-misc-changelogs-opsi4ucs]]
==== Changelog opsi4ucs
////
opsi4ucs (4.0.5.5-4) experimental; urgency=low
////
####################

[[opsi-406-releasenotes-misc-changelogs-opsi-swaudit]]
==== Changelog opsi-swaudit
////
swaudit (4.0.5-1) stable; urgency=low
////
####################

 [[opsi-406-releasenotes-misc-changelogs-opsi-template]]
==== Changelog opsi-template
////
opsi-template (4.0.5-1) stable; urgency=low
////
####################

