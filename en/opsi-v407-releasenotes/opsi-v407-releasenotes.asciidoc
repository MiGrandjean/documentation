////
; Copyright (c) uib gmbh (www.uib.de)
; This documentation is owned by uib
; and published under the german creative commons by-sa license
; see:
; http://creativecommons.org/licenses/by-sa/3.0/de/
; http://creativecommons.org/licenses/by-sa/3.0/de/legalcode
; english:
; http://creativecommons.org/licenses/by-sa/3.0/
; http://creativecommons.org/licenses/by-sa/3.0/legalcode
;
; credits: http://www.opsi.org/credits/
////

////
;***************************************************************************
; Subversion:
; $Revision:  $ $Author: oertel $
; $Date: $
;***************************************************************************
////

:Author:    uib gmbh
:Email:     info@uib.de
:Revision:  4.0.7
:doctype:   book

// Include common opsi terms
include::../common/opsi_terms.asciidoc[]

[[opsi-407-releasenotes]]
= opsi Version 4.0.7 Release Notes

// Include common opsi copyright
include::../common/opsi_manual_copyright.asciidoc[]


[[opsi-407-releasenotes-overview]]
== Overview of the new features

The Highlights of this Release are:

* Ubuntu 16.04 (Xenial) support
* New opsi bootimage
* New opsi-linux netboot products and client-agent
* Product sorting while installation for (standard) algorithm 1 is fixed
* New opsi-client-agent

The opsi Service Release 4.0.7 comes with a whole bunch of new features and improvements.
Here is a summary:

* New opsi-bootimage
** Uses Ubuntu Xenial 16.04 as base
** Kernel 4.4.11

* opsi-server packages now also for:
** Ubuntu 16.04
** sles11sp4
** sles12sp1
** See also special chapter: <<opsi-407-releasenotes-supportmatrix>>.


* opsi-configed:
** Scheduler for WakeOnLan integrated
** WakeOnLan dispatches calls to (clients of) depotservers
** Passwords in properties are now hidden
** Selection list for config server on logon
** New main menu entry "windows"
** Extended search function
** Expanded functions for groups in the tree view component
** Several bug fixes


* opsi-client-agent: +
** Neuer opsiclientd
** New Client for the Kioskmode
** Upgrade of SSL libraries to 1.0.2h
** See also special chapter: <<opsi-407-releasenotes-clientagent>>

* opsi-winst / opsi-script (4.11.6.1)
** Many new functions
** Upgrade of the SSL libraries to 1.0.2h
** See also special chapter: <<opsi-407-releasenotes-opsi-script>>


* Installation sequence (sort algorithm 1) fixed
The sort algorithm 1 should generate a product sequence from product dependencies and product priorities, based on the premise that dependencies
override priorities.. +
The sequence of products with action requests which the opsi-winst gets now keeps its order even if the scripts have partly been executed. +
See also special chapter: <<opsi-407-releasenotes-product-sorting>>


* opsi-clonezilla:
** new version
** property: 'runcommand' is working again with value 'ocs-live'
** UEFI Support

* opsi-linux-support:
** New opsi-linux-client-agent (with 15 free starts)
** debian8 product that may use a local http repository
** ubunt16-04 product that may use a local http repository
** Possibility to provide local http repositories for Linux OS installations
** Server package `opsi-linux-support` now provides the base infrastructure for these local http repositories
** Product l-opsi-server which installs a new opsi-server (for a new depot or test system)
See special chapter: <<opsi-407-releasenotes-linux>>

* Miscellaneous
** There is a new configuration file for the Hardware inventory.
With the same it's possible, to request Data on the physical and
logical cores of a system.
** When using the option 'resolveHostAddress' at the backends HostControl and HostControlSafe +
 and a failed attempt to resolv the name resolution occurs, a previously stored IP address can be used eventually.
** Numerous improvements and features in the Python-opsi library

[[opsi-407-releasenotes-important]]
== Important Notice - Please pay attention


=== With the combination Ubuntu 16.04 and mysql it is mandatory to notice the following:

PRECAUTION: Ubuntu Xenial (16.04) uses MySQL with Version 5.7. This version uses the 'strict mode' per default, previously this was optional. This leads to an error on the command _opsi-setup_ _--configure-mysql_. To that effect before you execute the command, the following should be edited:
[source,prompt]
----
/etc/mysql/mysql.conf.d/mysqld.cnf
----
In the [mysqld] Section you must add the following the line:
[source,prompt]
----
sql_mode=NO_ENGINE_SUBSTITUTION
----
Now the service `mysql` has to be restarted:
[source,prompt]
----
service mysql restart
----

It is now possible to continue working under Ubuntu Xenial.

=== Use current Netboot products with 4.0.7::

CAUTION: The Netboot products from 4.0.6 are unfortunately not compatible with the bootimage 4.0.7. Apply at the pre-Release version published on 24.6.2016  (https://forum.opsi.org/viewtopic.php?f=1&t=8480) or the one that comes with this Release version.

In case of error please update your Netboot products ! +
Just in case of emergency check the old bootimages under http://download.uib.de/opsi4.0/archiv/opsi-linux-bootimage/


=== The sorting algorythm1 was repaired:

CAUTION: Through the repairing of old bugs the installation sequence had changed in comparison to the defective sequence in 4.0.6


[[opsi-407-releasenotes-installation]]
== Installation notes

For safety reasons we recommend creating a backup of your backends with +
{opsi-backup} before updating:
[source,prompt]
----
opsi-backup create
----

The products contained in this release depend on each other in many cases. +
Do not try to install just parts of this update.

We recommend to first update the server and then the opsi products.


To make sure that permissions are applied correctly +
we recommend to run ``opsi-setup --set-rights`` after the installation. +
Please be aware that the execution of latter can last for many minutes.


[[opsi-407-releasenotes-installation-opsipackages]]
=== Notes for updating opsi-packets

////
Bitte nachstehenden Block bei release nicht löschen sondern auskommentieren
////


For installing the testing server packets the opsi repository has to be changed from `opsi40` to `opsi40-testing`.

In case of Ubuntu 14.04: +
`deb http://download.opensuse.org/repositories/home:/uibmz:/opsi:/opsi40/xUbuntu_14.04 ./` +
replace with: +
`deb http://download.opensuse.org/repositories/home:/uibmz:/opsi:/opsi40-testing/xUbuntu_14.04 ./`

Then the packages can be updated. +


For example Ubuntu / Debian:
[source,prompt]
----
aptitude update
aptitude full-upgrade
----
For installing the opsi products: +

For installing the testing opsi products you should add to the file: +
`/etc/opsi/opsi-product-updater.conf` +
the following section

[source,prompt]
----
[repository_opsi_406_testing]
baseUrl = http://download.uib.de
dirs = opsi4.0/testing/opsi-v406/products/localboot, opsi4.0/testing/opsi-v406/products/netboot
active = true
username =
password =
autoInstall = false
autoUpdate = true
autoSetup = false
onlyDownload = false
----

You may append the `dirs` line by:

* `, opsi4.0/testing/opsi-v406/opsi-linux`

* `, opsi4.0/testing/opsi-v406/opsi-local-image`


Set in the section `[repository_uib]` the following line:
[source,prompt]
----
active = false
----
Then execute the opsi-product-updater.


To install all packets:
[source,prompt]
----
opsi-product-updater -i -vv
----

To install updates only:
[source,prompt]
----
opsi-product-updater -vv
----

////
Bitte vorstehenden Block bei release nicht löschen sondern auskommentieren
////

////
The installation does not require any special action. It is performed within the normal updates of your server and opsi products.

First update the server according to the update command of your Linux distribution. +

We recommend to set in `/etc/opsi/opsi-product-updater.conf`
in the section `[repository_uib]` the following to get all products even if they start with win* :
[source,prompt]
----
excludes =
----

If you need the opsi-linux products you should append the `dirs` entry: +

[source,prompt]
----
dirs = opsi4.0/products/localboot, opsi4.0/products/netboot
----
by the path `opsi4.0/products/opsi-linux`

If you need the opsi-local-image products you should append the `dirs` entry
by the path `opsi4.0/products/opsi-local-image`

Then execute the opsi-product-updater.

[source,prompt]
----
opsi-product-updater -i -vv
----

To install updates only:
[source,prompt]
----
opsi-product-updater -vv
----

In case of a multi depot installation first upgrade the config-server before upgrading the depots.


If you want to use product-ids with a length of more than 32 characters and are using the MySQL-backend please update the table definition on your configserver with the following command:

[source,prompt]
----
opsi-setup --update-mysql
----
////



////
For details please refer to the opsi-v405-releasenotes manual and the revised opsi manuals.
////

[[opsi-407-releasenotes-packages]]
== list of packages

.server packages:
* opsi-depotserver
* opsi-linux-support
* opsi-utils
* opsiconfd
* python-opsi
* opsi-linux-bootimage
* opsi-configed

.opsi packages (localboot):
* opsi-client-agent
* opsi-configed
* config-win10

.opsi packages (netboot):
* win*
* opsi-clonezilla

.opsi packaages (opsi-linux):
* centos70_
* redhat70_
* debian7-
* debian8-
* Ubuntu14-04
* Ubuntu16-04
* opensuse13-2
* sles12

With opsi 4.0.7 you can install debain8 and Ubuntu16-04 from a local apache repository. The opsi-linux-support package provides the apache2 system package
and also creates the necessary folders. You then have to fill these with our provided debian8 and ubuntu16-04 repository available at our download server.

.opsi packages(opsi-local-image):
* opsi-local-image-win*
* opsi-local-image-capture
* opsi-local-image-capture-prepare


[[opsi-407-releasenotes-missing]]
== What is still missing (and under progress)

* opsi-client-agent: +
To execute opsi-winst scripts as the current user during logon 'User Profile Management'.

* opsi-linux-client-agent: +
** A real opsiclientd service for the following distributions: +
RedHat 7 +
CentOS 7

* opsi-linux 4.0.7 netboot products: uefi support

[[opsi-407-releasenotes-knownbugs]]
== Known Bugs / Known Problems

.KNOWN BUGS:

* opsi-winst 4.11.6.1: +
In interactive mode, the Logviewer is temporary not functional.


.KNOWN PROBLEMS:

* ######

[[opsi-407-releasenotes-eol]]
== Discontinuation

[[opsi-407-releasenotes-eol_server]]
=== Discontinuation: Distributions for opsi-server

This chapter lists distributions that for several reasons are not supported by opsi anymore.

* sles11sp3

See also the support matrix: <<opsi-407-releasenotes-supportmatrix>>.

[[opsi-407-releasenotes-eol_winclient]]
=== Discontinuation clients: Windows versions

With opsi v4.0.7 the netboot packages for

* Windows 8

are not maintained anymore. +
Also in the near future the Update Abos will not support these Windows versions anymore. +
Please contact us in case of any questions or concerns.

See also the chapter: <<opsi-407-releasenotes-netboot-windows>>.

[[opsi-407-releasenotes-eol_linclient]]
=== Discontinuation clients: Linux versions

With opsi v4.0.7 the netboot packages for

* centos65
* redhat65
* opensuse13-1
* sles11sp3
* ubuntu14-10
* ubuntu15-04
* ubuntu15-10


will not be maintained anymore. Please contact us in case of any questions or concerns.

[[opsi-407-releasenotes-supportmatrix]]
== opsi Support Matrix

This is an overview on which distributions and releases the opsi-server will run:

include::../common/opsi_manual_supportmatrix.asciidoc[]

If you are using an OS version which is not contained in the section above,
we recommend updating the OS before installing opsi v4.0.7.


[[opsi-407-releasenotes-opsi-configed]]
== Improvements for '{opsi-configed}'

==== WakeOnLan Scheduler

Using the WakeOnLan command, you will send the selected clients a WakeOnLan signal.

Since version 4.0.7 you can choose

* if the network signal is meant to be sent to the selected clients at once
* which delay should be between the waking of two clients
* when the process shall start (via a scheduler).

If a client is assigned to a depot server which is not the config server then the Wake On Lan signal is not directly sent to the client,
but the '{opsi-configed}' tries to establish a HTTPS connection to the 'opsiconfd' of the depot server which in turn sends the Wake On Lan package to the client inside its network segment.

.'{opsi-configed}': Scheduler for Wake On Lan
image::opsi-configed-wake-on-lan-scheduler.png["{opsi-configed}: Scheduler for Wake On Lan", width="120mm"]

It should be observed that it is the '{opsi-configed}' which triggers the actions, therefore the program must not be shut down in the meantime.

[[opsi-407-releasenotes-opsi-configed-passwordprop]]
=== Hiding of Password Property Values

A property value that is a password should not be directly displayed.

Until this feature will be constructed as a special value type in some coming release the hack is introduced that a property value
will only be displayed if the user explicitly requests it in cases:

* the property key text contains the string 'password'
* the property key text starts with the string 'secret'

E.g., the value of the property 'root_password' in the Linux netboot products is displayed as a sequence of stars  (until the user does the edit click and explicitly confirms to showing the password).


=== Selection list for config server on logon

In the local user profile, the '{opsi-configed}' saves some session infos in order to rebuild the essential working
context after restart,. Since version 4.0.7 the session data is used to produce a selection list
of the opsi servers to which you were connected (e.g. a productive one and a second one for experimental purposes). The last server used
gets the top most place, such it can be directly again without any further action.

.'{opsi-configed}': login mask
image::opsi-configed-login.png["opsi-configed: login mask", width="90mm"]

=== New main menu item "Windows"

The new main menu item produces menu based calls for opening the License management frame and the frames with
special functions for group and product operations.

Additionally, you will find a new item "Arrange dialog frames" by which configed dialogs which got "lost" behind other desktop frames can be
pulled to the foreground again.

.'{opsi-configed}': main menu with windows sub-menu
image::opsi-configed-main-menu-windows.png["opsi-configed: main menu with windows sub-menus", width="90mm"]

=== Extended client search function inside the client table

The client search inside the client table is extended by a "Google like" search for partial words. The search options now are:

* Full-text: the search string is used like when googling in the standard manner; i. e., if the input contains several parts
(delimited by blanks) a table line will be a match if any of the input parts is fully contained in some column text.

* Full-text (complete string): the search string is used as if on googling the search string is embraced by citation marks;
i. e. a table line will a match if the complete input string is part of some column content.

* Start-text search: a table line will be a match if the column text starts with the search string.

* Regular expression: the search string is interpreted as so called regular expression; i.e., a table line will be a match
if the input string produces a match according to the rules of regular expressions (as described in the java doc for java.util.regex.Pattern).


=== Extended options for working with groups in client tree view

The now more powerful context menu of a group item can be used

* to create a subgroup;
* to edit the group properties;
* to delete the group together with its subgroups and all client assignments of them;
* to remove all client assignments while keeping the group and its subgroups;
* to display the the contained clients and select them in one step.

[[opsi-407-releasenotes-linux]]
== Linux support

=== Support matrix

include::../common/opsi_manual_supportmatrix-linclient.asciidoc[]

 === opsi-linux-client-agent: 15 Free starts

The opsi-linux-client-agent includes 15 Free starts by which the agent can be used without any activation

More precisely: After the initial Install from the opsi-linux-client-agent the opsi-script can be started 15 times in service context without the need of activation. +
This gives you the possibility to set a Linux computer with the corresponding opsi-products for the configuration needed.
For example, after the installation of the system you could use the product `l-opsi-server` to make of the newly installed computer an opsi-server.

For a long lasting maintenance of the installed Linux computer you need after the 15 free starts the activation of these feature.

=== New boolean function waitForPackageLock

By the installation under Linux it may happen that after a restart,
that an installation over the package distribution system fails,
since it currently being used by another process.

For this issue there is now a new boolean function:
`waitForPackageLock(<seconds timeout string>,<bool should we kill>)` +
responds with 'true' when the Linux package system is not currently busy. +
If it's busy, then it will <seconds timeout string> wait the amount of seconds before release. +
If the timeout is achieved,
so the process that triggers the lock will be killed if <bool should we kill> equals 'true'. This procedure is not recommended.

Example:
[source,winst]
----
Message "Try to get Package Lock..."
if waitForPackageLock("60","false")
	comment "we got the package lock."
else
	LogError "could not get Package Lock"
	isFatalError "package lock failed"
endif
----

=== Extension of the function getLinuxVersionMap

The function `getLinuxVersionMap` supplies as Key 'SubRelease'.
The Key 'SubRelease' is assigned to SLES Systems as Patch level stand as value.
Also on SLES11SP4: 'SubRelease=4'.

=== The product l-opsi-server

The product 'l-opsi-server' serves to install on a Linux computer an opsi-server via opsi-linux-client-agent
in an automated way. This can serve to install quickly a new opsi-depot-server
or e.G. an opsi Test system.

The product 'l-opsi-server' has the following Properties:

* `opsi_online_repository`: +
(Base-) Repository for opsi-server installation. (Default="http://download.opensuse.org/repositories/home:/uibmz:/opsi:/opsi40") +
see also 'repo_kind'

* `opsi_noproxy_online_repository`: +
(Base-) Repository for opsi-server installation (without any cache proxy). (Default="http://download.opensuse.org/repositories/home:/uibmz:/opsi:/opsi40") +
Should you require on `opsi_online_repository` to introduce a Proxy or deb-cacher
(e.G. 'http://mydeb-cacher:9999/download.opensuse.org/repositories/home:/uibmz:/opsi:/opsi40"),
than introduce the URL without Proxy. Otherwise introduce the same as `opsi_noproxy_online_repository`.

* `repo_kind`: +
Which kind of repository ["experimental", "stable", "testing"] should be installed ?. (Default='stable') +
With the Client OS, 'opsi_online_repository' and 'repo_kind' the URL will be built and the client
will be added to an opsi repository.

* `backend`: +
Which backend should be installed ? (mysql needs a valid activation file). (Default='file') +
A modules file with the require Activations can be stored in the custom directory of the product.
If a modules file is found there, then will this one used.

* `opsi_admin_user_name`: +
The name of the opsi_admin_user to create (empty= nothing created). (Default='adminuser') +
If a user is introduced here, it will applied, also it will be added to the group 'opsiadmin', 'pcpatch'/'opsifileadmin'
and become as unix and samba password the value `opsi_admin_user_password`

* `opsi_admin_user_password`: +
What is the opsi_admin_user to create (empty= nothing created). (Default='linux123') +
see `opsi_admin_user_name`

* `setup_after_install`: +
Which opsi product(s) should we switch to setup after l-opsi-server installation is done ?. (Default="")

* `allow_reboot`: +
May the server reboot if script is finished ?. (Default='true')

* `install_and_configure_dhcp`: +
Should we run the dhcp server on this machine ?. (Default='False') +
If this property is 'false' then the following properties: 'netmask', 'network',
'dnsdomain','nameserver' and 'gateway' are meaningless because thy only used for
dhcp configuration.

* `netmask`: +
Netmask  (for dhcp). (Default="255.255.0.0") +
Meaningless if 'install_and_configure_dhcp=false'

* `network`: +
network address (for dhcp). (Default="192.168.0.0") +
Meaningless if 'install_and_configure_dhcp=false'

* `dnsdomain`: +
DNS domain (for dhcp). (Default="uib.local") +
Meaningless if 'install_and_configure_dhcp=false'

* `nameserver`: +
Primary nameserver (for dhcp). (Default="192.168.1.245") +
Meaningless if 'install_and_configure_dhcp=false'

* `gateway`: +
gateway (option routers for dhcp). (Default="192.168.1.245") +
Meaningless if 'install_and_configure_dhcp=false'

* `update_test`: +
Do not use: Internal Debugging. (Default='False')

The product has 'setup required before' dependency to the product 'l-system-update'.
That means when you set 'l-opsi-server' on 'setup' it will also automatically set 'l-system-update' also on setup
and installed before.

In the directory `custom` of the product `l-opsi-server` the activated file (`modules`) is stored, which is used in the Installation of the product `l-opsi-server` and will be preserved in the case of a new version of the product.


CAUTION: Currently, a computer can't  be at the same time opsi-server,
opsi-client and opsi-depot-server. +
Thus when 'l-opsi-server' must act as Depot server an also as Config-Server,
you must before delete it as Client in the configed.

=== Setting up a local deb http repository

With debian8 and ubuntu 16-04 package it is now possible to install from a local Apache2 repository. +
To do that on Product as property '' you must introduce the Address based on the example `http://<opsi-server>/opsi/<productId>` e.G `http://opsiserver/opsi/debian8` +
Furthermore, the local repository must be of course created. +
To do this please make sure that the product `opsi-linux-support` is installed on your opsi-server. This package installs the required packages for each Distribution(apache2) and also creates the necessary folders. These must be then completed with the corresponding Distribution repository. +
To that end there are two possibilities:

. Simple: You download a built and tested Repository from us and unpack it
. Elaborate: You build it yourself


Simple: +
Execute the following command as 'root'. +
Note that the path to the Apache2 `DocumentRoot` has different defaults which are dependent to each distribution. +
Therefore, you may need to use the second line of the script !

==== debian8

[source,prompt]
----
#! /bin/bash
DOCUMENTROOT=/var/www/html
URL=http://download.uib.de/opsi4.0/experimental/opsi-v407/opsi-linux
FILE=debian8.tgz
mkdir -p ${DOCUMENTROOT}/opsi
cd ${DOCUMENTROOT}/opsi
wget ${URL}/${FILE}
tar xzf ${FILE}
opsi-set-rights .
----

Elaborate: +
You can also create the repository yourself:

==== ubuntu16-04

[source,prompt]
----
#! /bin/bash
DOCUMENTROOT=/var/www/html
URL=http://download.uib.de/opsi4.0/experimental/opsi-v407/opsi-linux
FILE=ubuntu16-04.tgz
mkdir -p ${DOCUMENTROOT}/opsi
cd ${DOCUMENTROOT}/opsi
wget ${URL}/${FILE}
tar xzf ${FILE}
opsi-set-rights .
----

Elaborate: +
You can also create the repository yourself:

==== ucs41

######


==== ucs40

######


////
include::../common/opsi_manual_linux.asciidoc[]
////

[[opsi-407-releasenotes-clientagent]]
== New opsi-client-agent

* New opsiclientd
* New Clientkiosk

CAUTION: The new mentioned features are only available for NT6. Under NT5 (e.G. Windows XP will be installed the 'old' 4.0.6 opsiclientd and Kioskclient.


[[opsi-407-releasenotes-clientagent-kiosk]]
=== New opsiclientkiosk application

With opsi 4.0.7 is the current Web-based solution of the client kiosk is replaced by an application.
Background for this change is:

* Elimination of the problem that means to have a self-signed certificate.
* Greater functionality of the new client.

CAUTION: The old (Web based) Kiosk client no longer works with the new opsi-client-agent/opsiclientd.


[[software-on-demand_usage]]
==== Clientkiosk: application

If the opsi-client-agent during the installation notes that, the configuration: _software-on-demand.active_ is set to _true_, it will automatically create a Start menu item during the installation on the Client, on which the Kiosk application can be run directly. It can be found under: _Start -> Programs -> opsi.org -> software-on-demand_.

After starting the application, the following main window will be shown:

.'opsi-client-kiosk': main window
image::opsi-client-kiosk_num.png["opsi-client-kiosk: Main Window", width=400]

Elements:

. Headerslist (Customizable to the specification of the Client)
. Info Button: Version and loaded language
. Data load display
. Button to display the set actions
. Button to save and display the set actions
. Button to end the program
. Display of the groups lists
. Reload from Data (e.G. after certain actions ausgeführt wurden)
. Erase previously set filters and show all data
. Search mask (Filter input field)
. Activate Filter
. Filter through possible product upgrades
. Product display
. Column to set the required actions
. Tab: Product detail info: Description / Hint / Version
. Tab: Product detail info: Dependencies / Priorities
. Status bar with notifications



Here you could find more than one group, that is why there is an additional entry called 'All groups' in the first place. This list can be also configured to display groups of products, or other products selections. By default, the first entry is selected, e.G. 'All groups' and in the case there is only one, then it will display the only available group. +
At the startup or when you changed the selection, the needed data is read. This may take some time to load, and afterwards the location is displayed at the top of the window (3). +
The products are shown in the central table (13). Once a product is clicked, the detailed information about the product will be shown (15/16). In the right column `ActionRequest` (14), an action request is set. +
With the button 'Show actions' (4) the known application actions will be displayed but not saved. Only the button 'Actions Save' (5) actually sends the actions to the server. This will be checked in the case that there are product dependencies which need to be installed previously.
Finally, the total list of pending actions will be displayed on a separate window

.'opsi-client-kiosk': Confirm action
image::opsi-client-kiosk2.png["opsi-client-kiosk: Confirm action", width=200]

In this window and over the upper button 'Install now' an immediate installation can be triggered. In that case, it is advisable to close all applications (or at least save your data) since the installation can interfere with the running applications. +
The button below `Install at next standard occasion` will end the actions at this point all the stored actions will be executed at a later point.


The config _Software-on-demand.show details_ have in the kiosk application no influence prior to 4.0.7 and can be at this point deleted.




The module can also be accessed over the network in this case, however, authentication is required.


[[software-on-demand_notice]]
==== Characteristics

The following apply to the software-on-demand module:

* Dependencies are resolved automatically +
   - Software that depends on software from the Demand group, will automatically be set to setup (install), without interaction from the user..

* Software that is already set to setup +
   - In this case, the Checkbox: _install_, will be already activated.

[[software-on-demand_CI]]
===== Client kiosk: Customizable to Corporate Identity

The Headers list from the Main window (1) is customizable to the desire of the client.
To that, there are two files which play a roll:

* `opsiclientkiosk.png`
* `opsiclientkiosk.ini`

The `opsiclientkiosk.png` holds the picture which will be loaded in this area. +

The `opsiclientkiosk.ini` defines the text and its representation which will be shown in this area.

Example:
----
[TitleLabel]
Text= opsi Client Kiosk
FontName = Arial
FontSize = 20
FontColor = $00000000
FontBold = true
FontItalic = false
FontUnderline = false
----

You will find templates for these files under `/var/lib/opsi/depot/opsi-client-agent /files/opsi/opsiclientkiosk/opsiclientkioskskin`
or `C:\Program Files(x86)\opsi.org\opsi-client-agent\opsiclientkiosk\opsiclientkioskskin`


In the case you want to protect the files above mentioned against changes, when you update to a new version of the opsi-client-agent, you can use the custom directory
(/Var/lib/opsi/depot/opsi-client-agent/files/opsi/custom). The entire custom directory is saved when installing a new version of the opsi-client-agent and restored afterwards, so the changes are not lost in the case of an update.

* custom/opsiclientkioskskin/*.*
All the files in these directory will be copied, by the installation of an opsi-client-agent to C:\Program Files(x86)\opsi.org\opsi-client-agent\custom\opsiclientkioskskin. If available, this directory (opsiclientkioskskin) will have the preference over others.


To avoid errors by the change of rights, the following helps:

[source, prompt]
----
opsi-setup --set-rights /var/lib/opsi/depot/opsi-client-agent
----

[[opsi-407-releasenotes-restore-poc]]
== Restore from opsi metadata from Images (opsi-wim-capture, opsi-local-image-capture)


*Restore from the opsi metadata from installed Products*

*The Problem:*

If you reinstall a Windows with opsi, e.g. `win7-x64`, then during the installation of the opsi-client-agent all the local Boot products, which in this computer were previously marked as` installed`, will automatically be set to setup and thus reinstalled later. +
This can not be completely carried out exactly in the rolling of a 'captured' Image. +
In the image is the backup from the opsi data that was stored during the capture process. This will be discovered when you install the opsi-client-agent and re-imported into the depot server. With it the products that were installed in the 'captured' Image, now are on the newly installed computer mark as `installed`.
Should now all the products that are mark as `installed` set to` setup`, this would imply that all products installed already in the image will be re-installed. This is not desirable.


By the restoration of the opsi metadata of installed products there are two alternatives available now with opsi 4.0.7: +

* Alternative 1: +
Restoring the metadata and retention of 'setup' -Action Requests. +
Products that are mark as 'installed' will *not* be set to 'setup'. +
This is the default, and the behavior before opsi 4.0.7


* Alternative 2: +
Restoring the metadata. Products that are mark as 'installed' will be set to 'setup' except those which were contained in the restore metadata. +
////Zurückspielen der Metadaten. Produkte die auf 'installed' stehen werden auf 'setup' gestellt ausser denen welche in den restorten Metadaten enthalten waren. +
Was ist mit restorten???
////

*Alternative 1* +
By the deploy from a 'captured' image, after the install, only the products which were already from the beginning of the OS-install set to 'setup' will be automatically installed. These can be done through your intervention, or through the property 'setup_after_install'.
Therefore only the products which stood at `setup` before installing the operating system will be installed in this case. +
This is the default, and the behavior before opsi 4.0.7 +

*Alternative 2* +
Variant 2 behaves similar to what would be the case of an installation without a captured Image: +
* Restore of the metadata. +
* Products that are mark as 'installed' are then set to 'setup' except those which were contained in the restore metadata. +
////
Produkte die auf 'installed' stehen werden auf 'setup' gestellt ausser denen welche in den restorten Metadaten enthalten waren. +
Nochmal restorten?
////
This behavior is only available since opsi 4.0.7 and is not the default. Option 2 is made possible by enhancements to the opsi script and is part of the opsi-client-agent of 4.0.7. +
In order to be able to apply this behavior a 'config' must be set on ( 'Host parameters') : +
The Boolean configuration entry: `clientconfig.capture.switch_installed_products_to_setup`. If the entry for this client has the value 'true' then variant 2 is applied, otherwise variant 1 +

About this '{opsi-config-objects}' can then specific client events activated or deactivated.
The '{opsi-config-objects}' can be applied using the '{opsi-configed}' or '{opsi-admin}'.

To create the '{opsi-config-objects}' over the '{opsi-admin}' the following commands are to be executed on the'{opsi-configserver}':

[source,prompt]
----
opsi-admin -d method config_createBool clientconfig.capture.switch_installed_products_to_setup "capture.switch_installed_products_to_setup" true
----
With that you set for *all* computers 'Alternative 2'.

To create the '{opsi-config-objects}' over the '{opsi-server}' select there 'Server Configuration' / 'ClientConfig' / And on the right side with the right mouse button: `Add Boolean configuration entry`.


[[opsi-407-releasenotes-opsi-script]]
== opsi-script / opsi-winst 4.11.6

* Log files are now always UTF-8 encoded.

* Security Upgrade to Windows SSL libraries 1.0.2h (libeay32.dll, ssleay32.dll) +

* New manuals:

** opsi-winst-refrence-card with topic related function listing (by topic)

* New stringlist function:

`setStringInListAtIndex(`<newstring>,<list>,<indexstr>`) : stringlist`   //since 4.11.6 [W/L]

`removeFromListByMatch(`<searchstring>,<list>`) : stringlist`   //since 4.11.6 [W/L]

* Through a fix in the opsi script dealing with property-related service methods via opsiServiceCall is now possible:

Handling JSON objects from the web service requires a basic understanding of JSON, the opsi objects and JSON-based methods in opsi script.
See also:
opsi manual: chapter: "Web service / API Methods since opsi 4.0"
and the next chapter

According to the following code example, you can pick up objects from the Service.
In this example, all the productOnClient objects will be fetched, which belong to the current computer (`%opsiserviceUser%` is in the service context of the FGDN client), Local boot products is where the action requests are set to 'setup'.
[source,winst]
----
DefStringlist $resultlist$
set $resultlist$ = getReturnListFromSection("opsiServiceCall_get_productOnClient_setup_objects")
[opsiServiceCall_get_productOnClient_setup_objects]
"method": "productOnClient_getObjects"
"params": [
          "[]",
          '{"clientId":"%opsiserviceUser%","productType":"LocalbootProduct","actionRequest":"setup"}',
          ]
----
The result is a JSON String Array which its on the first Line from `$resultlist$`.


You can also write back (modified) objects.
The following example illustrates the principle:
The string variable `$ArrayStr$` must include a valid JSON array.
[source,winst]
----
DefVar $ArrayStr$
(...)
[opsiServiceCall_updatePOC]
"method": "productOnClient_updateObjects"
"params": [
          '$ArrayStr$'
          ]
----



[[opsi-winst-rc-json]]
=== opsiservicecall and JSON related functions [W/L]

This functions serve to analyze and modify Strings or Stringlists from JSON expressions. It is necessary for this purpose, to know and understand the structure of the processed JSON expressions. This can be used to work with opsiservicall sections and the object-oriented opsi web service methods.

`jsonIsValid(`<jsonstr>`) : boolean`  //since 4.11.6: [W/L] +
Returns 'true' when, <jsonstr> holds a valid JSON expression.

`jsonIsArray(`<jsonstr>`) : boolean`  //since 4.11.6: [W/L] +
Returns 'true' when, <jsonstr> holds a valid JSON Array.

`jsonIsObject(`<jsonstr>`) : boolean`  //since 4.11.6: [W/L] +
Returns 'true' when, <jsonstr> holds a valid JSON Object.

`jsonAsObjectHasKey(`<jsonstr>,<keystr>`) : boolean`  //since 4.11.6: [W/L] +
Returns 'true' when, <jsonstr> holds a valid JSON Object which hold <keystr> as key. +
Following example will also return 'true': +
[source,winst]
----
jsonAsObjectHasKey('{"productVersion" : "4.4.1","packageVersion" : "2","productId" : "jedit"}','productId')
----

`jsonAsArrayCountElements(`<jsonstr>`) : intstr`  //since 4.11.6: [W/L] +
If <jsonstr> holds a valid JSON Array the returned value is a String with the number of elements in the Array. +
In case of Error = '"0"'

`jsonAsObjectCountElements(`<jsonstr>`) : intstr`  //since 4.11.6: [W/L] +
If <jsonstr> holds a valid JSON Object the returned value is a String with the number of the elements of the object. +
In case of Error = '"0"'


`jsonAsArrayGetElementByIndex(`<jsonstr>, <indexstr>`) : jsonstring`  //since 4.11.6: [W/L] +
Returns from JSON Array <jsonstr> the element with the Index <indexstr> +
The Index begins with 0. +
In case of error = '""'

`jsonAsObjectGetValueByKey(`<jsonstr>, <keystr>`) : valuestring`  //since 4.11.6: [W/L] +
Returns from JSON Object <jsonstr> the value of the Key <keystr> +
In case of error = '""'


`jsonAsObjectSetValueByKey(`<jsonstr>, <keystr>,<valuestring>`) : jsonstring`  //since 4.11.6: [W/L] +
Returns a String with the <jsonstr> the passed JSON Object by it for the Key <keystr>
the value <valuestring> which is applied. If the Key is not present, then it will be generated. +
If the <valuestring> must be generated as String value (also in double quotes),
then you should better use the following Function: `jsonAsObjectSetStringtypeValueByKey`. +
In case of error = '""'

`jsonAsObjectSetStringtypeValueByKey(`<jsonstr>, <keystr>,<valuestring>`) : jsonstring`  //since 4.11.6: [W/L] +
Returns a String at the <jsonstr> with the passed JSON Object for the Key <keystr>
set the value <valuestring> as String (also in double quotes).
If the Key is not present, it will be created. +
If a <valuestring> should not be created as a String value,
then it is recommended to use the previous function: `jsonAsObjectSetValueByKey`. +
In case of error = '""'


`jsonAsArrayPutObjectByIndex(`<jsonstr>, <indexstr>, <objectstr>`) : jsonstring`  //since 4.11.6: [W/L] +
Retuns a string with the <jsonstr> in the passed JSON Array in the <indexstr> set on Index
of the object <objectstr>. +
In case of error = '""'


`jsonAsArrayToStringList(`<jsonstr>`) : stringlist`  //since 4.11.6: [W/L] +
Returns a String with the <jsonstr> passed JSON Array as Stringlist with an Array element per Line.

`jsonStringListToJsonArray(`<strlist>`) : jsonstr`  //since 4.11.6: [W/L] +
Returns a String with a JSON Array that the line of the Stringlist <strlist> which holds
Elements.

`jsonAsObjectGetKeyList(`<jsonstr>`) : stringlist`  //since 4.11.6: [W/L] +
Returns a Stringlist with the Keys that the JSON Object <jsonstr> holds.

Example +
Read productOnClient objects from file, change the clientId to the actual machine
and store the data to the opsi-server.
[source,winst]
----
[Actions]
requiredWinstVersion >= "4.11.6"

DefVar $ProductId$
DefVar $poc_file$
DefVar $objectStr$
DefVar $ArrayStr$

DefStringlist $pocList$

set $poc_file$ = "c:\tmp\product_on_client.json"

Message "Restore productOnClient from file ..."
comment " get Restore data from file ..."
Set $ArrayStr$ = strLoadTextFile($poc_file$)
if not(jsonIsValid($ArrayStr$))
	LogError "got no valid json from file"
	isFatalError
endif
if not(jsonIsArray($ArrayStr$))
	LogError "got no json Array from file"
	isFatalError
endif

comment "get list from array"
set $pocList$ = jsonAsArrayToStringList($ArrayStr$)
comment "loop over list"
for %pocindex% = "0" to calculate(count($pocList$)+"-1") do sub_set_clientid_in_poclist
comment "convert modified list to json array"
set $ArrayStr$ = jsonStringListToJsonArray($pocList$)
comment "write back"
opsiServiceCall_updatePOC

[sub_set_clientid_in_poclist]
set $objectStr$ = takeString("%pocindex%", $poclist$)
set $objectStr$ = jsonAsObjectSetStringtypeValueByKey(($objectStr$, "clientId","%opsiserviceUser%")
set $poclist$ = setStringInListAtIndex($objectStr$,$poclist$,"%pocindex%")

[opsiServiceCall_updatePOC]
"method": "productOnClient_updateObjects"
"params": [
					'$ArrayStr$',
					]
----

[[opsi-winst-rc-process]]
=== Process and Script related functions [W/L]

`waitForPackageLock(`<seconds timeout string>,<bool should we kill>`) : bool` //since 4.11.6.1 [L] +
Returns `true` if the Linux package system is not locked by an other process. +
If it is locked, it waits <seconds timeout string> to get the lock. +
If the timeout is reached and <bool should we kill> is `true`
than the locking process is killed but using this feature is *not recommended*.

* `processIsRunning(`<process name>`) : boolean`  //since 4.11.6.1 [W/L] +
Returns `true` if <process name> is found in the process list

There are three variations of the `shellCall` command:


* `shellCall (`<command string>`) : stringlist (output)`
* `shellCall (`<command string>`) : noresult`
* `shellCall (`<command string>`) : string (exitcode)`

The three commands are executed <command string> in the standard shell (cmd.exe / bash).
The functions differ based on the return value

* `shellCall (`<command string>`) : stringlist (output)` //since 4.11.4.2 [W/L] +
Returns the output of <command string> as stringlist.
[source,winst]
----
set $list$= shellCall('net start')
----
Is a shortcut for this expression:
[source,winst]
----
set $list$ = getOutStreamFromSection ('DosInAnIcon_netstart winst /sysnative')

[DosInAnIcon_netstart]
net start
----

* `shellCall (`<command string>`) : noresult` //since 4.11.6.1 [W/L] +
Returns nothing.
[source,winst]
----
shellCall('net start')
----
Is a shortcut for this expression:
[source,winst]
----
DosInAnIcon_netstart winst /sysnative

[DosInAnIcon_netstart]
net start
----


* `shellCall (`<command string>`) : string (exitcode)` //since 4.11.6.1 [W/L] +
Returns the exit code of <command string> as string.
[source,winst]
----
set $exitcode$ = shellCall('net start')
----
Is a shortcut for this expression:
[source,winst]
----
DosInAnIcon_netstart winst /sysnative
set $exitcode$ = getLastExitcode

[DosInAnIcon_netstart]
net start
----

* `startProcess(`<string>`) : string (exitcode)` //since 4.11.6.1 [W/L] +
Starts the command binary <string> as process and returns the exit code +
[source,winst]
----
set $exitcode$ = startProcess('setup.exe /S')
----
Is a shortcut for this expression:
[source,winst]
----
Winbatch_setup
set $exitcode$ = getLastExitcode

[Winbatch_setup]
setup.exe /S
----
In fact it is internal a winbatch call, so all the `winbatch` modifiers are also allowed for `startProcess`

* `/LetThemGo` +
This is the contrary to `/WaitOnClose`. It is used if '{opsi-winst}/opsi-script' shall proceed while the started processes run in their own threads.

* `/TimeOutSeconds` <seconds> +
A timeout setting. After waiting <seconds>, '{opsi-winst}/opsi-script' will end the process. +
Since version 4.11.3, /TimeOutSeconds may be used without a waiting condition (e.g. `/WaitForProcessEnding`) but not in combination with `/WaitSeconds`. +
Since version 4.11.4.6 the time progress from start until timeout is displayed by the progress bar. +

* `/WaitSeconds` [number of seconds] +
If a call includes the parameter /WaitSeconds [number of seconds], then '{opsi-winst}/opsi-script' is waiting for [number of seconds] before proceeding. In the default configuration, we also wait for any programs that are currently running to finish. If we combine the parameter /WaitSeconds with the option `/LetThemGo`, then '{opsi-winst}/opsi-script' continues processing after the waiting time is finished.

* `/WaitForProcessEnding` <program name> +
Waits for the process called <program name> to end. +
Should be combined with `/TimeOutSeconds`.

*  `/32Bit` //since 4.11.3.5  [W] +
This is the default. The paths within the section are assumed to be 32 bit path. +
Example: `c:\windows\system32\regedit.exe` calls (even when running on a 64 bit system) the 32 bit 'regedit.exe'.

*  `/64Bit` //since 4.11.3.5  [W] +
The paths within the section are assumed to be 64 bit paths. +
Example: `c:\windows\system32\regedit.exe` executes (running on a 64 bit system) the 64 bit 'regedit.exe'.

*  `/SysNative` //since 4.11.3.5  [W] +
The paths within the section are assigned according to the OS architecture. +
Example: `c:\windows\system32\regedit.exe` running on a 64bit system calls the 64 bit 'regedit.exe' and running on a 32 bit system the 32 bit 'regedit.exe'.




[[opsi-winst-rc-cryptfunc]]
=== Crypt / Hash related functions [W/L]

`encryptStringBlow(`<keystring>,<datastring>`) : string`  //since 4.11.6 [W/L] +
Encrypted <datastring> with the Key <keystring> under application of Blowfish and returns the encrypted value.

`decryptStringBlow(`<keystring>,<datastring>`) : string`  //since 4.11.6 [W/L] +
Decrypts <datastring> with the Key <keystring> under the application of Blowfish and returns the decrypted value.

`md5sumFromFile(`<path to file>`) : string`  //since 4.11.6 [W/L] +
Returns the md5sum that under <path to file> was found. +
In case of error returns an empty String.

[[opsi-winst-rc-timefunc]]
=== time / date related functions

`timeStampAsFloatStr : string` (Floating Number - format: 'days.decimal days') //since 4.11.6 [W/L] +
Returns an actual Timestamp as Floating point number String. The number is before the decimal point, since 30. Dezember 1899.
After the decimal point is the time in fractions of the day. +
Just for Fun: Why not 31. December 1899: ? +
check http://www.delphibasics.co.uk/RTL.asp?Name=TDateTime


[[opsi-winst-rc-misc]]
=== Misc news

* `getMSVersionMap` +
* Has now a new key entry: `ReleaseID` which gives you the sub release of 'Windows 10' like e.g. '1511'.
The Value comes from the Registry: "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion" "ReleaseID"
* Has now a new key entry: `prodInfoText` which gives you a string to the edition type like e.g. 'PRODUCT_PROFESSIONAL'.
* Has now a new key entry: `prodInfoNumber` which gives you a string with a decimal number of the edition type like e.g. '48'.

[cols="3,3,15"]
|==========================
| DecNum | HexNum | Text
|  00 | 00 | An unknown product
|  01 | 01 | Ultimate Edition"
|  02 | 02 | Home Basic Edition
|  03 | 03 | Home Premium Edition
|  04 | 04 | Enterprise Edition
|  05 | 05 | Home Basic Edition
|  06 | 06 | Business Edition
|  07 | 07 | Server Standard Edition (full installation)
|  08 | 08 | Server Datacenter Edition (full installation)
|  09 | 09 | Small Business Server
|  10 | 0A | Server Enterprise Edition (full installation)
|  11 | 0B | Starter Edition
|  12 | 0C | Server Datacenter Edition (core installation)
|  13 | 0D | Server Standard Edition (core installation)
|  14 | 0E | Server Enterprise Edition (core installation)
|  15 | 0F | Server Enterprise Edition for Itanium-based Systems
|  16 | 10 | Business Edition
|  17 | 11 | Web Server Edition (full installation)
|  18 | 12 | Cluster Server Edition
|  19 | 13 | Home Server Edition
|  20 | 14 | Storage Server Express Edition
|  21 | 15 | Storage Server Standard Edition
|  22 | 16 | Storage Server Workgroup Edition
|  23 | 17 | Storage Server Enterprise Edition
|  24 | 18 | Server for Small Business Edition
|  25 | 19 | Small Business Server Premium Edition
|  26 | 1A | PRODUCT_HOME_PREMIUM_N
|  27 | 1B | PRODUCT_ENTERPRISE_N
|  28 | 1C | PRODUCT_ULTIMATE_N
|  29 | 1D | PRODUCT_WEB_SERVER_CORE
|  30 | 1E | Windows Essential Business Server Management Server
|  31 | 1F | Windows Essential Business Server Security Server
|  32 | 20 | Windows Essential Business Server Messaging Server
|  33 | 21 | Server Foundation
|  34 | 22 | PRODUCT_HOME_PREMIUM_SERVER
|  35 | 23 | PRODUCT_SERVER_FOR_SMALLBUSINESS_V
|  36 | 24 | Server Standard Edition without Hyper-V (full installation)
|  37 | 25 | Server Datacenter Edition without Hyper-V (full installation)
|  38 | 26 | Server Enterprise Edition without Hyper-V (full installation)
|  39 | 27 | Server Datacenter Edition without Hyper-V (core installation)
|  40 | 28 | Server Standard Edition without Hyper-V (core installation)
|  41 | 29 | Server Enterprise Edition without Hyper-V (core installation)
|  48 | 30 | PRODUCT_PROFESSIONAL
|  49 | 31 | PRODUCT_PROFESSIONAL_N
|  50 | 32 | PRODUCT_SB_SOLUTION_SERVER
|  51 | 33 | PRODUCT_SERVER_FOR_SB_SOLUTIONS
|  52 | 34 | PRODUCT_STANDARD_SERVER_SOLUTIONS
|  53 | 35 | PRODUCT_STANDARD_SERVER_SOLUTIONS_CORE
|  54 | 36 | PRODUCT_SB_SOLUTION_SERVER_EM
|  55 | 37 | PRODUCT_SERVER_FOR_SB_SOLUTIONS_EM
|  56 | 38 | PRODUCT_SOLUTION_EMBEDDEDSERVER
|  57 | 39 | PRODUCT_SOLUTION_EMBEDDEDSERVER_CORE
|  59 | 3B | PRODUCT_ESSENTIALBUSINESS_SERVER_MGMT
|  60 | 3C | PRODUCT_ESSENTIALBUSINESS_SERVER_ADDL
|  61 | 3D | PRODUCT_ESSENTIALBUSINESS_SERVER_MGMTSVC
|  62 | 3E | PRODUCT_ESSENTIALBUSINESS_SERVER_ADDLSVC
|  63 | 3F | PRODUCT_SMALLBUSINESS_SERVER_PREMIUM_CORE
|  64 | 40 | PRODUCT_CLUSTER_SERVER_V
|  65 | 41 | PRODUCT_EMBEDDED
|  66 | 42 | PRODUCT_STARTER_E
|  67 | 43 | PRODUCT_HOME_BASIC_E
|  68 | 44 | PRODUCT_HOME_PREMIUM_E
|  69 | 45 | PRODUCT_PROFESSIONAL_E
|  70 | 46 | PRODUCT_ENTERPRISE_E
|  71 | 47 | PRODUCT_ULTIMATE_E
|  72 | 48 | PRODUCT_ENTERPRISE_EVALUATION
|  84 | 54 | PRODUCT_ENTERPRISE_N_EVALUATION
|  98 | 62 | PRODUCT_CORE_N
|  99 | 63 | PRODUCT_CORE_COUNTRYSPECIFIC
| 100 | 64 | PRODUCT_CORE_SINGLELANGUAGE
| 101 | 65 | PRODUCT_CORE
| 121 | 79 | PRODUCT_EDUCATION
| 122 | 7A | PRODUCT_EDUCATION_N
| 125 | 7D | Windows Enterprise 2015 LTSB
| 126 | 7E | Windows Enterprise 2015 LTSB N
| 129 | 81 | Windows Enterprise 2015 LTSB Evaluation
| 130 | 82 | Windows Enterprise 2015 LTSB N Evaluation
|==========================

* `getLinuxVersionMap` +
Has now a new key entry: `SubRelease` which gives you the sub release (patchlevel) of 'SLES 11' like e.g. '4'.

* `ShellBatch /showoutput` +
Shows the output of the called command in a separate window. +
Now also available at Linux. +
Now moves the main Window to top/right and the output window to left/down.

* `strLoadTextfile`  and `strLoadTextFileWithEncoding` +
Reads the firs line of the given file. Now without newline chars.

* repaired product ordering for `product_sort_algorithm 1`


[[opsi-407-releasenotes-product-sorting]]
==  Installation sequence / Sortieralgorithmus1

* The sort algorithm 1 should generate a product sequence from product dependencies and product priorities, based on the premise that dependencies
override priorities. By a combination of several mistakes, it was in 4.0.6 completely replaced by sort algorithm 2 which prefers priorities over dependencies. Now, everything is
working (again) as the manual tells: +
"*Algorithm1: product dependency above priority (default)* +
Using this algorithm, the product installation sequence at first will be calculated by the product priorities. In a second
step it will be resorted to met the product dependencies. This algorithm may push products with low priority before
products with higher priority to met the needs of product dependencies. But therefore you will not see installation
problems as result of not resolved product dependencies.
The installation sequence of products with action requests is exactly the sequence you see in the configed if sort the
products by the products by the column position and its order even if the scripts have partly been executed. Especially,
if the execution of a script is stopped by an "ExitWindows /ImmediateReboot" command, then it is guaranteed that
the suspended product installation is directly continued after reboot."

* The resulting installation sequence is just what you see if you look at the configed 'product configuration' and sort there the products by the column 'position'.


CAUTION: This fix may changed your installation sequence comparing to the wrong sequence in 4.0.6. Because this bug was present for a longer time, this change may be unexpected.


[[opsi-407-releasenotes-netboot-windows]]
== opsi Support Matrix Windows Clients

In following schema you will find on which Windows platforms can opsi run as client.

include::../common/opsi_manual_supportmatrix-winclient.asciidoc[]



[[opsi-407-releasenotes-misc]]
== Miscellaneous

[[opsi-407-releasenotes-misc-changelogs]]
=== Changelogs:


[[opsi-407-releasenotes-misc-changelogs-opsi-configed]]
==== Changelog opsi-configed


opsi-configed (4.0.7.1.3-1) STABLE; urgency=medium

  * fix: a unified interpretation of the expected waiting time for a progressbar

 -- roeder <roeder@uib.local>  Fri, 24 Jun 2016 14:52:52 +0200

opsi-configed (4.0.7.1.2-1) STABLE; urgency=medium

  * more details in connection window

 -- Rupert Roeder <roeder@uib.local>  Thu, 23 Jun 2016 15:08:20 +0200

opsi-configed (4.0.7.1.1-1) STABLE; urgency=medium

  * bugfix reload of licence statistics

 -- Rupert Roeder <roeder@uib.local>  Thu, 23 Jun 2016 11:48:03 +0200

opsi-configed (4.0.6.7.6-1.12) TESTTING; urgency=medium

  * some more start rearrangements of threads
  * fixed "remove all licences from selected clients"

 -- roeder <roeder@uib.local>  Fri, 20 May 2016 15:58:42 +0200

opsi-configed (4.0.6.7.5-1.11) STABLE; urgency=medium

  * some rearrangements of start threads

 -- Rupert Roeder <roeder@uib.local>  Thu, 28 Apr 2016 15:42:30 +0200

opsi-configed (4.0.6.7.5-1.6) STABLE; urgency=medium

  * more logging

 -- Rupert Roeder <roeder@uib.local>  Thu, 28 Apr 2016 12:16:43 +0200

opsi-configed (4.0.6.7.5-1.5) STABLE; urgency=medium

  * new compile script

 -- Rupert Roeder <roeder@uib.local>  Fri, 22 Apr 2016 12:28:00 +0200

opsi-configed (4.0.6.7.5-1.1) STABLE; urgency=medium

  * eliminating waiting window on start

 -- roeder <roeder@uib.local>  Thu, 21 Apr 2016 15:03:44 +0200

opsi-configed (4.0.6.7.5-1) STABLE; urgency=medium

  * fixed display of problems with restricted countage of modules usage

 -- roeder <roeder@uib.de>  Fri, 08 Apr 2016 13:16:18 +0200

opsi-configed (4.0.7.2.1-1) EXPERIMENTAL; urgency=medium

  * activated multiselection for depotproperties page

 -- roeder <roeder@edge530-2>  Wed, 29 Jun 2016 14:20:18 +0200

opsi-configed (4.0.7.1.3-1) STABLE; urgency=medium

  * fix: a unified interpretation of the expected waiting time for a progressbar

 -- roeder <roeder@uib.local>  Fri, 24 Jun 2016 14:52:52 +0200

opsi-configed (4.0.7.1.2-1) STABLE; urgency=medium

  * more details in connection window

 -- Rupert Roeder <roeder@uib.local>  Thu, 23 Jun 2016 15:08:20 +0200

opsi-configed (4.0.7.1.1-1) STABLE; urgency=medium

  * bugfix reload of licence statistics

 -- Rupert Roeder <roeder@uib.local>  Thu, 23 Jun 2016 11:48:03 +0200

opsi-configed (4.0.6.7.6-1.12) TESTTING; urgency=medium

  * some more start rearrangements of threads
  * fixed "remove all licences from selected clients"

 -- roeder <roeder@uib.local>  Fri, 20 May 2016 15:58:42 +0200

opsi-configed (4.0.6.7.5-1.11) STABLE; urgency=medium

  * some rearrangements of start threads

 -- Rupert Roeder <roeder@uib.local>  Thu, 28 Apr 2016 15:42:30 +0200

opsi-configed (4.0.6.7.5-1.6) STABLE; urgency=medium

  * more logging

 -- Rupert Roeder <roeder@uib.local>  Thu, 28 Apr 2016 12:16:43 +0200

opsi-configed (4.0.6.7.5-1.5) STABLE; urgency=medium

  * new compile script

 -- Rupert Roeder <roeder@uib.local>  Fri, 22 Apr 2016 12:28:00 +0200

opsi-configed (4.0.6.7.5-1.1) STABLE; urgency=medium

  * eliminating waiting window on start

 -- roeder <roeder@uib.local>  Thu, 21 Apr 2016 15:03:44 +0200

opsi-configed (4.0.6.7.5-1) STABLE; urgency=medium

  * fixed display of problems with restricted countage of modules usage

 -- roeder <roeder@uib.de>  Fri, 08 Apr 2016 13:16:18 +0200

opsi-configed (4.0.6.7.4-1) EXPERIMENTAL; urgency=medium

  * multiselection switched on in swaudit page
  * labelling of pdf open or save dialog

 -- roeder <roeder@uib.de>  Thu, 17 Mar 2016 13:46:02 +0100

opsi-configed (4.0.6.7.3-1) EXPERIMENTAL; urgency=medium

  * fixed lost view of filtered clients

 -- roeder <roeder@uib.de>  Wed, 16 Mar 2016 16:23:32 +0100

opsi-configed (4.0.6.7.2-1) EXPERIMENTAL; urgency=medium

  * treeview groups can now be moved, the clients can be removed (without deleting the group)

 -- roeder <roeder@uib.de>  Tue, 15 Mar 2016 15:12:07 +0100

opsi-configed (4.0.6.7.1-1) EXPERIMENTAL; urgency=medium

  * password property hiding

 -- roeder <roeder@uib.de>  Wed, 09 Mar 2016 12:56:07 +0100

opsi-configed (4.0.6.7.0-1) EXPERIMENTAL; urgency=medium

  * fixed re-selection of clients after reload

 -- roeder <roeder@uib.de>  Mon, 07 Mar 2016 12:30:43 +0100

opsi-configed (4.0.6.6.2-1) TESTING; urgency=medium

  * fixed two problems in licence management

 -- roeder <roeder@uib.de>  Thu, 03 Mar 2016 16:23:06 +0100

opsi-configed (4.0.6.6.1-1) TESTING; urgency=medium

  * (delayed) wake on lan on several depots
  * multi-word search implemented for client page
  * Windows menu introduced
  * option to arrange all running dialogs in the foreground
  * context menu option for saving log files
  * several bug fixes

 -- roeder <roeder@uib.de>  Mon, 22 Feb 2016 14:38:12 +0200

opsi-configed (4.0.6.3.8-1) UNRELEASED; urgency=medium

  * fixed bug that the clients base data for the search function did not change on depot change


[[opsi-407-releasenotes-misc-changelogs-opsi-client-agent]]
==== Changelog opsi-client-agent

###############

[[opsi-407-releasenotes-misc-changelogs-config-win10]]
###############

[[opsi-407-releasenotes-misc-changelogs-opsi-script]]
==== Changelog opsi-script / opsi-winst
###############


[[opsi-407-releasenotes-misc-changelogs-windows-netboot]]
==== Changelog windows netboot products
###############

[[opsi-407-releasenotes-misc-changelogs-linux-netboot]]
==== Changelog linux netboot products

###############

.centos70

###############


.debian7

###############


.debian8

###############


.opensuse13-2
###############

.sles12
###############

.redhat70
###############

.Ubuntu14-04
###############


[[opsi-407-releasenotes-misc-changelogs-opsi-local-image]]
==== Changelog opsi-local-image

###############


[[opsi-407-releasenotes-misc-changelogs-misc-netboot]]
==== Changelog misc netboot products

###############

[[opsi-407-releasenotes-misc-changelogs-python-opsi]]
==== Changelog python-opsi

###############

[[opsi-407-releasenotes-misc-changelogs-opsiconfd]]
==== Changelog opsiconfd

###############
####################

[[opsi-407-releasenotes-misc-changelogs-opsi-utils]]
==== Changelog opsi-utils

###############

####################

[[opsi-407-releasenotes-misc-changelogs-opsi-linux-bootimage]]
==== Changelog opsi-linux-bootimage

###############

[[opsi-407-releasenotes-misc-changelogs-opsi-depotserver]]
==== Changelog opsi-depotserver

###############

####################

[[opsi-407-releasenotes-misc-changelogs-opsi-atftp]]
==== Changelog opsi-atftp


####################

[[opsi-407-releasenotes-misc-changelogs-opsipxeconfd]]
==== Changelog opsi-atftp


####################

[[opsi-407-releasenotes-misc-changelogs-opsi4ucs]]
==== Changelog opsi4ucs


####################

[[opsi-407-releasenotes-misc-changelogs-opsi-swaudit]]
==== Changelog opsi-swaudit
####################

 [[opsi-407-releasenotes-misc-changelogs-opsi-template]]
==== Changelog opsi-template
####################
