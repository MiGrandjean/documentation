////
; Copyright (c) uib gmbh (www.uib.de)
; This documentation is owned by uib
; and published under the german creative commons by-sa license
; see:
; http://creativecommons.org/licenses/by-sa/3.0/de/
; http://creativecommons.org/licenses/by-sa/3.0/de/legalcode
; english:
; http://creativecommons.org/licenses/by-sa/3.0/
; http://creativecommons.org/licenses/by-sa/3.0/legalcode
;
; credits: http://www.opsi.org/credits/
////

////
;***************************************************************************
; Subversion:
; $Revision:  $ $Author: oertel $
; $Date: $
;***************************************************************************
////

:Author:    uib gmbh
:Email:     info@uib.de
:Revision:  4.0.7
:doctype:   book

// Include common opsi terms
include::../common/opsi_terms.asciidoc[]

[[opsi-407-releasenotes]]
= opsi Version 4.0.7 Release Notes

// Include common opsi copyright
include::../common/opsi_manual_copyright.asciidoc[]


[[opsi-407-releasenotes-overview]]
== Overview of the new features

The Highlights of this Release are:

* Ubuntu 16.04 (Xenial) support
* New opsi bootimage
* New opsi-linux netboot products and client-agent
* Product sorting while installation for (standard) algorithm 1 is fixed
* New opsi-client-agent

The opsi Service Release 4.0.7 comes with a whole bunch of new features and improvements.
Here is a summary:

* New opsi-bootimage
** Uses Ubuntu Xenial 16.04 as base
** Kernel 4.4.11

* opsi-server packagesnow also for:
** Ubuntu 16.04
** sles11sp4
** sles12sp1
** See also special chapter: <<opsi-407-releasenotes-supportmatrix>>.


* opsi-configed:
** Scheduler for WakeOnLan integrated
** WakeOnLan dispatches calls to (clients of) depotservers
** Passwords in properties are now hidden
** Selection list for config server on logon
** New main menue entry "windows"
** Extended search function
** Expanded functions for groups in the treeview component
** Several bug fixes


* opsi-client-agent: +
** Neuer opsiclientd
** Neuer Client für den Kioskmode
** Upgrade de SSL libraries zu 1.0.2h
** See also special chapter: <<opsi-407-releasenotes-clientagent>>

* opsi-winst / opsi-script (4.11.6.1)
** Many new functions
** Upgrade of the SSL libraries to 1.0.2h
** See also special chapter: <<opsi-407-releasenotes-opsi-script>>


* Installation sequence (sort algorithm 1) fixed
The sort algorithm 1 should generate a product sequence from product dependencies and product priorities, based on the premise that dependencies 
override priorities.. +
The sequence of products with action requests which the opsi-winst gets now keeps its order even if the scripts have partly been executed. +
See also special chapter: <<opsi-407-releasenotes-product-sorting>>


* opsi-clonezilla:
** new version
** runcommand 'ocs-live' is working again
** UEFI Support

* opsi-linux-support:
** New opsi-linux-client-agent (with 15 free starts)
** debian8 product that may use a local http repository
** ubunt16-04 product that may use a local http repository
** Posibillity to provide local http repositories for Linux OS installations 
** Produkt l-opsi-server für die automatisierte Installation von opsi-server Paketen 
auf einer Linux Maschine (z.B. zur Erstellung eines neuen Depotservers)
See special chapter: <<opsi-407-releasenotes-linux>>

* Miscellaneous
* Es gibt eine neue Konfigurationsdatei für die Hardware-Inventur.
Mit dieser ist es möglich, Daten über die Anzahl der physikalischen und
logischen Kerne eines Systems zu erheben und zu speichern.
** Bei der Verwendung der Option 'resolveHostAddress' bei den Backends HostControl und HostControlSafe +
wird bei einem fehlgeschlagenen Versuch der Namensauflösung eine eventuell hinterlegte IP-Adresse verwendet.
** Zahlreiche Verbesserungen und Features in der Python-Library von opsi 

[[opsi-407-releasenotes-important]]
== Wichtige Hinweise - Unbedingt Beachten


*In der Kombination von Ubuntu 16.04 und mysql ist unbedingt folgendes zu Beachten:* 

CAUTION: Ubuntu Xenial (16.04) verwendet MySQL in der Version 5.7. Diese Version verwendet den vorher optionalen 'strict mode' nun standardmäßig. Dies führt zu einem Fehlschlag des Befehls _opsi-setup_ _--configure-mysql_. Dementsprechend sollte vor dem Befehlsaufruf folgende Datei editiert werden:
[source,prompt]
----
/etc/mysql/mysql.conf.d/mysqld.cnf
----
In der [mysqld] Sektion muss nun folgende Zeile eingefügt werden:
[source,prompt]
----
sql_mode=NO_ENGINE_SUBSTITUTION
----
Es ist nun möglich unter Ubuntu Xenial fort zu fahren.

*Aktuelle Netbootprodukte mit 4.0.7 verwenden::*

CAUTION: Die Netbootprodukte aus 4.0.6 sind leider nicht kompatibel zu dem bootimage von 4.0.7. Verwenden Sie mindestens die im pre Release vom 24.6.2016 veröffentlichten (https://forum.opsi.org/viewtopic.php?f=1&t=8480) oder die mit diesem Release erschienen Versionen.

*Sortieralgorithmus1 repariert:*

CAUTION: Durch die Reperatur dieses länger vorhandenen Bugs ändert sich die Installationsreihenfolge im Vergleich zu der fehlerhaften Reihenfolge in 4.0.6


[[opsi-407-releasenotes-installation]]
== Installation notes

For safety reasons we recommend creating a backup of your backends with +
{opsi-backup} before updating:
[source,prompt]
----
opsi-backup create
----

The products contained in this release depend on each other in many cases. +
Do not try to install just parts of this update.

We recommend to first update the server and then the opsi products.


To make sure that permissions are applied correctly +
we recommend to run ``opsi-setup --set-rights`` after the installation. +
Please be aware that the execution of latter can last for many minutes.


[[opsi-407-releasenotes-installation-opsipackages]]
=== Notes for updating opsi-packets

////
Bitte nachstehenden Block bei release nicht löschen sondern auskommentieren
////


For installing the testing server packets the opsi repository has to be changed from `opsi40` to `opsi40-testing`.

In case of Ubuntu 14.04: +
`deb http://download.opensuse.org/repositories/home:/uibmz:/opsi:/opsi40/xUbuntu_14.04 ./` +
replace with: +
`deb http://download.opensuse.org/repositories/home:/uibmz:/opsi:/opsi40-testing/xUbuntu_14.04 ./`

Then the packages can be updated. +


For example Ubuntu / Debian:
[source,prompt]
----
aptitude update
aptitude full-upgrade
----
For installing the opsi products: +

For installing the testing opsi products you should add to the file: +
`/etc/opsi/opsi-product-updater.conf` +
the following section

[source,prompt]
----
[repository_opsi_406_testing]
baseUrl = http://download.uib.de
dirs = opsi4.0/testing/opsi-v406/products/localboot, opsi4.0/testing/opsi-v406/products/netboot
active = true
username =
password =
autoInstall = false
autoUpdate = true
autoSetup = false
onlyDownload = false
----

You may append the `dirs` line by:

* `, opsi4.0/testing/opsi-v406/opsi-linux`

* `, opsi4.0/testing/opsi-v406/opsi-local-image`


Set in the section `[repository_uib]` the following line:
[source,prompt]
----
active = false
----
Then execute the opsi-product-updater.


To install all packets:
[source,prompt]
----
opsi-product-updater -i -vv
----

To install updates only:
[source,prompt]
----
opsi-product-updater -vv
----

////
Bitte vorstehenden Block bei release nicht löschen sondern auskommentieren
////

////
The installation does not require any special action. It is performed within the normal updates of your server and opsi products.

First update the server according to the update command of your Linux distribution. +

We recommend to set in `/etc/opsi/opsi-product-updater.conf`
in the section `[repository_uib]` the following to get all products even if they start with win* :
[source,prompt]
----
excludes =
----

If you need the opsi-linux products you should append the `dirs` entry: +

[source,prompt]
----
dirs = opsi4.0/products/localboot, opsi4.0/products/netboot
----
by the path `opsi4.0/products/opsi-linux`

If you need the opsi-local-image products you should append the `dirs` entry
by the path `opsi4.0/products/opsi-local-image`

Then execute the opsi-product-updater.

[source,prompt]
----
opsi-product-updater -i -vv
----

To install updates only:
[source,prompt]
----
opsi-product-updater -vv
----

In case of a multi depot installation first upgrade the config-server before upgrading the depots.


If you want to use product-ids with a length of more than 32 characters and are using the MySQL-backend please update the table definition on your configserver with the following command:

[source,prompt]
----
opsi-setup --update-mysql
----
////



////
For details please refer to the opsi-v405-releasenotes manual and the revised opsi manuals.
////

[[opsi-407-releasenotes-packages]]
== list of packages

.server packages:
* opsi-depotserver
* opsi-linux-support
* opsi-utils
* opsiconfd
* python-opsi
* opsi-linux-bootimage
* opsi-configed

.opsi packages (localboot):
* opsi-client-agent
* opsi-configed
* config-win10

.opsi packages (netboot):
* win* 
* opsi-clonezilla

.opsi packaages (opsi-linux):
* centos70_
* redhat70_
* debian7-
* debian8-
* Ubuntu14-04
* Ubuntu16-04
* opensuse13-2
* sles12

With opsi 4.0.7 you can install debain8 and Ubuntu16-04 from a local apache repository. The opsi-linux-support package provides the apache2 system package
and also creates the neccessarry folders. You then have to fill these with our provided debian8 and ubuntu16-04 repository available at our download server.

.opsi packages(opsi-local-image):
* opsi-local-image-win* 
* opsi-local-image-capture
* opsi-local-image-capture-prepare


[[opsi-407-releasenotes-missing]]
== What is still missing (and under progress)

* opsi-client-agent: +
To execute opsi-winst scripts as the current user during logon 'User Profile Management'.

* opsi-linux-client-agent: +
** A real opsiclientd service for the following distributions: +
RedHat 7 +
CentOS 7 

* opsi-linux 4.0.7 netboot products: uefi support

[[opsi-407-releasenotes-knownbugs]]
== Known Bugs / Known Problems

.KNOWN BUGS:

* opsi-winst 4.11.6.1: +
Im interaktiven Modus geht der Logviewer zur Zeit nicht.


.KNOWN PROBLEMS:

* ######

[[opsi-407-releasenotes-eol]]
== Discontinuation

[[opsi-407-releasenotes-eol_server]]
=== Discontinuation: Distributions for opsi-server

This chapter lists distributions that for several reasons are not supported by opsi anymore.

* sles11sp3

See also the support matrix: <<opsi-407-releasenotes-supportmatrix>>.

[[opsi-407-releasenotes-eol_winclient]]
=== Discontinuation clients: Windows versions

With opsi v4.0.7 the netboot packages for

* Windows 8

are not maintained anymore. +
Also in the near future the Update Abos will not support these Windows versions anymore. +
Please contact us in case of any questions or concerns.

See also the chapter: <<opsi-407-releasenotes-netboot-windows>>.

[[opsi-407-releasenotes-eol_linclient]]
=== Discontinuation clients: Linux versions

With opsi v4.0.7 the netboot packages for

* centos65
* redhat65
* opensuse13-1
* sles11sp3
* ubuntu14-10
* ubuntu15-04


will not be maintained anymore. Please contact us in case of any questions or concerns.

[[opsi-407-releasenotes-supportmatrix]]
== opsi Support Matrix

This is an overview on which distributions and releases the opsi-server will run:

include::../common/opsi_manual_supportmatrix.asciidoc[]

If you are using an OS version which is not contained in the section above,
we recommend updating the OS before installing opsi v4.0.7.


[[opsi-407-releasenotes-opsi-configed]]
== Improvements for '{opsi-configed}'

==== WakeOnLan Scheduler 

Using the WakeOnLan command, you will send the selected clients a WakeOnLan signal. 

Since version 4.0.7 you can choose

* if the network signal is meant to be sent to the selected clients at once
* which delay should be between the waking of two clients 
* when the process shall start (via a scheduler).

If a client is assigned to a depot server which is not the configserver then the Wake On Lan signal is not directly sent to the client,
but the '{opsi-configed}' tries to establish a HTTPS connection to the 'opsiconfd' of the depot server which in turn sends the Wake On Lan packet to the client inside its network segment.

.'{opsi-configed}': Scheduler for Wake On Lan
image::opsi-configed-wake-on-lan-scheduler.png["{opsi-configed}: Scheduler for Wake On Lan", width="120mm"]

It should be observed that it is the '{opsi-configed}' which triggers the actions, therefore the program must not be shut down in the meantime. 


=== Hiding of Password Property Values

A property value that is a password should not be directy displayed.

Until this feature will be constructed as a special value type in some coming release the hack is introduced that a property value 
will only be displayed if the user explicitly requests it in cases:

* the property key text contains the string 'password'
* the property key text starts with the string 'secret'

E.g., the value of the property 'root_password' in the Linux netboot products is displayed as a sequence of stars  (until the user does the edit click and explicitly confirms to showing the password). 


=== Selection list for config server on logon

In the local user profile, the '{opsi-configed}' saves some session infos in order to rebuild the essential working 
context after restart,. Since version 4.0.7 the session data is used to produce a selection list 
of the opsi servers to which you were connected (e.g. a productive one and a second one for experimental purposes). The last server used
gets the top most place, such it can be directly again without any further action.

.'{opsi-configed}': login mask
image::opsi-configed-login.png["opsi-configed: login mask", width="90mm"]

=== New main menue item "Windows"

The new main menue item produces menue based calls for opening the License management frame and the frames with 
special functions for group and product operations.

Additionally, you will find  a new item "Arrange dialog frames" by which configed dialogs which got "lost" behind other desktop frames can be 
pulled to the foreground again.

.'{opsi-configed}': main menue with windows submenue
image::opsi-configed-main-menu-windows.png["opsi-configed: main menue with windows submenues", width="90mm"]

=== Extended client search function inside the client table

The client search inside the client table is extended by a "Google like" search for partial words. The search options now are:

* Full-text: the search string is used like when googling in the standard manner; i. e., if the input contains several parts 
(delimited by blanks) a table line will be a match if any of the input parts is fully contained in some column text.

* Full-text (complete string): the search string is used as if on googling the search string is embraced by citation marks; 
i. e. a table line will a match if the complete input string is part of some column content.

* Start-text search: a table line will be a match if the column text starts with the search string. 

* Regular expression: the search string is interpreted as so called regular expression; i.e., a table line will be a match 
if the input string produces a match according to the rules of regular expressions (as described in the java doc for java.util.regex.Pattern).


=== Extended options for working with groups in client tree view

The now more powerful context menu of a group item can be used

* to create a subgroup;
* to edit the group properties;
* to delete the group together with its subgroups and all client assignments of them;
* to remove all client assignments while keeping the group and its subgroups;
* to display the the contained clients and select them in one step.


[[opsi-407-releasenotes-clientagent]]
== New opsi-client-agent

* New opsiclientd
* New Agent for kiosk mode (software on demand)

image::opsi-client-kiosk.png["{opsi-kiosk-client}: opsi-kiosk-client: Main Window", width=400]

image::opsi-client-kiosk2.png["{opsi-kiosk-client2}: opsi-kiosk-client: Actionrequest confirmation", width=400]


[[opsi-407-releasenotes-linux]]
== Linuxsupport

=== Supportmatrix

include::../common/opsi_manual_supportmatrix-linclient.asciidoc[]

=== opsi-linux-client-agent: 15 Freistarts

Der opsi-linux-client-agent beinhaltet ab opsi 4.0.7 15 Freistarts bei denen der Agent auch ohne Freischaltung verwendet werden kann.

Genauer formuliert: Nach der initalen Installation des opsi-linux-client-agent kann der der opsi-script 15 mal im Servicekontext gestartet werden ohne eine Freischaltung zu fordern. +
Dies gibt Ihnen die Möglichkeit einen Linuxrechner aufzusetzen und mit den entsprechenden opsi-Produkten für den geplanten Einsatz zu konfigurieren.
Beispielsweise können Sie nach der Installation das Produkt `l-opsi-server` aufrufen um aus dem frischinstallierten Rechner einen opsi-server zu machen.

Für eine dauerhafte Pflege des installierten Linuxrechners über diese 15 Freistarts hinaus benötigen Sie aber eine Freischaltung dieses Features

=== Neue boolsche Funktion waitForPackageLock

Bei Installationen unter Linux kann es gerade nach einem Neustart vorkommen,
das ein Installationsversuch über das Paketsystem der Distribution scheitert,
da diese gerade durch einen anderen Prozess belegt ist.

Für diese Problematik gibt es jetzt die neue boolsche Funktion:
`waitForPackageLock(<seconds timeout string>,<bool should we kill>)` +
Liefert 'true' zurück wenn das Linux Packagesystem nicht gesperrt ist. +
Ist es gesperrt, so wird <seconds timeout string> Sekunden auf die Freigabe gewartet. +
Ist der Timeout erreicht,
so wird der Prozess welcher den Lock erzeugt hat abgeschossen wenn <bool should we kill> gleich 'true' ist. Dieses Vorgehen ist aber nicht empfohlen.

Beispiel:
[source,winst]
----
Message "Try to get Package Lock..."
if waitForPackageLock("60","false")
	comment "we got the package lock."
else
	LogError "could not get Package Lock"
	isFatalError "package lock failed"
endif
----

=== Erweiterung der Funktion getLinuxVersionMap

Die Funktion `getLinuxVersionMap` liefert als weiteren Key 'SubRelease'.
Dem Key 'SubRelease' wird auf SLES Systemen der Patchlevelstand als Wert zugewiesen.
Also bei SLES11SP4: 'SubRelease=4'.

=== Das Produkt l-opsi-server

Das Produkt 'l-opsi-server' dient dazu automatisiert auf einer Linuxmaschine per opsi-linux-client-agent
einen opsi-server zu installieren. Dies kann dazu dienen um schnell einen neuen opsi-depot-server zu installieren
oder z.B. ein opsi Testsystem.

Das Produkt 'l-opsi-server' hat folgende Properties:

* `opsi_online_repository`: +
(Base-) Repository for opsi-server installation. (Default="http://download.opensuse.org/repositories/home:/uibmz:/opsi:/opsi40") +
siehe auch 'repo_kind'

* `opsi_noproxy_online_repository`: +
(Base-) Repository for opsi-server installation (without any cache proxy). (Default="http://download.opensuse.org/repositories/home:/uibmz:/opsi:/opsi40") +
Sollten Sie bei `opsi_online_repository` einen Proxy oder deb-cacher mit angegeben haben 
(z.B. 'http://mydeb-cacher:9999/download.opensuse.org/repositories/home:/uibmz:/opsi:/opsi40"), 
dann geben Sie hier die URL nochmal ohne den Proxy an. Ansonsten geben Sie hier das selbe an wie bei `opsi_noproxy_online_repository`.

* `repo_kind`: +
From which repo kind ["experimental", "stable", "testing"] should be installed ?. (Default='stable') +
Aus dem Client OS, 'opsi_online_repository' und 'repo_kind' wird die URL zusammengebaut welche verwendet
um dem Client ein opsi Repository hinzuzufügen.

* `backend`: +
Which backend should be installed ? (mysql needs valid activation file). (Default='file') +
Eine modules Datei mit den benötigten Freischaltungen kann im custom Verzeichnis des Produktes abgelegt werden.
Wird dort eine modules gefunden so wird diese verwendet.

* `opsi_admin_user_name`: +
What is the name of the opsi_admin_user to create (empty= nothing created). (Default='adminuser') +
Wird hier ein user angegeben, so wird dieser angelegt, wird Mitglied der Gruppen 'opsiadmin', 'pcpatch'/'opsifileadmin'
und bekommt als unix- und samba Passwort den Wert von `opsi_admin_user_password`

* `opsi_admin_user_password`: +
What is the name of the opsi_admin_user to create (empty= nothing created). (Default='linux123') +
siehe `opsi_admin_user_name`

* `setup_after_install`: +
Which opsi product(s) should we switch to setup after l-opsi-server installation is done ?. (Default="")

* `allow_reboot`: +
May the server reboot if script is finished ?. (Default='true')

* `install_and_configure_dhcp`: +
Should we run the dhcp server on this machine ?. (Default='False') +
If this property is 'false' then the following properties: 'netmask', 'network',
'dnsdomain','nameserver' and 'gateway' are meaningless because thy only used for
dhcp configuration.

* `netmask`: +
Netmask  (for dhcp). (Default="255.255.0.0") +
Meaningless if 'install_and_configure_dhcp=false'

* `network`: +
network address (for dhcp). (Default="192.168.0.0") +
Meaningless if 'install_and_configure_dhcp=false'

* `dnsdomain`: +
DNS domain (for dhcp). (Default="uib.local") +
Meaningless if 'install_and_configure_dhcp=false'

* `nameserver`: +
Primary nameserver (for dhcp). (Default="192.168.1.245") +
Meaningless if 'install_and_configure_dhcp=false'

* `gateway`: +
gateway (option routers for dhcp). (Default="192.168.1.245") +
Meaningless if 'install_and_configure_dhcp=false'

* `update_test`: +
Do not use: Internal Debuging. (Default='False')

Das Produkt hat eine 'setup required before' Abhängigkeit zu dem Produkt 'l-system-update'.
D.h. wenn Sie 'l-opsi-server' auf 'setup' stellen wird automatisch 'l-system-update' auch auf setup
gestellt und vorher installiert.

CAUTION: Derzeit kann eine Maschine nicht gleichzeitig am selben opsi-config-server
opsi-client und opsi-depot-server sein. +
Wenn also ein per 'l-opsi-server' installierter opsi-server zum Depotserver an seinem Config-Server werden soll,
so müssen Sie vorher im configed die Maschine als Client löschen.

=== Einrichtung eines lokalen deb http Repository

Mit dem debian8 und ubuntu16-04 Paket ist es nun möglich von einem lokalen Apache2 Repository zu installieren. +
Dazu müssen bei dem Produkt im Property '' die entsprechende Adresse angeben nach dem Muster `http://<opsi-server>/opsi/<productId>` z.B `http://opsiserver/opsi/debian8` +
Weiterhin muss das lokale Repository natürlich erstellt werden. +
Stellen Sie dazu sicher, dass das Produkt `opsi-linux-support` auf Ihrem opsi-server installiert ist. Dieses Paket installiert die
hierfür benötigten Distributions-Pakete (apache2) und erstellt auch die benötigten Ordner. Dieser muss danach mit einem passenden distributions Repository gefüllt werden. +
Hierfür gibt es zwei Möglichkeiten:

. Einfach: Sie laden sich ein von uns gebautes und getestetes Repository herunter und packen aus
. Aufwendiger: Sie bauen es sich selbst


Einfach: +
Führen Sie das nachfolgende Script als 'root' aus. +
Beachten Sie das der Pfad zum Apache2 `DocumentRoot` zum einen Distributiontypisch unterschiedliche Defaults hat und darüberhinaus abweichend vom Default konfiguriert sein kann. +
Daher müssen Sie evtl. die zweite Zeile des Scriptes anpassen !

==== debian8

[source,prompt]
----
#! /bin/bash
DOCUMENTROOT=/var/www/html
URL=http://download.uib.de/opsi4.0/experimental/opsi-v407/opsi-linux
FILE=debian8.tgz
mkdir -p ${DOCUMENTROOT}/opsi
cd ${DOCUMENTROOT}/opsi
wget ${URL}/${FILE}
tar xzf ${FILE}
opsi-set-rights .
----

Aufwendiger: +
Sie können das Repository auch selbst erstellen:

==== ubuntu16-04

[source,prompt]
----
#! /bin/bash
DOCUMENTROOT=/var/www/html
URL=http://download.uib.de/opsi4.0/experimental/opsi-v407/opsi-linux
FILE=ubuntu16-04.tgz
mkdir -p ${DOCUMENTROOT}/opsi
cd ${DOCUMENTROOT}/opsi
wget ${URL}/${FILE}
tar xzf ${FILE}
opsi-set-rights .
----

Aufwendiger: +
Sie können das Repository auch selbst erstellen:

==== ucs41

######


==== ucs40

######


////
include::../common/opsi_manual_linux.asciidoc[]
////

[[opsi-407-releasenotes-clientagent]]
== Neuer opsi-client-agent

* Neuer opsiclientd
* Neuer Clientkiosk


[[opsi-407-releasenotes-clientagent-kiosk]]
=== Neue opsiclientkiosk Anwendung

Mit opsi 4.0.7 wird die bisherige Webbasierte Dartstellung des Clientkiosk
durch eine Applikation abgelöst. Hintergrund dieses Wechsels sind:

* Beseitigung des Problems das ein selbstsigniertes Zertifikat akzeptiert werden muß.
* Größere Funktionalität des neuen Clients

[[software-on-demand_usage]]
==== Clientkiosk: Verwendung

Wenn der opsi-client-agent während der Installation merkt, dass die Konfiguration: _software-on-demand.active_ auf _true_ gesetzt wurde, wird automatisch während der Installation auf dem Client ein Startmenü-Eintrag erstellt, über den die Kioskanwendung direkt aufgerufen werden kann. Diesen findet man dann unter: _Start -> Programme -> opsi.org -> software-on-demand_. 

Nach dem Start der Anwendung zeigt sich folgendes Hauptfenster:

.'opsi-client-kiosk': Hauptfenster
image::opsi-client-kiosk_num.png["opsi-client-kiosk: Hauptfenster", width=400]

Elemente:

. Headerleiste (Kundenspezifisch anpassbar)
. Info Button: Version und geladenen Sprache
. Datenladeanzeige
. Button zum Anzeigen der gesetzten Aktionen
. Button zum speichern und anzeigen der gesetzten Aktionen
. Button zum Beenden des Programms
. Anzeige der Gruppenliste
. Neuladen der Daten (z.B. nachdem Aktionen ausgeführt wurden)
. Gesetzten Filter löschen und alle Daten anzeigen
. Suchmaske (Filter Eingabefeld)
. Filter aktivieren
. Nach mögliche Produktupgrades filtern
. Produktanzeige
. Spalte zum Setzen der Aktionsanforderungen
. Tab: Produktdetailinfo: Beschreibung / Hinweis / Versionen
. Tab: Produktdetailinfo: Abhängigkeiten / Prioritäten
. Statusleiste mit Meldungen


Das Hauptfenster zeigt auf der linken Seite eine Liste der Produktgruppen (7) welche über die Config `software-on-demand.product-group-ids` für diesen Client freigegeben sind. Findet sich hier mehr wie eine Gruppe, so gibt es hier den zusätzlichen Eintrag 'Alle Gruppen' an erster Stelle. In dieser Liste kann ausgewählt werden aus welchen Produktgruppen Produkte angezeigt werden sollen. Per Default wird der erste Eintrag ausgewählt, also 'Alle Gruppen' oder die einzige Gruppe. +
Beim Start oder bei Veränderung der Auswahl werden die benötigten Daten eingelesen. Dies kann etwas dauern und der Lagevorgang wird im oberen Teil des Fensters (3) angezeigt. +
Die Produkte werden in der zentralen Tabelle (13) angezeigt. Sobald ein Produkt angeklickt ist werden unten Detailinformationen zu diesem Produkt eingeblendet (15/16). In der rechten Spalte `ActionRequest` (14) kann eine Aktionsanforderung gesetzt werden. +
Über den Button 'Zeige Aktionen' (4) werden die bisher der Anwendung bekannten Aktionen gezeigt aber noch nicht gespeichert. Erst der Button 'Aktionen Speichern' (5) sendet die gesetzten Aktionen an den Server. Dieser prüft ob über Produktabhängigkeiten noch weitere Produkte auf setup gesetzt werden müssen.
Abschließend wird in einem gesonderten Fenster die Gesamtliste der anstehenden Aktionen angezeigt.

.'opsi-client-kiosk': Aktionsbestätigung
image::opsi-client-kiosk2.png["opsi-client-kiosk: Aktionsbestätigung", width=200]

In diesem Fenster kann nun über den oberen Button `Installiere jetzt` eine sofortige Installation ausgelöst werden. In diesem Fall ist es schlau möglichst alle Applikationen zu schließen (bzw. zumindest Daten abzuspeichern) da die gestarteten Installationen mit laufenden Anwendungen in Konflikt geraten können. +
Über den unteren Button `Installiere bei nächster Standard-Gelegnheit` wird das Programm an dieser Stelle beendet und die gespeicherten Aktionen werden später ausgeführt.


Der config _software-on-demand.show-details_ aus opsi vor 4.0.7 hat in der Kioskanwendung keinen Einfluß mehr und kann gelöscht werden.




Auf das Modul kann auch über das Netzwerk zugegriffen werden, hierbei ist jedoch eine Authentifizierung notwendig.


[[software-on-demand_notice]]
==== Besonderheiten

Folgende Besonderheiten gelten für das Software-On-Demand Modul:

* Abhängigkeiten werden automatisch aufgelöst +
   - Software, die von Software aus der Demand-Gruppe abhängig ist, wird automatisch falls benötigt auf setup gesetzt, ohne Einfluss des Anwenders.

* Software die schon auf setup steht +
   - In diesem Fall, wird die Checkbox: _installieren_, schon bei der Übersichtsseite aktiviert.

[[software-on-demand_CI]]
===== Clientkiosk: Anpassung an Corporate Identity

Die Headerleiste des Hauptfensters (1) ist Kunden spezifisch anpassbar.
Dabei spielen zwei Dateien eine Rolle:

* `opsiclientkiosk.png`
* `opsiclientkiosk.ini`

Die `opsiclientkiosk.png` enthält das Bild welches in diesen Bereich geladen wird. +

Die `opsiclientkiosk.ini` definiert den Text und dessen Darstellung die in diesem Bereich angezeigt wird.

Beispiel:
----
[TitleLabel]
Text= opsi Client Kiosk
FontName = Arial
FontSize = 20
FontColor = $00000000
FontBold = true
FontItalic = false
FontUnderline = false
----

Templates für diese Dateien finden Sie unter `/var/lib/opsi/depot/opsi-client-agent/files/opsi/opsiclientkiosk/opsiclientkioskskin` 
bzw. `C:\Program Files (x86)\opsi.org\opsi-client-agent\opsiclientkiosk\opsiclientkioskskin`


Möchten Sie Änderungen, welche Sie an den oben genannten Dateien durchgeführt haben, davor schützen, dass selbige
beim Einspielen einer neuen Version des opsi-client-agenten verloren gehen, so können Sie hierfür das custom Verzeichnis
(/var/lib/opsi/depot/opsi-client-agent/files/opsi/custom) verwenden. Das komplette custom Verzeichnis
wird bei der Installation einer neuen Version des opsi-client-agenten gesichert und wieder hergestellt, so dass hier gemachte
Änderungen bei einem Update nicht verloren gehen.

* custom/opsiclientkioskskin/*.*
Alle Dateien aus diesem Verzeichnis werden bei der Installation des opsi-client-agent auf dem Client nach C:\Pro
gram Files (x86)\opsi.org\opsi-client-agent\custom\opsiclientkioskskin kopiert. Falls vorhanden, wird dieses opsiclientkioskskin 
Verzeichnis bevorzugt verwendet. 


Ein nachträgliches Rechte nachziehen hilft Folgefehler zu vermeiden:

[source, prompt]
----
opsi-setup --set-rights /var/lib/opsi/depot/opsi-client-agent
----



[[opsi-407-releasenotes-opsi-script]]
== opsi-script / opsi-winst 4.11.6

* Security Upgrade to Windows SSL libraries 1.0.2h (libeay32.dll, ssleay32.dll) +

* New manuals:

** opsi-winst-refrence-card with topic related function listing (by topic)

* New stringlist function:

`setStringInListAtIndex(`<newstring>,<list>,<indexstr>`) : stringlist`   //since 4.11.6 [W/L]


* New: Functinons for handling JSON strings and stringlists

[[opsi-winst-rc-json]]
=== opsiservicecall and JSON related functions [W/L]

Diese Funktionen dienen dazu JSON Ausdrücke auf String oder Stringlisten zu analysieren
und zu modifizieren. Notwendig ist hierfür, die Struktur des zu bearbeitenden JSON-Ausdrucks zu kennen
und zu verstehen. Dies kann dazu verwendet werden um mit über opsiservicall Sektionen
mit den objektorientierten opsi-webservice Methoden zu arbeiten. 

`jsonIsValid(`<jsonstr>`) : boolean`  //since 4.11.6: [W/L] +
Liefert 'true' zurück wenn, <jsonstr> einen gültigen JSON Ausdruck enthält.

`jsonIsArray(`<jsonstr>`) : boolean`  //since 4.11.6: [W/L] +
Liefert 'true' zurück wenn, <jsonstr> ein gültiges JSON Array enthält.

`jsonIsObject(`<jsonstr>`) : boolean`  //since 4.11.6: [W/L] +
Liefert 'true' zurück wenn, <jsonstr> ein gültiges JSON Object enthält.

`jsonAsObjectHasKey(`<jsonstr>,<keystr>`) : boolean`  //since 4.11.6: [W/L] +
Liefert 'true' zurück wenn, <jsonstr> ein gültiges JSON Object welches <keystr> als key enthält. +
Folgendes Beispiel würde 'true' zurückliefern: +
[source,winst]
----
jsonAsObjectHasKey('{"productVersion" : "4.4.1","packageVersion" : "2","productId" : "jedit"}','productId')
----

`jsonAsArrayCountElements(`<jsonstr>`) : intstr`  //since 4.11.6: [W/L] +
Wenn <jsonstr> ein gültiges JSON Array enthält ist der Rückgabewert ein String mit der Zahl der Elemente des Arrays. +
Im Fehlerfall = '"0"'

`jsonAsObjectCountElements(`<jsonstr>`) : intstr`  //since 4.11.6: [W/L] +
Wenn <jsonstr> ein gültiges JSON Object enthält ist der Rückgabewert ein String mit der Zahl der Elemente des Objects. +
Im Fehlerfall = '"0"'


`jsonAsArrayGetElementByIndex(`<jsonstr>, <indexstr>`) : jsonstring`  //since 4.11.6: [W/L] +
Liefert vom JSON Array <jsonstr> das Element mit dem Index <indexstr> +
Der Index beginnt bei 0. +
Im Fehlerfall = '""'

`jsonAsObjectGetValueByKey(`<jsonstr>, <keystr>`) : valuestring`  //since 4.11.6: [W/L] +
Liefert vom JSON Object <jsonstr> den Wert des Key <keystr> +
Im Fehlerfall = '""'


`jsonAsObjectSetValueByKey(`<jsonstr>, <keystr>,<valuestring>`) : jsonstring`  //since 4.11.6: [W/L] +
Liefert einen String mit dem in <jsonstr> übergebenen JSON Object bei dem für den Key <keystr>
 der Wert <valuestring> gesetzt ist. Ist der Key nicht vorhanden, so wird er erzeugt. +
Wenn <valuestring> als Stringwert erzeugt werden soll (also in doppelten Anführungszeichen),
dann verwenden Sie besser die folgende Funktion: `jsonAsObjectSetStringtypeValueByKey`. +
Im Fehlerfall = '""'

`jsonAsObjectSetStringtypeValueByKey(`<jsonstr>, <keystr>,<valuestring>`) : jsonstring`  //since 4.11.6: [W/L] +
Liefert einen String mit dem in <jsonstr> übergebenen JSON Object bei dem für den Key <keystr>
der Wert <valuestring> als String (also in doppelten Anführungszeichen) gesetzt ist. 
Ist der Key nicht vorhanden, so wird er erzeugt. +
Wenn <valuestring> nicht als Stringwert erzeugt werden soll ,
dann verwenden Sie besser die vorherige Funktion: `jsonAsObjectSetValueByKey`. +
Im Fehlerfall = '""'


`jsonAsArrayPutObjectByIndex(`<jsonstr>, <indexstr>, <objectstr>`) : jsonstring`  //since 4.11.6: [W/L] +
Liefert einen String mit dem in <jsonstr> übergebenen JSON Array bei dem am Index <indexstr>
das Object <objectstr> gesetzt ist. +
Im Fehlerfall = '""'


`jsonAsArrayToStringList(`<jsonstr>`) : stringlist`  //since 4.11.6: [W/L] +
Liefert einen String mit dem in <jsonstr> übergebenen JSON Array als Stringliste mit einem Arrayelement pro Zeile.

`jsonStringListToJsonArray(`<strlist>`) : jsonstr`  //since 4.11.6: [W/L] +
Liefert einen String mit einem JSON Array der die Zeilen der Stringliste <strlist>
als Elemente enthält.

`jsonAsObjectGetKeyList(`<jsonstr>`) : stringlist`  //since 4.11.6: [W/L] +
Liefert eine Stringliste mit den Keys der im JSON Object <jsonstr> vorhandnen Keys.

Example +
Read productOnClient objects from file, change the clientId to the actual machine
and store the data to the opsi-server.
[source,winst]
----
[Actions]
requiredWinstVersion >= "4.11.6"

DefVar $ProductId$  
DefVar $poc_file$
DefVar $objectStr$
DefVar $ArrayStr$

DefStringlist $pocList$

set $poc_file$ = "c:\tmp\product_on_client.json"

Message "Restore productOnClient from file ..."
comment " get Restore data from file ..."
Set $ArrayStr$ = strLoadTextFile($poc_file$)
if not(jsonIsValid($ArrayStr$))
	LogError "got no valid json from file"
	isFatalError
endif
if not(jsonIsArray($ArrayStr$))
	LogError "got no json Array from file"
	isFatalError
endif

comment "get list from array"
set $pocList$ = jsonAsArrayToStringList($ArrayStr$)
comment "loop over list"
for %pocindex% = "0" to calculate(count($pocList$)+"-1") do sub_set_clientid_in_poclist
comment "convert modified list to json array"
set $ArrayStr$ = jsonStringListToJsonArray($pocList$)
set $ArrayStr$ = unquote2($ArrayStr$,"[]")
comment "write back"
opsiServiceCall_updatePOC

[sub_set_clientid_in_poclist]
set $objectStr$ = takeString("%pocindex%", $poclist$)
set $objectStr$ = jsonAsObjectSetStringtypeValueByKey(($objectStr$, "clientId","%opsiserviceUser%")
set $poclist$ = setStringInListAtIndex($objectStr$,$poclist$,"%pocindex%")

[opsiServiceCall_updatePOC]
"method": "productOnClient_updateObjects"
"params": [
					'$ArrayStr$',
					]
----

[[opsi-winst-rc-process]]
=== Process and Script related functions [W/L]

`waitForPackageLock(`<seconds timeout string>,<bool should we kill>`) : bool` //since 4.11.6.1 [L] +
Returns `true` if the Linux package system is not locked by an other process. +
If it is locked, it waits <seconds timeout string> to get the lock. +
If the timeout is reached and <bool should we kill> is `true` 
than the locking process is killed but using this feature ist *not recommended*.

* `processIsRunning(`<process name>`) : boolean`  //since 4.11.6.1 [W/L] +
Returns `true` if <process name> is found in the process list

Es gibt drei Varianten des `shellCall` Befehls:


* `shellCall (`<command string>`) : stringlist (output)`
* `shellCall (`<command string>`) : noresult`
* `shellCall (`<command string>`) : string (exitcode)`

Alle drei führen <command string> in der standard shell (cmd.exe / bash) aus.
Die Funktionen unterscheiden sich aber bezüglich des Rückgabewertes

* `shellCall (`<command string>`) : stringlist (output)` //since 4.11.4.2 [W/L] +
Returns the output of <command string> as stringlist.
[source,winst]
----
set $list$= shellCall('net start')
----
Is a shortcut for this expression:
[source,winst]
----
set $list$ = getOutStreamFromSection ('DosInAnIcon_netstart winst /sysnative')

[DosInAnIcon_netstart]
net start
----

* `shellCall (`<command string>`) : noresult` //since 4.11.6.1 [W/L] +
Returns nothing.
[source,winst]
----
shellCall('net start')
----
Is a shortcut for this expression:
[source,winst]
----
DosInAnIcon_netstart winst /sysnative

[DosInAnIcon_netstart]
net start
----


* `shellCall (`<command string>`) : string (exitcode)` //since 4.11.6.1 [W/L] +
Returns the exitcode of <command string> as string.
[source,winst]
----
set $exitcode$ = shellCall('net start')
----
Is a shortcut for this expression:
[source,winst]
----
DosInAnIcon_netstart winst /sysnative
set $exitcode$ = getLastExitcode

[DosInAnIcon_netstart]
net start
----

* `startProcess(`<string>`) : string (exitcode)` //since 4.11.6.1 [W/L] +
Starts the command binary <string> as process and returns te exitcode +
[source,winst]
----
set $exitcode$ = startProcess('setup.exe /S')
----
Is a shortcut for this expression:
[source,winst]
----
Winbatch_setup
set $exitcode$ = getLastExitcode

[Winbatch_setup]
setup.exe /S
----
In fact it is internal a winbatch call, so all the `winbatch` modifiers are also allowed for `startProcess`

* `/LetThemGo` +
This is the contrary to `/WaitOnClose`. It is used if '{opsi-winst}/opsi-script' shall proceed while the started processes run in their own threads.

* `/TimeOutSeconds` <seconds> +
A timeout setting. After waiting <seconds>, '{opsi-winst}/opsi-script' will end the process. +
Since version 4.11.3, /TimeOutSeconds may be used without a waiting condition (e.g. `/WaitForProcessEnding`) but not in combination with `/WaitSeconds`. +
Since version 4.11.4.6 the time progress from start until timeout is displayed by the progressbar. +

* `/WaitSeconds` [number of seconds] +
If a call includes the parameter /WaitSeconds [number of seconds], then '{opsi-winst}/opsi-script' is waiting for [number of seconds] before proceeding. In the default configuration, we also wait for any programs that are currently running to finish. If we combine the parameter /WaitSeconds with the option `/LetThemGo`, then '{opsi-winst}/opsi-script' continues processing after the waiting time is finished.
 
* `/WaitForProcessEnding` <program name> +
Waits for the process called <program name> to end. +
Should be combined with `/TimeOutSeconds`.

*  `/32Bit` //since 4.11.3.5  [W] +
This is the default. The paths within the section are assumed to be 32 bit pathes. +
Example: `c:\windows\system32\regedit.exe` calls (even when running on a 64 bit system) the 32 bit 'regedit.exe'.

*  `/64Bit` //since 4.11.3.5  [W] +
The paths within the section are assumed to be 64 bit paths. +
Example: `c:\windows\system32\regedit.exe` executes (running on a 64 bit system) the 64 bit 'regedit.exe'.

*  `/SysNative` //since 4.11.3.5  [W] +
The paths within the section are assigned according to the OS architecture interpretiert. +
Example: `c:\windows\system32\regedit.exe` running on a 64bit system calls the 64 bit 'regedit.exe' and running on a 32 bit system the 32 bit 'regedit.exe'.




[[opsi-winst-rc-cryptfunc]]
=== Crypt / Hash related functions [W/L]

`encryptStringBlow(`<keystring>,<datastring>`) : string`  //since 4.11.6 [W/L] +
Verschlüsselt <datastring> mit dem Key <keystring> unter Verwendung von Blowfish und liefert den verschlüsselten Wert zurück.

`decryptStringBlow(`<keystring>,<datastring>`) : string`  //since 4.11.6 [W/L] +
Entschlüsselt <datastring> mit dem Key <keystring> unter Verwendung von Blowfish und liefert den entschlüsselten Wert zurück.

`md5sumFromFile(`<path to file>`) : string`  //since 4.11.6 [W/L] +
Liefert die md5summe der unter <path to file> gefundenen Datei zurück. +
Im Fehlerfall ist der Rückgabewert ein Leerstring.

[[opsi-winst-rc-timefunc]]
=== time / date related functions

`timeStampAsFloatStr : string` (Floating Number - format: 'days.decimal days') //since 4.11.6 [W/L] +
Liefert einen aktuellen Timestamp als Fließkommazahlstring. Dabei ist Zahl vor dem Komma die Tage
seit dem 30. Dezember 1899. Nach dem Komma kommt die Zeit in Bruchteilen des Tages. +
Just for Fun: Warum nicht der 31. Dezember 1899: ? +
siehe http://www.delphibasics.co.uk/RTL.asp?Name=TDateTime


[[opsi-winst-rc-misc]]
=== Misc news

* `getMSVersionMap` +
* Has now a new key entry: `ReleaseID` which gives you the sub release of 'Windows 10' like e.g. '1511'.
The Value comes from the Registry: "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion" "ReleaseID"
* Has now a new key entry: `prodInfoText` which gives you a string to the edition type like e.g. 'PRODUCT_PROFESSIONAL'.
* Has now a new key entry: `prodInfoNumber` which gives you a string with a decimal number of the edition type like e.g. '48'.

[cols="3,3,15"]
|==========================
| DecNum | HexNum | Text 
|  00 | 00 | An unknown product
|  01 | 01 | Ultimate Edition"
|  02 | 02 | Home Basic Edition
|  03 | 03 | Home Premium Edition
|  04 | 04 | Enterprise Edition
|  05 | 05 | Home Basic Edition
|  06 | 06 | Business Edition
|  07 | 07 | Server Standard Edition (full installation)
|  08 | 08 | Server Datacenter Edition (full installation)
|  09 | 09 | Small Business Server
|  10 | 0A | Server Enterprise Edition (full installation)
|  11 | 0B | Starter Edition
|  12 | 0C | Server Datacenter Edition (core installation)
|  13 | 0D | Server Standard Edition (core installation)
|  14 | 0E | Server Enterprise Edition (core installation)
|  15 | 0F | Server Enterprise Edition for Itanium-based Systems
|  16 | 10 | Business Edition
|  17 | 11 | Web Server Edition (full installation)
|  18 | 12 | Cluster Server Edition
|  19 | 13 | Home Server Edition
|  20 | 14 | Storage Server Express Edition
|  21 | 15 | Storage Server Standard Edition
|  22 | 16 | Storage Server Workgroup Edition
|  23 | 17 | Storage Server Enterprise Edition
|  24 | 18 | Server for Small Business Edition
|  25 | 19 | Small Business Server Premium Edition
|  26 | 1A | PRODUCT_HOME_PREMIUM_N
|  27 | 1B | PRODUCT_ENTERPRISE_N
|  28 | 1C | PRODUCT_ULTIMATE_N
|  29 | 1D | PRODUCT_WEB_SERVER_CORE
|  30 | 1E | Windows Essential Business Server Management Server
|  31 | 1F | Windows Essential Business Server Security Server
|  32 | 20 | Windows Essential Business Server Messaging Server
|  33 | 21 | Server Foundation
|  34 | 22 | PRODUCT_HOME_PREMIUM_SERVER
|  35 | 23 | PRODUCT_SERVER_FOR_SMALLBUSINESS_V
|  36 | 24 | Server Standard Edition without Hyper-V (full installation)
|  37 | 25 | Server Datacenter Edition without Hyper-V (full installation)
|  38 | 26 | Server Enterprise Edition without Hyper-V (full installation)
|  39 | 27 | Server Datacenter Edition without Hyper-V (core installation)
|  40 | 28 | Server Standard Edition without Hyper-V (core installation)
|  41 | 29 | Server Enterprise Edition without Hyper-V (core installation)
|  48 | 30 | PRODUCT_PROFESSIONAL
|  49 | 31 | PRODUCT_PROFESSIONAL_N
|  50 | 32 | PRODUCT_SB_SOLUTION_SERVER
|  51 | 33 | PRODUCT_SERVER_FOR_SB_SOLUTIONS
|  52 | 34 | PRODUCT_STANDARD_SERVER_SOLUTIONS
|  53 | 35 | PRODUCT_STANDARD_SERVER_SOLUTIONS_CORE
|  54 | 36 | PRODUCT_SB_SOLUTION_SERVER_EM
|  55 | 37 | PRODUCT_SERVER_FOR_SB_SOLUTIONS_EM
|  56 | 38 | PRODUCT_SOLUTION_EMBEDDEDSERVER
|  57 | 39 | PRODUCT_SOLUTION_EMBEDDEDSERVER_CORE
|  59 | 3B | PRODUCT_ESSENTIALBUSINESS_SERVER_MGMT
|  60 | 3C | PRODUCT_ESSENTIALBUSINESS_SERVER_ADDL
|  61 | 3D | PRODUCT_ESSENTIALBUSINESS_SERVER_MGMTSVC
|  62 | 3E | PRODUCT_ESSENTIALBUSINESS_SERVER_ADDLSVC
|  63 | 3F | PRODUCT_SMALLBUSINESS_SERVER_PREMIUM_CORE
|  64 | 40 | PRODUCT_CLUSTER_SERVER_V
|  65 | 41 | PRODUCT_EMBEDDED
|  66 | 42 | PRODUCT_STARTER_E
|  67 | 43 | PRODUCT_HOME_BASIC_E
|  68 | 44 | PRODUCT_HOME_PREMIUM_E
|  69 | 45 | PRODUCT_PROFESSIONAL_E
|  70 | 46 | PRODUCT_ENTERPRISE_E
|  71 | 47 | PRODUCT_ULTIMATE_E
|  72 | 48 | PRODUCT_ENTERPRISE_EVALUATION
|  84 | 54 | PRODUCT_ENTERPRISE_N_EVALUATION
|  98 | 62 | PRODUCT_CORE_N
|  99 | 63 | PRODUCT_CORE_COUNTRYSPECIFIC
| 100 | 64 | PRODUCT_CORE_SINGLELANGUAGE
| 101 | 65 | PRODUCT_CORE
| 121 | 79 | PRODUCT_EDUCATION
| 122 | 7A | PRODUCT_EDUCATION_N
| 125 | 7D | Windows Enterprise 2015 LTSB
| 126 | 7E | Windows Enterprise 2015 LTSB N
| 129 | 81 | Windows Enterprise 2015 LTSB Evaluation
| 130 | 82 | Windows Enterprise 2015 LTSB N Evaluation   
|==========================

* `getLinuxVersionMap` +
Has now a new key entry: `SubRelease` which gives you the sub release (patchlevel) of 'SLES 11' like e.g. '4'.

* `ShellBatch /showoutput` +
Shows the output of the called command in a seperate window. +
Now also available at Linux. +
Now moves the main Window to top/right and the ouptup window to left/down.

* `strLoadTextfile`  and `strLoadTextFileWithEncoding` +
Reads the firs line of the given file. Now without newline chars.

* repaired product ordering for `product_sort_algorithm 1` 


[[opsi-407-releasenotes-product-sorting]]
==  Installationsreihenfolge / Sortieralgorithmus1

* The sort algorithm 1 should generate a product sequence from product dependencies and product priorities, based on the premise that dependencies 
override priorities. By a combination of several mistakes, it was in 4.0.6 completely replaced by sort algorithm 2 which prefers priorities over dependencies. Now, everything is 
working (again) as the manual tells: +
"*Algorithm1: product dependency above priority (default)* +
Using this algorithm, the product installation sequence at first will be calculated by the product priorities. In a second
step it will be resorted to met the product dependencies. This algorithm may push products with low priority before
products with higher priority to met the needs of product dependencies. But therefore you will not see installation
problems as result of not resolved product dependencies.
The installation sequence of products with action requests is exactly the sequence you see in the configed if sort the
products by the products by the column position and its order even if the scripts have partly been executed. Especially,
if the execution of a script is stopped by an "ExitWindows /ImmediateReboot" command, then it is guaranteed that
the suspended product installation is directly continued after reboot."

* The resulting installation sequence is just what you see if you look at the configed 'product configuration' and sort there the products by the column 'position'. 


CAUTION: This fix may changed your installation sequence comparing to the wrong sequence in 4.0.6. Because this bug was present for a longer time, this change may be unexpected.


[[opsi-407-releasenotes-netboot-windows]]
== opsi Support Matrix Windows Clients

Im folgenden finden Sie eine Übersicht auf welchen Windows Plattformen opsi
als Client läuft.

include::../common/opsi_manual_supportmatrix-winclient.asciidoc[]



[[opsi-407-releasenotes-misc]]
== Sonstiges

[[opsi-407-releasenotes-misc-changelogs]]
=== Changelogs:


[[opsi-407-releasenotes-misc-changelogs-opsi-configed]]
==== Changelog opsi-configed


opsi-configed (4.0.7.1.3-1) STABLE; urgency=medium

  * fix: a unified interpretation of the expected waiting time for a progressbar 

 -- roeder <roeder@uib.local>  Fri, 24 Jun 2016 14:52:52 +0200

opsi-configed (4.0.7.1.2-1) STABLE; urgency=medium

  * more details in connection window

 -- Rupert Roeder <roeder@uib.local>  Thu, 23 Jun 2016 15:08:20 +0200

opsi-configed (4.0.7.1.1-1) STABLE; urgency=medium
  
  * bugfix reload of licence statistics

 -- Rupert Roeder <roeder@uib.local>  Thu, 23 Jun 2016 11:48:03 +0200

opsi-configed (4.0.6.7.6-1.12) TESTTING; urgency=medium

  * some more start rearrangements of threads
  * fixed "remove all licences from selected clients"

 -- roeder <roeder@uib.local>  Fri, 20 May 2016 15:58:42 +0200

opsi-configed (4.0.6.7.5-1.11) STABLE; urgency=medium

  * some rearrangements of start threads

 -- Rupert Roeder <roeder@uib.local>  Thu, 28 Apr 2016 15:42:30 +0200

opsi-configed (4.0.6.7.5-1.6) STABLE; urgency=medium

  * more logging

 -- Rupert Roeder <roeder@uib.local>  Thu, 28 Apr 2016 12:16:43 +0200

opsi-configed (4.0.6.7.5-1.5) STABLE; urgency=medium

  * new compile script

 -- Rupert Roeder <roeder@uib.local>  Fri, 22 Apr 2016 12:28:00 +0200

opsi-configed (4.0.6.7.5-1.1) STABLE; urgency=medium

  * eliminating waiting window on start

 -- roeder <roeder@uib.local>  Thu, 21 Apr 2016 15:03:44 +0200

opsi-configed (4.0.6.7.5-1) STABLE; urgency=medium

  * fixed display of problems with restricted countage of modules usage

 -- roeder <roeder@uib.de>  Fri, 08 Apr 2016 13:16:18 +0200

opsi-configed (4.0.7.2.1-1) EXPERIMENTAL; urgency=medium

  * activated multiselection for depotproperties page 

 -- roeder <roeder@edge530-2>  Wed, 29 Jun 2016 14:20:18 +0200

opsi-configed (4.0.7.1.3-1) STABLE; urgency=medium

  * fix: a unified interpretation of the expected waiting time for a progressbar 

 -- roeder <roeder@uib.local>  Fri, 24 Jun 2016 14:52:52 +0200

opsi-configed (4.0.7.1.2-1) STABLE; urgency=medium

  * more details in connection window

 -- Rupert Roeder <roeder@uib.local>  Thu, 23 Jun 2016 15:08:20 +0200

opsi-configed (4.0.7.1.1-1) STABLE; urgency=medium
  
  * bugfix reload of licence statistics

 -- Rupert Roeder <roeder@uib.local>  Thu, 23 Jun 2016 11:48:03 +0200

opsi-configed (4.0.6.7.6-1.12) TESTTING; urgency=medium

  * some more start rearrangements of threads
  * fixed "remove all licences from selected clients"

 -- roeder <roeder@uib.local>  Fri, 20 May 2016 15:58:42 +0200

opsi-configed (4.0.6.7.5-1.11) STABLE; urgency=medium

  * some rearrangements of start threads

 -- Rupert Roeder <roeder@uib.local>  Thu, 28 Apr 2016 15:42:30 +0200

opsi-configed (4.0.6.7.5-1.6) STABLE; urgency=medium

  * more logging

 -- Rupert Roeder <roeder@uib.local>  Thu, 28 Apr 2016 12:16:43 +0200

opsi-configed (4.0.6.7.5-1.5) STABLE; urgency=medium

  * new compile script

 -- Rupert Roeder <roeder@uib.local>  Fri, 22 Apr 2016 12:28:00 +0200

opsi-configed (4.0.6.7.5-1.1) STABLE; urgency=medium

  * eliminating waiting window on start

 -- roeder <roeder@uib.local>  Thu, 21 Apr 2016 15:03:44 +0200

opsi-configed (4.0.6.7.5-1) STABLE; urgency=medium

  * fixed display of problems with restricted countage of modules usage

 -- roeder <roeder@uib.de>  Fri, 08 Apr 2016 13:16:18 +0200

opsi-configed (4.0.6.7.4-1) EXPERIMENTAL; urgency=medium

  * multiselection switched on in swaudit page
  * labelling of pdf open or save dialog

 -- roeder <roeder@uib.de>  Thu, 17 Mar 2016 13:46:02 +0100

opsi-configed (4.0.6.7.3-1) EXPERIMENTAL; urgency=medium

  * fixed lost view of filtered clients

 -- roeder <roeder@uib.de>  Wed, 16 Mar 2016 16:23:32 +0100

opsi-configed (4.0.6.7.2-1) EXPERIMENTAL; urgency=medium

  * treeview groups can now be moved, the clients can be removed (without deleting the group) 

 -- roeder <roeder@uib.de>  Tue, 15 Mar 2016 15:12:07 +0100

opsi-configed (4.0.6.7.1-1) EXPERIMENTAL; urgency=medium

  * password property hiding

 -- roeder <roeder@uib.de>  Wed, 09 Mar 2016 12:56:07 +0100

opsi-configed (4.0.6.7.0-1) EXPERIMENTAL; urgency=medium

  * fixed re-selection of clients after reload

 -- roeder <roeder@uib.de>  Mon, 07 Mar 2016 12:30:43 +0100

opsi-configed (4.0.6.6.2-1) TESTING; urgency=medium

  * fixed two problems in licence management

 -- roeder <roeder@uib.de>  Thu, 03 Mar 2016 16:23:06 +0100

opsi-configed (4.0.6.6.1-1) TESTING; urgency=medium

  * (delayed) wake on lan on several depots
  * multi-word search implemented for client page
  * Windows menu introduced
  * option to arrange all running dialogs in the foreground
  * context menu option for saving log files
  * several bug fixes  

 -- roeder <roeder@uib.de>  Mon, 22 Feb 2016 14:38:12 +0200

opsi-configed (4.0.6.3.8-1) UNRELEASED; urgency=medium

  * fixed bug that the clients base data for the search function did not change on depot change


[[opsi-407-releasenotes-misc-changelogs-opsi-client-agent]]
==== Changelog opsi-client-agent

###############

[[opsi-407-releasenotes-misc-changelogs-config-win10]]
###############

[[opsi-407-releasenotes-misc-changelogs-opsi-script]]
==== Changelog opsi-script / opsi-winst
###############


[[opsi-407-releasenotes-misc-changelogs-windows-netboot]]
==== Changelog windows netboot products
###############

[[opsi-407-releasenotes-misc-changelogs-linux-netboot]]
==== Changelog linux netboot products

###############

.centos70

###############


.debian7

###############


.debian8

###############


.opensuse13-2
###############

.sles12
###############

.redhat70
###############

.Ubuntu14-04
###############


[[opsi-407-releasenotes-misc-changelogs-opsi-local-image]]
==== Changelog opsi-local-image

###############


[[opsi-407-releasenotes-misc-changelogs-misc-netboot]]
==== Changelog misc netboot products

###############

[[opsi-407-releasenotes-misc-changelogs-python-opsi]]
==== Changelog python-opsi

###############

[[opsi-407-releasenotes-misc-changelogs-opsiconfd]]
==== Changelog opsiconfd

###############
####################

[[opsi-407-releasenotes-misc-changelogs-opsi-utils]]
==== Changelog opsi-utils

###############

####################

[[opsi-407-releasenotes-misc-changelogs-opsi-linux-bootimage]]
==== Changelog opsi-linux-bootimage

###############

[[opsi-407-releasenotes-misc-changelogs-opsi-depotserver]]
==== Changelog opsi-depotserver

###############

####################

[[opsi-407-releasenotes-misc-changelogs-opsi-atftp]]
==== Changelog opsi-atftp


####################

[[opsi-407-releasenotes-misc-changelogs-opsipxeconfd]]
==== Changelog opsi-atftp


####################

[[opsi-407-releasenotes-misc-changelogs-opsi4ucs]]
==== Changelog opsi4ucs


####################

[[opsi-407-releasenotes-misc-changelogs-opsi-swaudit]]
==== Changelog opsi-swaudit
####################

 [[opsi-407-releasenotes-misc-changelogs-opsi-template]]
==== Changelog opsi-template
####################

