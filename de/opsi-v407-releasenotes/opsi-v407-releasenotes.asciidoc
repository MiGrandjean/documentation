////
; Copyright (c) uib gmbh (www.uib.de)
; This documentation is owned by uib
; and published under the german creative commons by-sa license
; see:
; http://creativecommons.org/licenses/by-sa/3.0/de/
; http://creativecommons.org/licenses/by-sa/3.0/de/legalcode
; english:
; http://creativecommons.org/licenses/by-sa/3.0/
; http://creativecommons.org/licenses/by-sa/3.0/legalcode
;
; credits: http://www.opsi.org/credits/
////

////
;***************************************************************************
; Subversion:
; $Revision:  $ $Author: oertel $
; $Date: $
;***************************************************************************
////
:Author:    uib gmbh
:Email:     info@uib.de
:Revision:  4.0.7
:doctype:   book

// Include common opsi terms
include::../common/opsi_terms.asciidoc[]

[[opsi-407-releasenotes]]
= opsi Version 4.0.7 Release Notes

// Include common opsi copyright
include::../common/opsi_manual_copyright.asciidoc[]


////
Notizen:
#######################
Highlights:
* opsi auf xenial
* opsiclientd für xenial
* 15 Freistarts bei opsi-linux-client-agent
* Sortierreihenfolge
* Neuer KioskClient
* neuer opsi-winst
* opsi-clonezilla jetzt mit uefi support
* opsi-clonezilla ocs-live command geht wieder
-------------------------
Essential:

* opsi auf:
xenial
sles12sp1

* server pakete:
bootimage
opsiconfd
opsi-configed

* netboot:
opsi-clonezilla
** netboot pre published
nt6-netboot
linux-netboot
oli-netboot

localboot:
winst4.11.6
jedit
opsi-winst-test
opsi-client-agent
* Sortierreihenfolge
* Neuer KioskClient
opsi-wim-capture
opsi-configed

opsi-linux:
ubuntu16.04
opsi-linux-client-agent
l-opsi-server

##################################
Nice to have:

opsi auf:
sles11sp4
opensusel42.1

netboot:

opsi-linux:
ucs40
ucs41

////



[[opsi-407-releasenotes-overview]]
== Übersicht der Neuerungen

Schwerpunkte dieser Freigabe sind:

* Unterstützung Ubuntu 16.04 Xenial
* Neues opsi Bootimage
* Neue opsi-linux Netboot Produkte und Client-agent
* Sortierung der Installationsreihenfolge nach Algorithmus 1 ist repariert
* Neuer opsi-client-agent

Das opsi Service Release 4.0.7 weist eine Fülle von Neuerungen und Detailverbesserungen auf.
Hier eine Übersicht:

* Neues opsi Bootimage
** Basiert auf Ubuntu 16.04 Xenial
** Kernel 4.4.11

* opsi-server Pakete jetzt auch für:
** Ubuntu 16.04
** sles11sp4
** sles12sp1
** Siehe auch gesondertes Kapitel: <<opsi-407-releasenotes-supportmatrix>>.

* opsi-configed:
** integrierter Scheduler für WakeOnLan
** WakeOnLan auch für Clients an Depotservern
** Passwörter in Properties werden nicht mehr angezeigt
** Auswahlliste für opsi-Server beim Login
** neuer Hauptmenü-Eintrag "Fenster"
** erweiterte Suchfunktion
** erweiterte Funktionen für Gruppen im Treeview
** diverse Bugfixes


* opsi-client-agent:
** Neuer opsiclientd
** Neuer Client für den Kioskmode
** Upgrade de SSL libraries zu 1.0.2h
** Siehe auch gesondertes Kapitel: <<opsi-407-releasenotes-clientagent>>


* opsi-winst / opsi-script (4.11.6.1)
** Zahlreiche neue Funktionen
** Upgrade de SSL libraries zu 1.0.2h
** Siehe auch gesondertes Kapitel: <<opsi-407-releasenotes-opsi-script>>


* Installationsreihenfolge repariert
** Der Sortieralgorithmus 1, der eine Reihenfolge für die Produkte auf der Basis der gesetzten
Produktprioritäten und Produktabhängigkeit, mit Vorrang für die Produktabhängigkeiten als Spezifikum, konstruiert,
arbeitet jetzt wieder entsprechend dem Handbuch.
Die Produktreihenfolge, die je nach Einstellung im Server-Config mit Algorithmus 1 oder 2 berechnet ist,
wird jetzt bei der Produktinstallation durch den opsi-winst (konstant) eingehalten. +
Siehe auch gesondertes Kapitel <<opsi-407-releasenotes-product-sorting>>


* opsi-clonezilla:
** aktualisierte Version
** runcommand 'ocs-live' funktioniert wieder
** UEFI Support

* opsi-linux-support:
** Aktualisierter opsi-linux-client-agent (mit 15 Freistarts)
** debian8 Produkt mit Installation auch aus lokalem http Repository
** ubunt16-04 Produkt mit Installation auch aus lokalem http Repository
** Bereitstellung von lokalen http Repositories für die Linuxinstallation
** Serverpaket `opsi-linux-support` stellt jetzt auch die Basis für statische http-Repositories für Debianartige Netbootprodukte (debian8/ubuntu16-04) bereit
** Produkt l-opsi-server für die automatisierte Installation von opsi-server Paketen auf einer Linux Maschine (z.B. zur Erstellung eines neuen Depotservers)
Siehe auch gesondertes <<opsi-407-releasenotes-linux>>

* opsi-logviewer:
** Das von uib erstellte Tool opsi-logviewer öffnet jetzt auch komprimierte Dateien. 
** Das Produkt  opsi-logviewer ist jetzt auch Linux-geeignet.
** Die neue before-Abhängigkeit zu javavm sichert die Funktion des Startaufrufs. 

* Sonstiges
** Es gibt eine neue Konfigurationsdatei für die Hardware-Inventur.
Mit dieser ist es möglich, Daten über die Anzahl der physikalischen und
logischen Kerne eines Systems zu erheben und zu speichern.
** Bei der Verwendung der Option 'resolveHostAddress' bei den Backends HostControl und HostControlSafe +
wird bei einem fehlgeschlagenen Versuch der Namensauflösung eine eventuell hinterlegte IP-Adresse verwendet.
** Zahlreiche Verbesserungen und Features in der Python-Library von opsi

[[opsi-407-releasenotes-important]]
== Wichtige Hinweise - Unbedingt Beachten

=== In der Kombination von Ubuntu 16.04 und mysql ist unbedingt folgendes zu Beachten:

CAUTION: Ubuntu Xenial (16.04) verwendet MySQL in der Version 5.7. Diese Version verwendet den vorher optionalen 'strict mode' nun standardmäßig. Dies führt zu einem Fehlschlag des Befehls _opsi-setup_ _--configure-mysql_. Dementsprechend sollte vor dem Befehlsaufruf folgende Datei editiert werden:
[source,prompt]
----
/etc/mysql/mysql.conf.d/mysqld.cnf
----
In der [mysqld] Sektion muss nun folgende Zeile eingefügt werden:
[source,prompt]
----
sql_mode=NO_ENGINE_SUBSTITUTION
----
Es ist nun möglich unter Ubuntu Xenial fort zu fahren.

=== Aktuelle Netbootprodukte mit 4.0.7 verwenden::

CAUTION: Die Netbootprodukte aus 4.0.6 sind leider nicht kompatibel zu dem bootimage von 4.0.7. Verwenden Sie mindestens die im pre Release vom 24.6.2016 veröffentlichten (https://forum.opsi.org/viewtopic.php?f=1&t=8480) oder die mit diesem Release erschienen Versionen.

Im Fehlerfall updaten Sie bitte Ihre Netbootprodukte ! +
Nur für den Notfall finden sie alte bootimages unter http://download.uib.de/opsi4.0/archiv/opsi-linux-bootimage/

=== Sortieralgorithmus1 repariert:

CAUTION: Durch die Reperatur dieses länger vorhandenen Bugs ändern sich evtl. sich die Installationsreihenfolgen im Vergleich zu der fehlerhaft berechneten Reihenfolge in 4.0.6



[[opsi-407-releasenotes-installation]]
== Hinweise zur Installation

Wir empfehlen vor der Installation des Updates eine Sicherung Ihres Backends +
mittels {opsi-backup} durchzuführen:
[source,prompt]
----
opsi-backup create
----

Die Produkte welche im Rahmen dieses Releases veröffentlicht werden, +
sind in etlichen Teilen voneinander abhängig. +
Sie sollten daher nicht versuchen, nur Teile zu installieren.

Wir empfehlen zuerst den Server und danach die opsi-Produkte zu aktualisieren.

Da bei diesem Update eine neue Konfigurationsdatei für Hardware-Inventur
eingespielt wird, empfehlen wir die Ausführung von
``opsi-setup --init-current-config`` zur Übernahme dieser Felder.

Wir empfehlen nach dem Update die Ausführung von ``opsi-setup --set-rights``, +
um sicher zu stellen, dass die Zugriffsberechtigungen korrekt gesetzt sind. +
Die Ausführung des Befehls kann mehrere Minuten in Anspruch nehmen.


[[opsi-407-releasenotes-installation-opsipackages]]
=== Hinweise zum Aktualisieren von opsi-Paketen

////
Bitte nachstehenden Block bei release nicht löschen sondern auskommentieren
////


Zur Installation der testing Serverpakete müssen Sie das opsi Repository ändern von `opsi40` auf `opsi40-testing`. +
Zum Beispiel bei Ubuntu 14.04: +
`deb http://download.opensuse.org/repositories/home:/uibmz:/opsi:/opsi40/xUbuntu_14.04 ./` +
ersetzen durch: +
`deb http://download.opensuse.org/repositories/home:/uibmz:/opsi:/opsi40-testing/xUbuntu_14.04 ./`


Danach müssen Sie Ihre Pakete updaten. +


Zum Beispiel bei Ubuntu / Debian:
[source,prompt]
----
aptitude update
aptitude full-upgrade
----

Zur Installation der opsi Produkte:

fügen Sie in die Datei +
`/etc/opsi/opsi-product-updater.conf` +
folgende Sektion ein:


[source,prompt]
----
[repository_opsi_406_testing]
baseUrl = http://download.uib.de
dirs = opsi4.0/testing/opsi-v406/products/localboot, opsi4.0/testing/opsi-v406/products/netboot
active = true
username =
password =
autoInstall = false
autoUpdate = true
autoSetup = false
onlyDownload = false
----

Hängen Sie je nach Bedarf an die `dirs` Zeile noch an:

* `, opsi4.0/testing/opsi-v406/opsi-linux`

* `, opsi4.0/testing/opsi-v406/opsi-local-image`

////
[repository_opsi_406_experimental]
baseUrl = http://download.uib.de
dirs = opsi4.0/experimental/opsi-v406/products/localboot, opsi4.0/experimental/opsi-v406/products/netboot, opsi4.0/experimental/opsi-v406/products/opsi-linux
active = true
username =
password =
autoInstall = false
autoUpdate = true
autoSetup = false
onlyDownload = false
----
////

Setzen Sie in der Sektion `[repository_uib]` folgende Zeile:
[source,prompt]
----
active = false
----
Danach rufen sie den opsi-product-updater auf.


Um alle Pakete zu installieren:
[source,prompt]
----
opsi-product-updater -i -vv
----

Um nur Updates zu installieren:
[source,prompt]
----
opsi-product-updater -vv
----

////
Bitte vorstehenden Block bei release nicht löschen sondern auskommentieren
////

////
Die Installation erfordert keine besonderen Arbeiten. Sie erfolgt im Rahmen der normalen Updates ihres Servers und der opsi-Produkte.

Sie sollten dabei zuerst den Server updaten. Benutzen Sie dazu die Befehle entsprechend Ihrer Linux-Distribution. +

Wir empfehlen in der Datei `/etc/opsi/opsi-product-updater.conf`
in der Sektion `[repository_uib]` den Eintrag `excludes` wie folgt zu modifizieren, damit Sie auch Produkte bekommen welche mit `win*` anfangen::
[source,prompt]
----
excludes =
----

Wenn Sie die  opsi-linux Produkte benötigen so hängen Sie an den `dirs` Eintrag: +
den Pfad `opsi4.0/products/opsi-linux` an.

Wenn Sie die  opsi-local-image Produkte benötigen so hängen Sie an den  `dirs` Eintrag den Pfad `opsi4.0/products/opsi-local-image` an.

Danach die opsi-Produkte. Dies erledigt der opsi-product-updater:

[source,prompt]
----
opsi-product-updater -i -vv
----

Um nur Updates zu installieren:
[source,prompt]
----
opsi-product-updater -vv
----

Sollten Sie eine Multidepot Umgebung haben, so machen Sie zunächst das Upgrade auf Ihrem config-server, bevor Sie die Depots upgraden.

Falls Sie Produkt-IDs mit einer Länge von mehr als 32 Zeichen verwenden wollen und das MySQL-Backend einsetzen, so führen Sie bitte ein Update der Tabellen-Definition auf Ihrem Config-Server mittels opsi-setup durch:


[source,prompt]
----
opsi-setup --update-mysql
----
////

[[opsi-407-releasenotes-packages]]
== Paketliste

.Server-Pakete:
* opsi-depotserver
* opsi-linux-support
* opsi-utils
* opsiconfd
* python-opsi
* opsi-linux-bootimage
* opsi-configed

.opsi-Pakete (Localboot):
* opsi-client-agent
* opsi-configed
* config-win10
* opsi-winst 4.11.6.1
* opsi-winst-test_4.11.6.1-1
* jedit_5.3.0-1

.opsi-Pakete (netboot):
* win*
* opsi-clonezilla

.opsi-Pakete (opsi-linux):
* Ubuntu16-04_4.0.7.1-1
* Ubuntu14-04_4.0.7.1-1
* debian8_4.0.7.1-1
* debian7_4.0.7.1-1
* centos70_4.0.7.1-1
* redhat70_4.0.7.1-1
* sles11sp4_4.0.7.1-1
* sles12sp1_4.0.7.1-1
* sles12_4.0.7.1-1
* opensuse41-1_4.0.7.1-1
* opensuse13-2_4.0.7.1-1
* ubuntu_4.0.7.1-1
* debian_4.0.7.1-1

* l-system-update_4.0.7.1-1
* l-opsi-server_4.0.7.1-1
* l-jedit 5.3-3


.opsi-Pakete (opsi-local-image):
* opsi-local-image-win*
* opsi-local-image-capture
* opsi-local-image-capture-prepare


[[opsi-407-releasenotes-missing]]
== Was fehlt noch (und ist in Arbeit)

* opsi-client-agent:
** Die Möglichkeit im Rahmen 'User Profile Management' den opsi-winst komplett im Kontext des eingeloggten Users laufen zu lassen.
** Die Möglichkeit bei der Event-Ausführung dieses auf bestimmte Produkte +
einzuschränken oder aber Produkte auszuschließen. Dazu können Produktgruppen +
angegeben werden.

* opsi-linux-client-agent:
** Noch kein echter opsiclientd für folgende Distributionen: +
RedHat 7 +
CentOS 7

* opsi-linux 4.0.7 Netboot Produkte: UEFI support


[[opsi-407-releasenotes-knownbugs]]
== Known Bugs / Known Problems


.KNOWN BUGS:

* opsi-winst 4.11.6.1: +
Im interaktiven Modus geht der Logviewer zur Zeit nicht.

.KNOWN PROBLEMS:

* ######

[[opsi-407-releasenotes-eol]]
== Abkündigung

[[opsi-407-releasenotes-eol_server]]
=== Abkündigung: Distributionen für opsi-server

In diesem Kapitel werden die Abkündigungen aufgelistet.
Diese Distributionsversionen werden aus verschiedenen Gründen nicht weiter +
von opsi unterstützt.

* sles11sp3

Siehe auch gesondertes Kapitel: <<opsi-407-releasenotes-supportmatrix>>.

[[opsi-407-releasenotes-eol_winclient]]
=== Abkündigung Clients: Windows Versionen

Ab opsi v4.0.7 werden wir die Netbootpakete für

* Windows 8


nicht weiter pflegen. Ebenso planen wir für diese Windowsversionen die +
Unterstützung in den Update Abo’s einzustellen. +
Falls Sie hierzu Fragen oder Probleme haben, melden Sie sich bitte bei uns.

Siehe auch gesondertes Kapitel: <<opsi-407-releasenotes-netboot-windows>>.

[[opsi-407-releasenotes-eol_linclient]]
=== Abkündigung Clients: Linux Versionen

Ab opsi v4.0.7 werden wir die Netbootpakete für

* centos65
* redhat65
* opensuse13-1
* sles11sp3
* ubuntu14-10
* ubuntu15-04
* ubuntu15-10

nicht weiter pflegen. +
Falls Sie hierzu Fragen oder Probleme haben, melden Sie sich bitte bei uns.


[[opsi-407-releasenotes-supportmatrix]]
== opsi Support Matrix

Im folgenden finden Sie eine Übersicht auf welchen Plattformen opsi
als Server läuft.

include::../common/opsi_manual_supportmatrix.asciidoc[]

Sollten Sie den opsi-server auf einer Betriebssystemversion einsetzen, +
welche im vorigen Abschnitt nicht als Unterstützt aufgeführt ist,
so empfehlen wir Ihnen ein Betriebssystem-Update bevor Sie opsi v4.0.7 einspielen.

[[opsi-407-releasenotes-opsi-configed]]
== Verbesserungen am  '{opsi-configed}'

=== WakeOnLan-Scheduler

Bei der WakeOnLan-Funktion kann ab '{opsi-configed}' Version 4.0.7 gewählt, werden

* ob das Netzwerksignal direkt an alle ausgewählten Clients geschickt wird
* ob es mit einem Abstand je zwischen zwei Clients versandt werden soll
* wann der Prozess starten soll (Scheduler).

Wenn der Client einem mit dem configserver nicht identischen Depotserver  zugeordnet ist, wird das WakeOnLan-Signal nicht direkt an den Client geschickt, sondern es wird
eine Verbindung zum 'opsiconfd' auf dem Depotserver aufgebaut und dieser veranlasst, in seinem Netz das Netzwerkpaket zu schicken.

Wenn der Client einem mit dem configserver nicht identischen Depotserver  zugeordnet ist, wird das WakeOnLan-Signal nicht direkt an den Client geschickt, sondern es wird
eine Verbindung zum 'opsiconfd' auf dem Depotserver aufgebaut und dieser veranlasst, in seinem Netz das Netzwerkpaket zu schicken.


.'{opsi-configed}': Scheduler für Wake On Lan
image::opsi-configed-wake-on-lan-scheduler.png["{opsi-configed}: Scheduler für Wake On Lan", width="120mm"]


Zu beachten ist, dass es der '{opsi-configed}' ist, der die Aktionen auslöst, d.h. das Programm darf in diesem Zeitraum nicht beendet werden.

[[opsi-407-releasenotes-opsi-configed-passwordprop]]
=== Passwörter in Properties

Property-Werte, die als Passwörter dienen, sollten nicht direkt angezeigt werden.

Solange bis dieses Feature in einer künftigen opsi-Version als spezifischer Datentyp konstruiert ist,
wird der folgende Hack implementiert:

In den Fällen, dass der Property-Schlüsseltext

* entweder den String 'password' enthält
* oder mit dem String 'secret' beginnt,

wird der Property-Wert erst sichtbar, wenn der User auf das Werte-Feld klickt und im aufpoppenden Dialog
der Anzeige des Wertes zustimmt.

Z.B. zeigt der '{opsi-configed}' für das Property  'root_password'  bei den Linux-Netbootprodukten standardmäßig,
solange der User die Anzeige nicht anfordert, nur eine Sternchenfolge.

=== Auswahlliste opsi-Server beim Login

Der  '{opsi-configed}' speichert im lokalen Benutzerprofil einige Information über die jeweilige Session, damit beim erneuten Login
die Arbeitsumgebung wiederhergestellt werden kann. Seit Version 4.0.7 werden die Session-Informationen auch genutzt, um eine Auswahlliste
der zuletzt verbundenen opsi-Server (z.B. produktiver und Test-Server) zu erzeugen.  An oberster Stelle steht der zuletzt genutzte, der
damit ohne explizite Auswahlaktion wieder verwendet werden kann.

.Loginmaske des '{opsi-configed}'
image::opsi-configed-login.png["Login des {opsi-configed}", width="90mm"]

=== Neuer Hauptmenue-Punkt "Fenster"

Über den neuen Hauptmenü-Punkt "Fenster" können statt über die Schaltflächen in der Menüleiste rechts oben
die Seiten für das Lizenzmanagement sowie die Gruppen- und Produktspezialfunktionen geöffnet werden.
Außerdem befindet sich hier ein neuer Menüpunkt "Fenster anordnen", mit dem auf dem Desktop hinter anderen Fenstern "verloren gegangene"
configed-Fenster wieder in den Vordergrund geholt werden können.

.'{opsi-configed}': Hauptmenü mit "Fenster"-Aufrufen
image::opsi-configed-main-menu-windows.png["opsi-configed: Haupmenü mit Fenster-Aufrufen", width="90mm"]


=== Erweiterte Client-Suchfunktion innerhalb der Client-Tabelle

Die Funktion für die Suche innerhalb der Client-Tabelle mittels Suchstring-Eingabe ist erweitert:

Wie die Suche ausgeführt wird, ist durch die Auswahl in den Drop-down-Listen zu den Feldern und die erweiterte Liste zum Suchverfahren bestimmt:

* "Volltext": die Sucheingabe wird verwendet wie beim Standard-Googlen; d.h. wenn die Eingabe mehrere (durch Leerzeichen getrennte) Suchstrings enthält, muss mindestens einer in einer Spalte gefunden werden.

* "Volltext (Komplettstring)": die Sucheingabe wird verwendet, als würde man beim Googlen den Text in Anführungszeichen setzen; d.h. der Gesamttext muss irgendwo in einer Spalte gefunden werden.

* "Anfangstext": der Suchstring muss als Beginn einer Spalte vorkommen.

* "regulärer Ausdruck": Suchstring wird als sog. regulärer Ausdruck interpretiert, d.h. es werden Zeilen gesucht,
bei denen der Text einer Spalte nach den Prinzipien der Regulären Ausdrücke
(vgl. die Java-Dokumentation für  java.util.regex.Pattern) "matcht"


Betätigen der Return-Taste springt auf den nächsten Treffer der Suche (ohne Treffer: auf die nächste Zeile).
Weitere Auswahlfunktionen basierend auf der Suche zeigt das Kontextmenü des Suchfeldes:

=== Erweiterte Gruppenbearbeitungsmoeglichkeiten in der Client-Baumansicht

Mittels dem etwas erweiterten Kontextmenü einer Gruppe  ist es jetzt möglich,

* Untergruppen zu erzeugen;

* die Gruppeneigenschaften zu bearbeiten;

* bei Bedarf die Gruppen samt ihrer Untergruppen und aller Clientzuordnungen zu löschen;

* alle Clientzuordnungen unter Beibehaltung der Gruppe und ihrer Untergruppen zu entfernen;

* die enthaltenen Clients anzuzeigen und in einem Schritt auszuwählen.


[[opsi-407-releasenotes-linux]]
== Linuxsupport

=== Supportmatrix

include::../common/opsi_manual_supportmatrix-linclient.asciidoc[]

=== opsi-linux-client-agent: 15 Freistarts

Seit opsi 4.0.7 beinhaltet der opsi-linux-client-agent 15 Freistarts bei denen der Agent auch ohne Freischaltung verwendet werden kann.

Genauer formuliert: Nach der initalen Installation des opsi-linux-client-agent kann der der opsi-script 15 mal im Servicekontext gestartet werden ohne eine Freischaltung zu fordern. +
Dies gibt Ihnen die Möglichkeit einen Linuxrechner aufzusetzen und mit den entsprechenden opsi-Produkten für den geplanten Einsatz zu konfigurieren.
Beispielsweise können Sie nach der Installation das Produkt `l-opsi-server` aufrufen um aus dem frischinstallierten Rechner einen opsi-server zu machen.

Für eine dauerhafte Pflege des installierten Linuxrechners über diese 15 Freistarts hinaus benötigen Sie aber eine Freischaltung dieses Features

=== Neue boolsche Funktion waitForPackageLock

Bei Installationen unter Linux kann es gerade nach einem Neustart vorkommen,
das ein Installationsversuch über das Paketsystem der Distribution scheitert,
da diese gerade durch einen anderen Prozess belegt ist.

Für diese Problematik gibt es jetzt die neue boolsche Funktion: +
`waitForPackageLock(<seconds timeout string>,<bool should we kill>)` +
Liefert 'true' zurück wenn das Linux Packagesystem nicht gesperrt ist. +
Ist es gesperrt, so wird <seconds timeout string> Sekunden auf die Freigabe gewartet. +
Ist der Timeout erreicht,
so wird der Prozess welcher den Lock erzeugt hat abgeschossen wenn <bool should we kill> gleich 'true' ist. Dieses Vorgehen ist aber nicht empfohlen.

Beispiel:
[source,winst]
----
Message "Try to get Package Lock..."
if waitForPackageLock("60","false")
	comment "we got the package lock."
else
	LogError "could not get Package Lock"
	isFatalError "package lock failed"
endif
----

=== Erweiterung der Funktion getLinuxVersionMap

Die Funktion `getLinuxVersionMap` liefert als weiteren Key 'SubRelease'.
Dem Key 'SubRelease' wird auf SLES Systemen der Patchlevelstand als Wert zugewiesen.
Also bei SLES11SP4: 'SubRelease=4'.

=== Das Produkt l-opsi-server

Das Produkt 'l-opsi-server' dient dazu automatisiert auf einer Linuxmaschine per opsi-linux-client-agent
einen opsi-server zu installieren. Dies kann dazu dienen um schnell einen neuen opsi-depot-server zu installieren
oder z.B. ein opsi Testsystem.

Das Produkt 'l-opsi-server' hat folgende Properties:

* `opsi_online_repository`: +
(Base-) Repository for opsi-server installation. (Default="http://download.opensuse.org/repositories/home:/uibmz:/opsi:/opsi40") +
siehe auch 'repo_kind'

* `opsi_noproxy_online_repository`: +
(Base-) Repository for opsi-server installation (without any cache proxy). (Default="http://download.opensuse.org/repositories/home:/uibmz:/opsi:/opsi40") +
Sollten Sie bei `opsi_online_repository` einen Proxy oder deb-cacher mit angegeben haben
(z.B. 'http://mydeb-cacher:9999/download.opensuse.org/repositories/home:/uibmz:/opsi:/opsi40"),
dann geben Sie hier die URL nochmal ohne den Proxy an. Ansonsten geben Sie hier das selbe an wie bei `opsi_noproxy_online_repository`.

* `repo_kind`: +
From which repo kind ["experimental", "stable", "testing"] should be installed ?. (Default='stable') +
Aus dem Client OS, 'opsi_online_repository' und 'repo_kind' wird die URL zusammengebaut welche verwendet
um dem Client ein opsi Repository hinzuzufügen.

* `backend`: +
Which backend should be installed ? (mysql needs valid activation file). (Default='file') +
Eine modules Datei mit den benötigten Freischaltungen kann im custom Verzeichnis des Produktes abgelegt werden.
Wird dort eine modules gefunden so wird diese verwendet.

* `opsi_admin_user_name`: +
What is the name of the opsi_admin_user to create (empty= nothing created). (Default='adminuser') +
Wird hier ein user angegeben, so wird dieser angelegt, wird Mitglied der Gruppen 'opsiadmin', 'pcpatch'/'opsifileadmin'
und bekommt als unix- und samba Passwort den Wert von `opsi_admin_user_password`

* `opsi_admin_user_password`: +
What is the name of the opsi_admin_user to create (empty= nothing created). (Default='linux123') +
siehe `opsi_admin_user_name`

* `setup_after_install`: +
Which opsi product(s) should we switch to setup after l-opsi-server installation is done ?. (Default="")

* `allow_reboot`: +
May the server reboot if script is finished ?. (Default='true')

* `install_and_configure_dhcp`: +
Should we run the dhcp server on this machine ?. (Default='False') +
If this property is 'false' then the following properties: 'netmask', 'network',
'dnsdomain','nameserver' and 'gateway' are meaningless because thy only used for
dhcp configuration.

* `netmask`: +
Netmask  (for dhcp). (Default="255.255.0.0") +
Meaningless if 'install_and_configure_dhcp=false'

* `network`: +
network address (for dhcp). (Default="192.168.0.0") +
Meaningless if 'install_and_configure_dhcp=false'

* `dnsdomain`: +
DNS domain (for dhcp). (Default="uib.local") +
Meaningless if 'install_and_configure_dhcp=false'

* `nameserver`: +
Primary nameserver (for dhcp). (Default="192.168.1.245") +
Meaningless if 'install_and_configure_dhcp=false'

* `gateway`: +
gateway (option routers for dhcp). (Default="192.168.1.245") +
Meaningless if 'install_and_configure_dhcp=false'

* `update_test`: +
Do not use: Internal Debuging. (Default='False')

Das Produkt hat eine 'setup required before' Abhängigkeit zu dem Produkt 'l-system-update'.
D.h. wenn Sie 'l-opsi-server' auf 'setup' stellen wird automatisch 'l-system-update' auch auf setup
gestellt und vorher installiert.

In dem Verzeichnis `custom` des Produktes `l-opsi-server` kann eine Freischaltdatei (`modules`) abgelegt werden, welche bei der Installation durch das Produkt `l-opsi-server` verwendet wird und beim Einspielen einer neuen Version des Produktes erhalten bleibt.

CAUTION: Derzeit kann eine Maschine nicht gleichzeitig am selben opsi-config-server
opsi-client und opsi-depot-server sein. +
Wenn also ein per 'l-opsi-server' installierter opsi-server zum Depotserver an seinem Config-Server werden soll,
so müssen Sie vorher im configed die Maschine als Client löschen.

=== Einrichtung eines lokalen deb http Repository

Mit dem debian8 und ubuntu16-04 Paket ist es nun möglich von einem lokalen Apache2 Repository zu installieren. +
Dazu müssen bei dem Produkt im Property '' die entsprechende Adresse angeben nach dem Muster `http://<opsi-server>/opsi/<productId>` z.B `http://opsiserver/opsi/debian8` +
Weiterhin muss das lokale Repository natürlich erstellt werden. +
Stellen Sie dazu sicher, dass das Produkt `opsi-linux-support` auf Ihrem opsi-server installiert ist. Dieses Paket installiert die
hierfür benötigten Distributions-Pakete (apache2) und erstellt auch die benötigten Ordner. Dieser muss danach mit einem passenden distributions Repository gefüllt werden. +
Hierfür gibt es zwei Möglichkeiten:

. Einfach: Sie laden sich ein von uns gebautes und getestetes Repository herunter und packen aus
. Aufwendiger: Sie bauen es sich selbst


Einfach: +
Führen Sie das nachfolgende Script als 'root' aus. +
Beachten Sie das der Pfad zum Apache2 `DocumentRoot` zum einen Distributiontypisch unterschiedliche Defaults hat und darüberhinaus abweichend vom Default konfiguriert sein kann. +
Daher müssen Sie evtl. die zweite Zeile des Scriptes anpassen !

==== debian8

[source,prompt]
----
#! /bin/bash
DOCUMENTROOT=/var/www/html
URL=http://download.uib.de/opsi4.0/experimental/opsi-v407/opsi-linux
FILE=debian8.tgz
mkdir -p ${DOCUMENTROOT}/opsi
cd ${DOCUMENTROOT}/opsi
wget ${URL}/${FILE}
tar xzf ${FILE}
opsi-set-rights .
----

Aufwendiger: +
Sie können das Repository auch selbst erstellen:

==== ubuntu16-04

[source,prompt]
----
#! /bin/bash
DOCUMENTROOT=/var/www/html
URL=http://download.uib.de/opsi4.0/experimental/opsi-v407/opsi-linux
FILE=ubuntu16-04.tgz
mkdir -p ${DOCUMENTROOT}/opsi
cd ${DOCUMENTROOT}/opsi
wget ${URL}/${FILE}
tar xzf ${FILE}
opsi-set-rights .
----

Aufwendiger: +
Sie können das Repository auch selbst erstellen:

==== ucs41

######


==== ucs40

######



////
include::../common/opsi_manual_linux.asciidoc[]
////


[[opsi-407-releasenotes-clientagent]]
== Neuer opsi-client-agent

* Neuer opsiclientd
* Neuer Clientkiosk

CAUTION: Die genannten Neuerungen stehen erst ab NT6 zur Verfügung. Unter NT5 (z.B. Windows XP wird der 'alte' 4.0.6 basierte opsiclientd und Kioskclient installiert.


[[opsi-407-releasenotes-clientagent-kiosk]]
=== Neue opsiclientkiosk Anwendung

Mit opsi 4.0.7 wird die bisherige Webbasierte Dartstellung des Clientkiosk
durch eine Applikation abgelöst. Hintergrund dieses Wechsels sind:

* Beseitigung des Problems das ein selbstsigniertes Zertifikat akzeptiert werden muß.
* Größere Funktionalität des neuen Clients

CAUTION: Der alte (Webseitenbasierte) Kioskclient funktioniert mit dem neuen opsi-client-agent/opsiclientd nicht mehr.

[[software-on-demand_usage]]
==== Clientkiosk: Verwendung

Wenn der opsi-client-agent während der Installation merkt, dass die Konfiguration: _software-on-demand.active_ auf _true_ gesetzt wurde, wird automatisch während der Installation auf dem Client ein Startmenü-Eintrag erstellt, über den die Kioskanwendung direkt aufgerufen werden kann. Diesen findet man dann unter: _Start -> Programme -> opsi.org -> software-on-demand_.

Nach dem Start der Anwendung zeigt sich folgendes Hauptfenster:

.'opsi-client-kiosk': Hauptfenster
image::opsi-client-kiosk_num.png["opsi-client-kiosk: Hauptfenster", width=400]

Elemente:

. Headerleiste (Kundenspezifisch anpassbar)
. Info Button: Version und geladenen Sprache
. Datenladeanzeige
. Button zum Anzeigen der gesetzten Aktionen
. Button zum speichern und anzeigen der gesetzten Aktionen
. Button zum Beenden des Programms
. Anzeige der Gruppenliste
. Neuladen der Daten (z.B. nachdem Aktionen ausgeführt wurden)
. Gesetzten Filter löschen und alle Daten anzeigen
. Suchmaske (Filter Eingabefeld)
. Filter aktivieren
. Nach mögliche Produktupgrades filtern
. Produktanzeige
. Spalte zum Setzen der Aktionsanforderungen
. Tab: Produktdetailinfo: Beschreibung / Hinweis / Versionen
. Tab: Produktdetailinfo: Abhängigkeiten / Prioritäten
. Statusleiste mit Meldungen


Das Hauptfenster zeigt auf der linken Seite eine Liste der Produktgruppen (7) welche über die Config `software-on-demand.product-group-ids` für diesen Client freigegeben sind. Findet sich hier mehr wie eine Gruppe, so gibt es hier den zusätzlichen Eintrag 'Alle Gruppen' an erster Stelle. In dieser Liste kann ausgewählt werden aus welchen Produktgruppen Produkte angezeigt werden sollen. Per Default wird der erste Eintrag ausgewählt, also 'Alle Gruppen' oder die einzige Gruppe. +
Beim Start oder bei Veränderung der Auswahl werden die benötigten Daten eingelesen. Dies kann etwas dauern und der Lagevorgang wird im oberen Teil des Fensters (3) angezeigt. +
Die Produkte werden in der zentralen Tabelle (13) angezeigt. Sobald ein Produkt angeklickt ist werden unten Detailinformationen zu diesem Produkt eingeblendet (15/16). In der rechten Spalte `ActionRequest` (14) kann eine Aktionsanforderung gesetzt werden. +
Über den Button 'Zeige Aktionen' (4) werden die bisher der Anwendung bekannten Aktionen gezeigt aber noch nicht gespeichert. Erst der Button 'Aktionen Speichern' (5) sendet die gesetzten Aktionen an den Server. Dieser prüft ob über Produktabhängigkeiten noch weitere Produkte auf setup gesetzt werden müssen.
Abschließend wird in einem gesonderten Fenster die Gesamtliste der anstehenden Aktionen angezeigt.

.'opsi-client-kiosk': Aktionsbestätigung
image::opsi-client-kiosk2.png["opsi-client-kiosk: Aktionsbestätigung", width=200]

In diesem Fenster kann nun über den oberen Button `Installiere jetzt` eine sofortige Installation ausgelöst werden. In diesem Fall ist es schlau möglichst alle Applikationen zu schließen (bzw. zumindest Daten abzuspeichern) da die gestarteten Installationen mit laufenden Anwendungen in Konflikt geraten können. +
Über den unteren Button `Installiere bei nächster Standard-Gelegenheit` wird das Programm an dieser Stelle beendet und die gespeicherten Aktionen werden später ausgeführt.


Der config _software-on-demand.show-details_ aus opsi vor 4.0.7 hat in der Kioskanwendung keinen Einfluß mehr und kann gelöscht werden.




Auf das Modul kann auch über das Netzwerk zugegriffen werden, hierbei ist jedoch eine Authentifizierung notwendig.


[[software-on-demand_notice]]
==== Besonderheiten

Folgende Besonderheiten gelten für das Software-On-Demand Modul:

* Abhängigkeiten werden automatisch aufgelöst +
   - Software, die von Software aus der Demand-Gruppe abhängig ist, wird automatisch falls benötigt auf setup gesetzt, ohne Einfluss des Anwenders.

* Software die schon auf setup steht +
   - In diesem Fall, wird die Checkbox: _installieren_, schon bei der Übersichtsseite aktiviert.

[[software-on-demand_CI]]
===== Clientkiosk: Anpassung an Corporate Identity

Die Headerleiste des Hauptfensters (1) ist Kunden spezifisch anpassbar.
Dabei spielen zwei Dateien eine Rolle:

* `opsiclientkiosk.png`
* `opsiclientkiosk.ini`

Die `opsiclientkiosk.png` enthält das Bild welches in diesen Bereich geladen wird. +

Die `opsiclientkiosk.ini` definiert den Text und dessen Darstellung die in diesem Bereich angezeigt wird.

Beispiel:
----
[TitleLabel]
Text= opsi Client Kiosk
FontName = Arial
FontSize = 20
FontColor = $00000000
FontBold = true
FontItalic = false
FontUnderline = false
----

Templates für diese Dateien finden Sie unter `/var/lib/opsi/depot/opsi-client-agent/files/opsi/opsiclientkiosk/opsiclientkioskskin`
bzw. `C:\Program Files (x86)\opsi.org\opsi-client-agent\opsiclientkiosk\opsiclientkioskskin`


Möchten Sie Änderungen, welche Sie an den oben genannten Dateien durchgeführt haben, davor schützen, dass selbige
beim Einspielen einer neuen Version des opsi-client-agenten verloren gehen, so können Sie hierfür das custom Verzeichnis
(/var/lib/opsi/depot/opsi-client-agent/files/opsi/custom) verwenden. Das komplette custom Verzeichnis
wird bei der Installation einer neuen Version des opsi-client-agenten gesichert und wieder hergestellt, so dass hier gemachte
Änderungen bei einem Update nicht verloren gehen.

* custom/opsiclientkioskskin/*.*
Alle Dateien aus diesem Verzeichnis werden bei der Installation des opsi-client-agent auf dem Client nach C:\Pro
gram Files (x86)\opsi.org\opsi-client-agent\custom\opsiclientkioskskin kopiert. Falls vorhanden, wird dieses opsiclientkioskskin
Verzeichnis bevorzugt verwendet.


Ein nachträgliches Rechte nachziehen hilft Folgefehler zu vermeiden:

[source, prompt]
----
opsi-setup --set-rights /var/lib/opsi/depot/opsi-client-agent
----

[[opsi-407-releasenotes-wimcapture-rollout]]
== Wiederherstellung von opsi Metadaten aus Images (opsi-wim-capture, opsi-local-imagecapture)

*Wiederherstellung der opsi Metadaten zu installierten Produkten*

*Das Problem:*

Wenn Sie ein Windows mit opsi neu installieren, z.B. aus `win7-x64`, dann werden bei der Installation des opsi-client-agent alle Localboot-Produkte, welche bei diesem Rechner vorher auf `installed` standen, automatisch auf setup gestellt und damit später erneut installiert. +
Dies kann beim Ausrollen eines 'gecapturten' Images nicht ganz genauso durchgeführt werden. +
Im Image befindet sich das Backup der opsi-Daten, das dort während des capture Vorgangs abgelegt wurde. Dieses wird bei der Installation des opsi-client-agent entdeckt, und wieder in den opsi-server eingespielt. Damit stehen die Produkte, die in dem 'gecapturten' Image installiert waren, jetzt für den frisch installierten Rechner auf `installed`.
Würden jetzt alle Produkte, welche auf `installed` stehen auf `setup` gesetzt, würde dies dazu führen, dass alle schon im Image installierten Produkte nochmal installiert werden. Dies ist nicht erwünscht. 


Bei der Wiederherstellung der opsi Metadaten zu installierten Produkten gibt es ab opsi 4.0.7 zwei Varianten: +

* Variante 1: +
Zurückspielen der Metadaten und Beibehaltung von 'setup'-Actionrequests. +
Produkte die auf 'installed' stehen werden *nicht* auf 'setup' gestellt. +
Dies ist der Default und das Verhalten vor opsi 4.0.7

* Variante 2: + 
Zurückspielen der Metadaten. Produkte die auf 'installed' stehen werden auf 'setup' gestellt ausser denen welche in den restorten Metadaten enthalten waren. +

*Variante 1* +
Beim Ausrollen eines 'gecapturten' Images werden nach der Installation des Images nur die Produkte automatisch installiert, welche schon vor dem Beginn der Betriebssystem-Installation auf `setup` standen. Dies kann durch Ihren Eingriff oder das Property `setup_after_install` erfolgt sein.
Daher werden in diesem Fall auch nur die Produkte installiert, welche vor der Installation des Betriebssystems auf `setup` standen. +
Dies ist der Default und das Verhalten vor opsi 4.0.7

*Variante 2* +
Die Variante 2 verhält sich vom Ergebnis ähnlich wie es bei Installationen aus nicht gecapturten Images der Fall ist: +
* Zurückspielen der Metadaten. +
* Produkte die auf 'installed' stehen werden auf 'setup' gestellt ausser denen welche in den restorten Metadaten enthalten waren. +
Diese Verhalten steht erst ab opsi 4.0.7 zur Verfügung und ist nicht der Default. Variante 2 ist durch Erweiterungen am opsi-script möglich geworden und ist Bestandteil des opsi-client-agent von 4.0.7. +
Um dieses Verhalten zu verwenden muss ein 'config' ('Hostparameter') gesetzt werden: +
Der boolsche Konfigurationseintrag: `clientconfig.capture.switch_installed_products_to_setup`. Hat dieser Eintrag für den Client den Wert 'true' dann wird Variante 2 verwendet, ansonsten Variante 1. +

Über diese '{opsi-config-objects}' können dann Events Client-spezifisch aktiviert bzw. deaktiviert werden.
Die '{opsi-config-objects}' können über den '{opsi-configed}' oder '{opsi-admin}' angelegt werden.

Zum Anlegen der '{opsi-config-objects}' über '{opsi-admin}' sind die folgenden Befehle auf dem '{opsi-configserver}' auszuführen:

[source,prompt]
----
opsi-admin -d method config_createBool clientconfig.capture.switch_installed_products_to_setup "capture.switch_installed_products_to_setup" true
----
Damit stellen Sie für *alle* Rechner 'Variante 2' ein.

Zum Anlegen der '{opsi-config-objects}' über den '{opsi-configed}' wählen Sie dort 'Serverkonfiguration' / 'clientconfig' / Auf der Rechten Seite mit der rechten Maustaste: `Boolschen Konfigurationseintrag hinzufügen`.



[[opsi-407-releasenotes-opsi-script]]
== opsi-script / opsi-winst 4.11.6

* Logdateien sind nun immer in dem Encoding UTF-8.

* Security Upgrade zu Windows SSL Libraries 1.0.2h (libeay32.dll, ssleay32.dll) +
Update des SSL Protokolls auf TLS autonegotiation

* Neue Dokumentationen:

** opsi-winst-refrence-card mit Themen bezogener Funktionsübersicht (by topic)

* Neue Stringlisten Funktion:

`setStringInListAtIndex(`<newstring>,<list>,<indexstr>`) : stringlist`   //since 4.11.6 [W/L]

`removeFromListByMatch(`<searchstring>,<list>`) : stringlist`   //since 4.11.6 [W/L]

* Durch einen fix im opsi-script ist der Umgang mit objekt bezogenen Service Methoden per opsiservicecall jetzt möglich:

Der Umgang mit JSON Objekten aus dem Webservice erfordert ein Grundverständnis von JSON, den opsi Objekten und den JSON bezogenen Methoden in opsi-script.
Siehe dazu auch :
opsi-manual: Kapitel: "Web service / API Methoden seit opsi 4.0"
und siehe nächstes Kapitel

Gemäß folgendem Code Beispiel können Sie Objekte vom Service holen.
In diesem Beispiel werden Alle productOnClient Objekte geholt, welche zum aktuellen Rechner gehören (`%opsiserviceUser%` ist im Service Kontext der FGDN des Clients), Localboot Produkte sind und bei denen der Actionrequest auf 'setup' steht.
[source,winst]
----
DefStringlist $resultlist$
set $resultlist$ = getReturnListFromSection("opsiServiceCall_get_productOnClient_setup_objects")
[opsiServiceCall_get_productOnClient_setup_objects]
"method": "productOnClient_getObjects"
"params": [
          "[]",
          '{"clientId":"%opsiserviceUser%","productType":"LocalbootProduct","actionRequest":"setup"}',
          ]
----
Das Ergebnis ist ein JSON Array String welcher in der ersten Zeile von `$resultlist$` steht.


Sie können auch (veränderte) Objekte wieder zurückschreiben.
Folgendes Beispiel zeigt das Prinzip:
Die String Variable `$ArrayStr$` muss ein gültiges JSON Array enthalten.
[source,winst]
----
DefVar $ArrayStr$
(...)
[opsiServiceCall_updatePOC]
"method": "productOnClient_updateObjects"
"params": [
          '$ArrayStr$'
          ]
----




[[opsi-winst-rc-json]]
=== opsiservicecall und JSON Funktionen [W/L]

Diese Funktionen dienen dazu JSON Ausdrücke auf String oder Stringlisten zu analysieren
und zu modifizieren. Notwendig ist hierfür, die Struktur des zu bearbeitenden JSON-Ausdrucks zu kennen
und zu verstehen. Dies kann dazu verwendet werden, um über opsiservicecall Sektionen
mit den objektorientierten opsi-webservice Methoden zu arbeiten.

`jsonIsValid(`<jsonstr>`) : boolean`  //since 4.11.6: [W/L] +
Liefert 'true' zurück wenn, <jsonstr> einen gültigen JSON Ausdruck enthält.

`jsonIsArray(`<jsonstr>`) : boolean`  //since 4.11.6: [W/L] +
Liefert 'true' zurück wenn, <jsonstr> ein gültiges JSON Array enthält.

`jsonIsObject(`<jsonstr>`) : boolean`  //since 4.11.6: [W/L] +
Liefert 'true' zurück wenn, <jsonstr> ein gültiges JSON Object enthält.

`jsonAsObjectHasKey(`<jsonstr>,<keystr>`) : boolean`  //since 4.11.6: [W/L] +
Liefert 'true' zurück wenn, <jsonstr> ein gültiges JSON Object welches <keystr> als key enthält. +
Folgendes Beispiel würde 'true' zurückliefern: +
[source,winst]
----
jsonAsObjectHasKey('{"productVersion" : "4.4.1","packageVersion" : "2","productId" : "jedit"}','productId')
----

`jsonAsArrayCountElements(`<jsonstr>`) : intstr`  //since 4.11.6: [W/L] +
Wenn <jsonstr> ein gültiges JSON Array enthält ist der Rückgabewert ein String mit der Zahl der Elemente des Arrays. +
Im Fehlerfall = '"0"'

`jsonAsObjectCountElements(`<jsonstr>`) : intstr`  //since 4.11.6: [W/L] +
Wenn <jsonstr> ein gültiges JSON Object enthält ist der Rückgabewert ein String mit der Zahl der Elemente des Objects. +
Im Fehlerfall = '"0"'


`jsonAsArrayGetElementByIndex(`<jsonstr>, <indexstr>`) : jsonstring`  //since 4.11.6: [W/L] +
Liefert vom JSON Array <jsonstr> das Element mit dem Index <indexstr> +
Der Index beginnt bei 0. +
Im Fehlerfall = '""'

`jsonAsObjectGetValueByKey(`<jsonstr>, <keystr>`) : valuestring`  //since 4.11.6: [W/L] +
Liefert vom JSON Object <jsonstr> den Wert des Key <keystr> +
Im Fehlerfall = '""'


`jsonAsObjectSetValueByKey(`<jsonstr>, <keystr>,<valuestring>`) : jsonstring`  //since 4.11.6: [W/L] +
Liefert einen String mit dem in <jsonstr> übergebenen JSON Object bei dem für den Key <keystr>
 der Wert <valuestring> gesetzt ist. Ist der Key nicht vorhanden, so wird er erzeugt. +
Wenn <valuestring> als Stringwert erzeugt werden soll (also in doppelten Anführungszeichen),
dann verwenden Sie besser die folgende Funktion: `jsonAsObjectSetStringtypeValueByKey`. +
Im Fehlerfall = '""'

`jsonAsObjectSetStringtypeValueByKey(`<jsonstr>, <keystr>,<valuestring>`) : jsonstring`  //since 4.11.6: [W/L] +
Liefert einen String mit dem in <jsonstr> übergebenen JSON Object bei dem für den Key <keystr>
der Wert <valuestring> als String (also in doppelten Anführungszeichen) gesetzt ist.
Ist der Key nicht vorhanden, so wird er erzeugt. +
Wenn <valuestring> nicht als Stringwert erzeugt werden soll ,
dann verwenden Sie besser die vorherige Funktion: `jsonAsObjectSetValueByKey`. +
Im Fehlerfall = '""'


`jsonAsArrayPutObjectByIndex(`<jsonstr>, <indexstr>, <objectstr>`) : jsonstring`  //since 4.11.6: [W/L] +
Liefert einen String mit dem in <jsonstr> übergebenen JSON Array bei dem am Index <indexstr>
das Object <objectstr> gesetzt ist. +
Im Fehlerfall = '""'


`jsonAsArrayToStringList(`<jsonstr>`) : stringlist`  //since 4.11.6: [W/L] +
Liefert einen String mit dem in <jsonstr> übergebenen JSON Array als Stringliste mit einem Arrayelement pro Zeile.

`jsonStringListToJsonArray(`<strlist>`) : jsonstr`  //since 4.11.6: [W/L] +
Liefert einen String mit einem JSON Array der die Zeilen der Stringliste <strlist>
als Elemente enthält.

`jsonAsObjectGetKeyList(`<jsonstr>`) : stringlist`  //since 4.11.6: [W/L] +
Liefert eine Stringliste mit den Keys der im JSON Object <jsonstr> vorhandnen Keys.

Beispiel: +
Lese productOnClients Objekte aus einer Datei, ändere die `clientId` auf den Wert der aktuellen Maschine und schreibe die Objekte über den opsi-webservice zurück.
[source,winst]
----
[Actions]
requiredWinstVersion >= "4.11.6"

DefVar $ProductId$
DefVar $poc_file$
DefVar $objectStr$
DefVar $ArrayStr$

DefStringlist $pocList$

set $poc_file$ = "c:\tmp\product_on_client.json"

Message "Restore productOnClient from file ..."
comment " get Restore data from file ..."
Set $ArrayStr$ = strLoadTextFile($poc_file$)
if not(jsonIsValid($ArrayStr$))
	LogError "got no valid json from file"
	isFatalError
endif
if not(jsonIsArray($ArrayStr$))
	LogError "got no json Array from file"
	isFatalError
endif

comment "get list from array"
set $pocList$ = jsonAsArrayToStringList($ArrayStr$)
comment "loop over list"
for %pocindex% = "0" to calculate(count($pocList$)+"-1") do sub_set_clientid_in_poclist
comment "convert modified list to json array"
set $ArrayStr$ = jsonStringListToJsonArray($pocList$)
comment "write back"
opsiServiceCall_updatePOC

[sub_set_clientid_in_poclist]
set $objectStr$ = takeString("%pocindex%", $poclist$)
set $objectStr$ = jsonAsObjectSetStringtypeValueByKey(($objectStr$, "clientId","%opsiserviceUser%")
set $poclist$ = setStringInListAtIndex($objectStr$,$poclist$,"%pocindex%")

[opsiServiceCall_updatePOC]
"method": "productOnClient_updateObjects"
"params": [
					'$ArrayStr$',
					]
----

[[opsi-winst-rc-process]]
=== Prozess und Script Funktionen [W/L]

`waitForPackageLock(`<seconds timeout string>,<bool should we kill>`) : bool` //since 4.11.6.1 [L] +
Liefert 'true' zurück wenn das Linux Packagesystem nicht gesperrt ist. +
Ist es gesperrt,
so wird <seconds timeout string> Sekunden auf die Freigabe gewartet. +
Ist der Timeout erreicht,
so wird der Prozess welcher den Lock erzeugt hat abgeschossen wenn <bool should we kill> gleich 'true' ist.
Dieses Vorgehen ist aber nicht empfohlen.

`processIsRunning(`<process name>`) : boolean`  //since 4.11.6.1  [W/L] +
Liefert 'true' wenn der Prozess <process name> in der aktuellen Prozessliste ist.

Es gibt drei Varianten des `shellCall` Befehls:


* `shellCall (`<command string>`) : stringlist (output)`
* `shellCall (`<command string>`) : noresult`
* `shellCall (`<command string>`) : string (exitcode)`

Alle drei führen <command string> in der standard shell (cmd.exe / bash) aus.
Die Funktionen unterscheiden sich aber bezüglich des Rückgabewertes

* `shellCall (`<command string>`) : stringlist (output)` //since 4.11.4.2 [W/L] +
Liefert den output von <command string> als Stringliste.
[source,winst]
----
set $list$= shellCall('net start')
----
Ist eine Abkürzung für den Ausdruck:
[source,winst]
----
set $list$ = getOutStreamFromSection ('DosInAnIcon_netstart winst /sysnative')

[DosInAnIcon_netstart]
net start
----

* `shellCall (`<command string>`) : noresult` //since 4.11.6.1 [W/L] +
Liefert keinen output.
[source,winst]
----
shellCall('net start')
----
Ist eine Abkürzung für den Ausdruck:
[source,winst]
----
DosInAnIcon_netstart winst /sysnative

[DosInAnIcon_netstart]
net start
----


* `shellCall (`<command string>`) : string (exitcode)` //since 4.11.6.1 [W/L] +
Liefert den Exitcode von <command string> als String.
[source,winst]
----
set $exitcode$ = shellCall('net start')
----
Ist eine Abkürzung für den Ausdruck:
[source,winst]
----
DosInAnIcon_netstart winst /sysnative
set $exitcode$ = getLastExitcode

[DosInAnIcon_netstart]
net start
----

* `startProcess(`<string>`) : string (exitcode)` //since 4.11.6.1 [W/L] +
Startet das Programm <string> als Prozess und liefert den Exitcode zurück. +
[source,winst]
----
set $exitcode$ = startProcess('setup.exe /S')
----
Ist eine Abkürzung für den Ausdruck:
[source,winst]
----
Winbatch_setup
set $exitcode$ = getLastExitcode

[Winbatch_setup]
setup.exe /S
----
Tatsächlich basiert `startProcess` intern auf den selben Routinen wie `winbatch` und verarbeitet daher auch die selben Modifier:

* `/LetThemGo` +
Verschiebt den aufgerufenen Prozess in den Hintergrund und wartet *nicht* auf dessen Beendigung;
d.h. das sofort die nächste Zeile der WinBatch-Sektion bzw. die nächste Zeile des übergeordneten Programms abgearbeitet werden.

* `/TimeOutSeconds` <seconds> +
Bricht das Warten auf das Processende oder eine Wartebedingung (`/WaitForProcessEnding`) nach Ablauf von <seconds> ab, auch wenn das Prozessende oder die Wartebedingung noch nicht erfüllt ist. +
Der Prozess auf dessen Ende gewartet werden sollte wird nicht gestopt. +
Kann seit Version 4.11.3 auch alleine (z.B. ohne `/WaitForProcessEnding`) verwendet werden, aber nicht zusammen mit `/WaitSeconds`. +
Seit 4.11.4.6 wird der Zeitablauf bis zum Timeout über den Fortschrittsbalken angegeben.

* `/WaitSeconds` [number of seconds] +
Die Parametrisierung /WaitSeconds [AnzahlSekunden] modifiziert das Verhalten dahingehend, dass '{opsi-winst}/opsi-script' jeweils erst nach [AnzahlSekunden] die Skriptbearbeitung fortsetzt. Die angegebene Zeit stoppt '{opsi-winst}/opsi-script' auf jeden Fall. In der Default-Einstellung wird zusätzlich auf das Ende der angestoßenen Prozesse gewartet. Ist letzteres nicht gewünscht, so kann der Parameter mit dem Parameter /LetThemGo kombiniert werden.

* `/WaitForProcessEnding` <program name> +
Wartet darauf, das sich der Prozess mit dem Namen <program name> beendet. +
Kann und sollte mit `/TimeOutSeconds` kombiniert werden.

*  `/32Bit` //seit 4.11.3.5  [W] +
Das ist der Default. Die in der Sektion angegebene Pfade werden als 32 Bit Pfade interpretiert. +
Beispiel: `c:\windows\system32\regedit.exe` ruft (auch auf einem 64bit System) die 32 Bit 'regedit.exe' auf.

*  `/64Bit` //seit 4.11.3.5  [W] +
Die in der Sektion angegebene Pfade werden als 64 Bit Pfade interpretiert. +
Beispiel: `c:\windows\system32\regedit.exe` ruft (auf einem 64bit System) die 64 Bit 'regedit.exe' auf.

*  `/SysNative` //seit 4.11.3.5  [W] +
Die in der Sektion angegebene Pfade werden gemäß der OS Architektur interpretiert. +
Beispiel: `c:\windows\system32\regedit.exe` ruft auf einem 64bit System die 64 Bit 'regedit.exe' und auf einem 32bit System die 32 Bit 'regedit.exe'auf.

[[opsi-winst-rc-cryptfunc]]
=== Crypt / Hash related functions [W/L]

`encryptStringBlow(`<keystring>,<datastring>`) : string`  //since 4.11.6 [W/L] +
Verschlüsselt <datastring> mit dem Key <keystring> unter Verwendung von Blowfish und liefert den verschlüsselten Wert zurück.

`decryptStringBlow(`<keystring>,<datastring>`) : string`  //since 4.11.6 [W/L] +
Entschlüsselt <datastring> mit dem Key <keystring> unter Verwendung von Blowfish und liefert den entschlüsselten Wert zurück.

`md5sumFromFile(`<path to file>`) : string`  //since 4.11.6 [W/L] +
Liefert die md5summe der unter <path to file> gefundenen Datei zurück. +
Im Fehlerfall ist der Rückgabewert ein Leerstring.

[[opsi-winst-rc-timefunc]]
=== time / date related functions

`timeStampAsFloatStr : string` (Floating Number - format: 'days.decimal days') //since 4.11.6 [W/L] +
Liefert einen aktuellen Timestamp als Fließkommazahlstring. Dabei ist Zahl vor dem Komma die Tage
seit dem 30. Dezember 1899. Nach dem Komma kommt die Zeit in Bruchteilen des Tages. +
Just for Fun: Warum nicht der 31. Dezember 1899: ? +
siehe http://www.delphibasics.co.uk/RTL.asp?Name=TDateTime



[[opsi-winst-rc-misc]]
=== Misc news

* `getMSVersionMap` +
* Hat einen neuen Key Eintrag: `ReleaseID`. Der dazugehörige Wert gibt die Release von 'Windows 10' an wie z.B. '1511'. +
Leerstring wenn nicht vorhanden. +
Der Wert kommt aus der Registry: "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion" "ReleaseID"
* Hat einen neuen Key Eintrag: `prodInfoText`.Der dazugehörige Wert gibt die verwendeten Windows Edition als String an wie z.B. 'PRODUCT_PROFESSIONAL'.
* Hat einen neuen Key Eintrag: `prodInfoNumber`.Der dazugehörige Wert gibt die verwendeten Windows Edition als Zahl an wie z.B. '48'.

[cols="3,3,15"]
|==========================
| DecNum | HexNum | Text
|  00 | 00 | An unknown product
|  01 | 01 | Ultimate Edition"
|  02 | 02 | Home Basic Edition
|  03 | 03 | Home Premium Edition
|  04 | 04 | Enterprise Edition
|  05 | 05 | Home Basic Edition
|  06 | 06 | Business Edition
|  07 | 07 | Server Standard Edition (full installation)
|  08 | 08 | Server Datacenter Edition (full installation)
|  09 | 09 | Small Business Server
|  10 | 0A | Server Enterprise Edition (full installation)
|  11 | 0B | Starter Edition
|  12 | 0C | Server Datacenter Edition (core installation)
|  13 | 0D | Server Standard Edition (core installation)
|  14 | 0E | Server Enterprise Edition (core installation)
|  15 | 0F | Server Enterprise Edition for Itanium-based Systems
|  16 | 10 | Business Edition
|  17 | 11 | Web Server Edition (full installation)
|  18 | 12 | Cluster Server Edition
|  19 | 13 | Home Server Edition
|  20 | 14 | Storage Server Express Edition
|  21 | 15 | Storage Server Standard Edition
|  22 | 16 | Storage Server Workgroup Edition
|  23 | 17 | Storage Server Enterprise Edition
|  24 | 18 | Server for Small Business Edition
|  25 | 19 | Small Business Server Premium Edition
|  26 | 1A | PRODUCT_HOME_PREMIUM_N
|  27 | 1B | PRODUCT_ENTERPRISE_N
|  28 | 1C | PRODUCT_ULTIMATE_N
|  29 | 1D | PRODUCT_WEB_SERVER_CORE
|  30 | 1E | Windows Essential Business Server Management Server
|  31 | 1F | Windows Essential Business Server Security Server
|  32 | 20 | Windows Essential Business Server Messaging Server
|  33 | 21 | Server Foundation
|  34 | 22 | PRODUCT_HOME_PREMIUM_SERVER
|  35 | 23 | PRODUCT_SERVER_FOR_SMALLBUSINESS_V
|  36 | 24 | Server Standard Edition without Hyper-V (full installation)
|  37 | 25 | Server Datacenter Edition without Hyper-V (full installation)
|  38 | 26 | Server Enterprise Edition without Hyper-V (full installation)
|  39 | 27 | Server Datacenter Edition without Hyper-V (core installation)
|  40 | 28 | Server Standard Edition without Hyper-V (core installation)
|  41 | 29 | Server Enterprise Edition without Hyper-V (core installation)
|  48 | 30 | PRODUCT_PROFESSIONAL
|  49 | 31 | PRODUCT_PROFESSIONAL_N
|  50 | 32 | PRODUCT_SB_SOLUTION_SERVER
|  51 | 33 | PRODUCT_SERVER_FOR_SB_SOLUTIONS
|  52 | 34 | PRODUCT_STANDARD_SERVER_SOLUTIONS
|  53 | 35 | PRODUCT_STANDARD_SERVER_SOLUTIONS_CORE
|  54 | 36 | PRODUCT_SB_SOLUTION_SERVER_EM
|  55 | 37 | PRODUCT_SERVER_FOR_SB_SOLUTIONS_EM
|  56 | 38 | PRODUCT_SOLUTION_EMBEDDEDSERVER
|  57 | 39 | PRODUCT_SOLUTION_EMBEDDEDSERVER_CORE
|  59 | 3B | PRODUCT_ESSENTIALBUSINESS_SERVER_MGMT
|  60 | 3C | PRODUCT_ESSENTIALBUSINESS_SERVER_ADDL
|  61 | 3D | PRODUCT_ESSENTIALBUSINESS_SERVER_MGMTSVC
|  62 | 3E | PRODUCT_ESSENTIALBUSINESS_SERVER_ADDLSVC
|  63 | 3F | PRODUCT_SMALLBUSINESS_SERVER_PREMIUM_CORE
|  64 | 40 | PRODUCT_CLUSTER_SERVER_V
|  65 | 41 | PRODUCT_EMBEDDED
|  66 | 42 | PRODUCT_STARTER_E
|  67 | 43 | PRODUCT_HOME_BASIC_E
|  68 | 44 | PRODUCT_HOME_PREMIUM_E
|  69 | 45 | PRODUCT_PROFESSIONAL_E
|  70 | 46 | PRODUCT_ENTERPRISE_E
|  71 | 47 | PRODUCT_ULTIMATE_E
|  72 | 48 | PRODUCT_ENTERPRISE_EVALUATION
|  84 | 54 | PRODUCT_ENTERPRISE_N_EVALUATION
|  98 | 62 | PRODUCT_CORE_N
|  99 | 63 | PRODUCT_CORE_COUNTRYSPECIFIC
| 100 | 64 | PRODUCT_CORE_SINGLELANGUAGE
| 101 | 65 | PRODUCT_CORE
| 121 | 79 | PRODUCT_EDUCATION
| 122 | 7A | PRODUCT_EDUCATION_N
| 125 | 7D | Windows Enterprise 2015 LTSB
| 126 | 7E | Windows Enterprise 2015 LTSB N
| 129 | 81 | Windows Enterprise 2015 LTSB Evaluation
| 130 | 82 | Windows Enterprise 2015 LTSB N Evaluation
|==========================


* `getLinuxVersionMap` +
Die Funktion `getLinuxVersionMap` liefert als weiteren Key 'SubRelease'.
Dem Key 'SubRelease' wird auf SLES Systemen der Patchlevelstand als Wert zugewiesen.
Also bei SLES11SP4: 'SubRelease=4'.

* `ShellBatch /showoutput` +
Shows the output of the called command in a seperate window. +
Now also available at Linux. +
Now moves the main Window to top/right and the ouptup window to left/down.

* `strLoadTextfile`  and `strLoadTextFileWithEncoding` +
Reads the firs line of the given file. Now without newline chars.

* repaired product ordering for `product_sort_algorithm 1`


[[opsi-407-releasenotes-product-sorting]]
==  Installationsreihenfolge / Sortieralgorithmus1

* Der Sortieralgorithmus 1, der eine Reihenfolge für die Produkte auf der Basis der gesetzten
Produktprioritäten und Produktabhängigkeit bildet (mit Vorrang für die Produktabhängigkeiten als Spezifikum)
macht jetzt (wieder), was er laut Handbuch machen soll.:

Produktabhängigkeit vor Priorität (Default)

Bei diesem Algorithmus werden zunächst die Produkte anhand Ihrer Prioritäten sortiert und dann aufgrund der Produktabhängigkeiten nochmals umsortiert. 
Hierdurch kann natürlich ein Produkt mit sehr niedriger Priorität weit nach vorne geschoben werden weil es von einem anderen Produkt als 'required before' benötigt wird. Auf der anderen Seite wird vermieden das es zu Installationsproblemen aufgrund nicht aufgelöster Produktabhängigkeiten kommt. +
Der Algorithmus 1 sorgt dafür, das die Installationsreihenfolge konstant ist, unabhängig davon wieviele Produkte auf setup stehen. Diese Reihenfolge entspricht der Reihenfolge welche im configed angezeigt wird wenn die Produkte nach der Spalte 'Position' sortiert werden. +
Damit ist gesichert, dass
bei einer mit "ExitWindows /immediateReboot" nur unterbrochenen Abarbeitung eines setup-Skripts nach dem Reboot
direkt die Bearbeitung des unterbrochenen Skripts weitergeführt wird.'

In Version 4.0.6 war er durch Überlappung mehrerer Fehler
komplett außer Funktion, faktisch wurde immer der Sortieralgorithmus 2 angewendet.

CAUTION: Durch die Reperatur dieses länger vorhandenen Bugs ändert sich die Installationsreihenfolge im Vergleich zu der fehlerhaften Reihenfolge in 4.0.6

* Die Produktreihenfolge, die je nach Einstellung im Server-Config
mit Algorithmus 1 oder 2 berechnet ist, wird jetzt bei der
Produktinstallation durch den opsi-winst (konstant) eingehalten. Damit ist gesichert, dass
bei einer mit "ExitWindows /immediateReboot" nur unterbrochenen Abarbeitung eines setup-Skripts nach dem Reboot
direkt die Bearbeitung des unterbrochenen Skripts weitergeführt wird.



[[opsi-407-releasenotes-opsi-logviewer]]
== opsi-Logviewer

* Das von uib erstellte Tool opsi-logviewer öffnet jetzt auch Dateien, 
die u.a. in den Archivformaten zip oder gzip komprimiert wurden. 
Damit können dann Logdateien, die platzsparend als Archiv zugeschickt werden, 
direkt betrachtet werden. (Enthält ein Archiv mehrere Dateien, werden die Inhalte aneinandergehängt.)   

* Das Setup.Skript  ist um eine Linux-Unterstützung erweitert, 
so dass der opsi-logviewer auch auf einem Linux-Client automatisiert installiert werden kann.

* Die neue before-Abhängigkeit zu javavm sichert die Funktion des Startaufrufs (weil javavm die javaw.exe ins Systemverzeichnis kopiert) 



[[opsi-407-releasenotes-netboot-windows]]
== opsi Support Matrix Windows Clients

Im folgenden finden Sie eine Übersicht auf welchen Windows Plattformen opsi
als Client läuft.

include::../common/opsi_manual_supportmatrix-winclient.asciidoc[]



[[opsi-407-releasenotes-misc]]
== Sonstiges

[[opsi-407-releasenotes-misc-changelogs]]
=== Changelogs:


[[opsi-407-releasenotes-misc-changelogs-opsi-configed]]
==== Changelog opsi-configed

opsi-configed (4.0.7.1.3-1) STABLE; urgency=medium

  * fix: a unified interpretation of the expected waiting time for a progressbar

 -- roeder <roeder@uib.local>  Fri, 24 Jun 2016 14:52:52 +0200

opsi-configed (4.0.7.1.2-1) STABLE; urgency=medium

  * more details in connection window

 -- Rupert Roeder <roeder@uib.local>  Thu, 23 Jun 2016 15:08:20 +0200

opsi-configed (4.0.7.1.1-1) STABLE; urgency=medium

  * bugfix reload of licence statistics

 -- Rupert Roeder <roeder@uib.local>  Thu, 23 Jun 2016 11:48:03 +0200

opsi-configed (4.0.6.7.6-1.12) TESTTING; urgency=medium

  * some more start rearrangements of threads
  * fixed "remove all licences from selected clients"

 -- roeder <roeder@uib.local>  Fri, 20 May 2016 15:58:42 +0200

opsi-configed (4.0.6.7.5-1.11) STABLE; urgency=medium

  * some rearrangements of start threads

 -- Rupert Roeder <roeder@uib.local>  Thu, 28 Apr 2016 15:42:30 +0200

opsi-configed (4.0.6.7.5-1.6) STABLE; urgency=medium

  * more logging

 -- Rupert Roeder <roeder@uib.local>  Thu, 28 Apr 2016 12:16:43 +0200

opsi-configed (4.0.6.7.5-1.5) STABLE; urgency=medium

  * new compile script

 -- Rupert Roeder <roeder@uib.local>  Fri, 22 Apr 2016 12:28:00 +0200

opsi-configed (4.0.6.7.5-1.1) STABLE; urgency=medium

  * eliminating waiting window on start

 -- roeder <roeder@uib.local>  Thu, 21 Apr 2016 15:03:44 +0200

opsi-configed (4.0.6.7.5-1) STABLE; urgency=medium

  * fixed display of problems with restricted countage of modules usage

 -- roeder <roeder@uib.de>  Fri, 08 Apr 2016 13:16:18 +0200

opsi-configed (4.0.7.2.1-1) EXPERIMENTAL; urgency=medium

  * activated multiselection for depotproperties page

 -- roeder <roeder@edge530-2>  Wed, 29 Jun 2016 14:20:18 +0200

opsi-configed (4.0.7.1.3-1) STABLE; urgency=medium

  * fix: a unified interpretation of the expected waiting time for a progressbar

 -- roeder <roeder@uib.local>  Fri, 24 Jun 2016 14:52:52 +0200

opsi-configed (4.0.7.1.2-1) STABLE; urgency=medium

  * more details in connection window

 -- Rupert Roeder <roeder@uib.local>  Thu, 23 Jun 2016 15:08:20 +0200

opsi-configed (4.0.7.1.1-1) STABLE; urgency=medium

  * bugfix reload of licence statistics

 -- Rupert Roeder <roeder@uib.local>  Thu, 23 Jun 2016 11:48:03 +0200

opsi-configed (4.0.6.7.6-1.12) TESTTING; urgency=medium

  * some more start rearrangements of threads
  * fixed "remove all licences from selected clients"

 -- roeder <roeder@uib.local>  Fri, 20 May 2016 15:58:42 +0200

opsi-configed (4.0.6.7.5-1.11) STABLE; urgency=medium

  * some rearrangements of start threads

 -- Rupert Roeder <roeder@uib.local>  Thu, 28 Apr 2016 15:42:30 +0200

opsi-configed (4.0.6.7.5-1.6) STABLE; urgency=medium

  * more logging

 -- Rupert Roeder <roeder@uib.local>  Thu, 28 Apr 2016 12:16:43 +0200

opsi-configed (4.0.6.7.5-1.5) STABLE; urgency=medium

  * new compile script

 -- Rupert Roeder <roeder@uib.local>  Fri, 22 Apr 2016 12:28:00 +0200

opsi-configed (4.0.6.7.5-1.1) STABLE; urgency=medium

  * eliminating waiting window on start

 -- roeder <roeder@uib.local>  Thu, 21 Apr 2016 15:03:44 +0200

opsi-configed (4.0.6.7.5-1) STABLE; urgency=medium

  * fixed display of problems with restricted countage of modules usage

 -- roeder <roeder@uib.de>  Fri, 08 Apr 2016 13:16:18 +0200

opsi-configed (4.0.6.7.4-1) EXPERIMENTAL; urgency=medium

  * multiselection switched on in swaudit page
  * labelling of pdf open or save dialog

 -- roeder <roeder@uib.de>  Thu, 17 Mar 2016 13:46:02 +0100

opsi-configed (4.0.6.7.3-1) EXPERIMENTAL; urgency=medium

  * fixed lost view of filtered clients

 -- roeder <roeder@uib.de>  Wed, 16 Mar 2016 16:23:32 +0100

opsi-configed (4.0.6.7.2-1) EXPERIMENTAL; urgency=medium

  * treeview groups can now be moved, the clients can be removed (without deleting the group)

 -- roeder <roeder@uib.de>  Tue, 15 Mar 2016 15:12:07 +0100

opsi-configed (4.0.6.7.1-1) EXPERIMENTAL; urgency=medium

  * password property hiding

 -- roeder <roeder@uib.de>  Wed, 09 Mar 2016 12:56:07 +0100

opsi-configed (4.0.6.7.0-1) EXPERIMENTAL; urgency=medium

  * fixed re-selection of clients after reload

 -- roeder <roeder@uib.de>  Mon, 07 Mar 2016 12:30:43 +0100

opsi-configed (4.0.6.6.2-1) TESTING; urgency=medium

  * fixed two problems in licence management

 -- roeder <roeder@uib.de>  Thu, 03 Mar 2016 16:23:06 +0100

opsi-configed (4.0.6.6.1-1) TESTING; urgency=medium

  * (delayed) wake on lan on several depots
  * multi-word search implemented for client page
  * Windows menu introduced
  * option to arrange all running dialogs in the foreground
  * context menu option for saving log files
  * several bug fixes

 -- roeder <roeder@uib.de>  Mon, 22 Feb 2016 14:38:12 +0200

opsi-configed (4.0.6.3.8-1) UNRELEASED; urgency=medium

  * fixed bug that the clients base data for the search function did not change on depot change


[[opsi-407-releasenotes-misc-changelogs-opsi-client-agent]]
==== Changelog opsi-client-agent

###############

[[opsi-407-releasenotes-misc-changelogs-config-win10]]
###############

[[opsi-407-releasenotes-misc-changelogs-opsi-script]]
==== Changelog opsi-script / opsi-winst
###############


[[opsi-407-releasenotes-misc-changelogs-windows-netboot]]
==== Changelog windows netboot products
###############

[[opsi-407-releasenotes-misc-changelogs-linux-netboot]]
==== Changelog linux netboot products

###############

.centos70

###############


.debian7

###############


.debian8

###############


.opensuse13-2
###############

.sles12
###############

.redhat70
###############

.Ubuntu14-04
###############

[[opsi-407-releasenotes-misc-changelogs-linux-localboot]]
==== Changelog linux localboot products
l-system-update 4.0.7.1-1 stable urgency=low

  * waitForPackageLock
  * new property apt_get_autoremove to remove old auto installed kernels from debian familiy systems (default=false)

-- d.oertel <d.oertel@uib.de> Wed, 11 May 2016 15:00:00 + 0100


[[opsi-407-releasenotes-misc-changelogs-opsi-local-image]]
==== Changelog opsi-local-image

###############


[[opsi-407-releasenotes-misc-changelogs-misc-netboot]]
==== Changelog misc netboot products

###############

[[opsi-407-releasenotes-misc-changelogs-python-opsi]]
==== Changelog python-opsi

###############

[[opsi-407-releasenotes-misc-changelogs-opsiconfd]]
==== Changelog opsiconfd

opsiconfd (4.0.6.14-1) stable; urgency=medium

  * Small improvements during statistics collections and display.
  * opsiconfd will log statistics at shutdown with level notice.

 -- Niko Wenselowski <n.wenselowski@uib.de>  Fri, 01 Apr 2016 11:00:03 +0200

###############

[[opsi-407-releasenotes-misc-changelogs-opsi-utils]]
==== Changelog opsi-utils

opsi-utils (4.0.7.1-1) testing; urgency=medium

  * opsi-convert: If you are logging into a file the loglevel will be DEBUG.
  * opsi-product-updater: The notification mail will now have the DATE field
    in the header. The field is formatted as specified in RFC 5322.
  * opsi-package-manager: Setting -v now sets an implicit -q to show the
    output. If using '-p ask' no -q will be set to be able to still
    select the wanted properties.

 -- Niko Wenselowski <n.wenselowski@uib.de>  Mon, 23 May 2016 14:31:10 +0200

opsi-utils (4.0.6.14-1) testing; urgency=medium

  * opsi-makeproductfile: Avoid reference to undefined 'incremental'.

 -- Niko Wenselowski <n.wenselowski@uib.de>  Fri, 29 Apr 2016 12:21:49 +0200

opsi-utils (4.0.6.13-1) testing; urgency=medium

  * opsi-makeproductfile: now using argparse internally
  * opsi-admin got received a welcome message.
  * Fixed typo in German translation.
  * opsi-convert: show custom application name if used against webinterface
    of another server to be able to easily spot the corresponding requests.
  * opsi-product-updater: Attempts to close open connections now more reliable.
  * opsi-makeproductfile: use argparse instead of getopt.
  * opsi-product-updater: running with -p <productId> now implies -i.

 -- Niko Wenselowski <n.wenselowski@uib.de>  Thu, 28 Apr 2016 12:29:16 +0200

opsi-utils (4.0.6.12-1) experimental; urgency=medium

  * opsi-package-manager: return error when trying to remove non installed
    package
  * opsi-package-manager: logs into package.log with LogLevel 4
  * Added logrotate config for /var/log/opsi/opsi-package-manager.log

 -- Mathias Radtke <m.radtke@uib.de>  Tue, 12 Apr 2016 15:56:31 +0200

opsi-utils (4.0.6.11-1) experimental; urgency=medium

  * opsi-backup: Warn during restore if no backends are given.
  * Various small changes for easier maintenance.
  * opsi-package-manager: only query for depot information if required.

 -- Niko Wenselowski <n.wenselowski@uib.de>  Mon, 04 Apr 2016 17:00:33 +0200

###############

####################

[[opsi-407-releasenotes-misc-changelogs-opsi-linux-bootimage]]
==== Changelog opsi-linux-bootimage

###############

[[opsi-407-releasenotes-misc-changelogs-opsi-depotserver]]
==== Changelog opsi-depotserver

###############

####################

[[opsi-407-releasenotes-misc-changelogs-opsi-atftp]]
==== Changelog opsi-atftp


####################

[[opsi-407-releasenotes-misc-changelogs-opsipxeconfd]]
==== Changelog opsipxeconfd

opsipxeconfd (4.0.7.1-1) stable; urgency=medium

  * Refactored internal code for locking.

 -- Niko Wenselowski <n.wenselowski@uib.de>  Thu, 19 May 2016 12:39:40 +0200

###############

[[opsi-407-releasenotes-misc-changelogs-opsi4ucs]]
==== Changelog opsi4ucs


####################

[[opsi-407-releasenotes-misc-changelogs-opsi-swaudit]]
==== Changelog opsi-swaudit
####################

[[opsi-407-releasenotes-misc-changelogs-opsi-template]]
==== Changelog opsi-template
####################
[[opsi-407-releasenotes-misc-changelogs-jedit]]
==== Changelog jedit

jedit_5.3.0-1 stable; urgency=low

   * update to 5.3
   * opsi-script.xml for opsi-script 4.11.6.1

-- d.oertel <d.oertel@uib.de> Fri, 24 Jun 2016 15:00:00 + 0100

[[opsi-407-releasenotes-misc-changelogs-l-jedit]]
==== Changelog l-jedit

l-jedit 5.3-3 ; stable,  ; urgency=low

  * opsi-script.xml for opsi-script 4.11.6.1

 -- d.oertel <d.oertel@uib.de> Fri, 24 Jun 2016 15:00:00 + 0100
 
 
[[opsi-407-releasenotes-misc-changelogs-opsi-logviewer]]
==== Changelog opsi-logviewer
opsi-logviewer (2.2-1) testing; urgency=low

  * fallback for opening file with unknown extension if it is not recognized as an archive

 -- r.roeder <r.roeder@uib.de> Thu, 21 Jul 12:00:00 + 0100

opsi-logviewer (2.1-1) testing; urgency=low

  * added Linux support

 -- d.oertel <d.oertel@uib.de> Wed, 23 Dec 2015 15:00:00 + 0100

opsi-logviewer (2.0-1) testing; urgency=lo

* added support for archive formats




