////
; Copyright (c) uib gmbh (www.uib.de)
; This documentation is owned by uib
; and published under the german creative commons by-sa license
; see:
; http://creativecommons.org/licenses/by-sa/3.0/de/
; http://creativecommons.org/licenses/by-sa/3.0/de/legalcode
; english:
; http://creativecommons.org/licenses/by-sa/3.0/
; http://creativecommons.org/licenses/by-sa/3.0/legalcode
;
; credits: http://www.opsi.org/credits/
////

////
;***************************************************************************
; Subversion:
; $Revision:  $ $Author: oertel $
; $Date: $
;***************************************************************************
////

:Author:    uib gmbh
:Email:     info@uib.de
:Revision:  4.0.7
:doctype:   book

// Include common opsi terms
include::../common/opsi_terms.asciidoc[]

[[opsi-407-releasenotes]]
= opsi Version 4.0.7 Release Notes

// Include common opsi copyright
include::../common/opsi_manual_copyright.asciidoc[]


////
Notizen:
#######################
Highlights:
* opsi auf xenial
* opsiclientd für xenial
* 15 Freistarts bei opsi-linux-client-agent
* Sortierreihenfolge
* Neuer KioskClient
* neuer opsi-winst
* opsi-clonezilla jetzt mit uefi support
* opsi-clonezilla ocs-live command geht wieder
-------------------------
Essential:

* opsi auf:
xenial
sles12sp1

* server pakete:
bootimage
opsiconfd
opsi-configed

* netboot:
opsi-clonezilla
** netboot pre published
nt6-netboot
linux-netboot
oli-netboot

localboot:
winst4.11.6
jedit
opsi-winst-test
opsi-client-agent
* Sortierreihenfolge
* Neuer KioskClient
opsi-wim-capture
opsi-configed

opsi-linux:
ubuntu16.04
opsi-linux-client-agent
l-opsi-server

##################################
Nice to have:

opsi auf:
sles11sp4
opensusel42.1

netboot:

opsi-linux:
ucs40
ucs41

////



[[opsi-407-releasenotes-overview]]
== Übersicht der Neuerungen

Schwerpunkte dieser Freigabe sind:

* Unterstützung Ubuntu 16.04 Xenial
* Neues opsi Bootimage
* Neue opsi-linux Netboot Produkte und Client-agent
* Sortierung der Installationsreihenfolge nach Algorithmus 1 ist repariert
* Neuer opsi-client-agent

Das opsi Service Release 4.0.7 weist eine Fülle von Neuerungen und Detailverbesserungen auf. 
Hier eine Übersicht:

* Neues opsi Bootimage
** Basiert auf Ubuntu 16.04 Xenial
** Kernel 


* opsi-configed:


* opsi-client-agent:
** Neuer opsiclientd
** Neuer Client für den Kioskmode
** Upgrade de SSL libraries zu 1.0.2h


* opsi-winst / opsi-script (4.11.6.1)
** Zahlreiche neue Funktionen
** Upgrade de SSL libraries zu 1.0.2h
** Siehe auch gesondertes <<opsi-407-releasenotes-opsi-script>>

* python-opsi:

** Zahlreiche Verbesserungen und Features in der Python-Library von opsi +
Siehe auch gesondertes <<opsi-407-releasenotes-python-opsi>>


* opsi-clonezilla:
** aktualisierte Version
** runcommand 'ocs-live' funktioniert wieder
** UEFI Support

* opsi-linux-support:
** Aktualisierter opsi-linux-client-agent (mit 15 Freistarts)
** debian8 Produkt mit Installation auch aus lokalem http Repository
** ubunt16-04 Produkt mit Installation auch aus lokalem http Repository
** Bereitstellung von lokalen http Repositories für die Linuxinstallation
** Produkt l-opsi-server für die automatisierte Installation von opsi-server Paketen auf einer Linux Maschine (z.B. zur Erstellung eines neuen Depotservers)
Siehe auch gesondertes <<opsi-407-releasenotes-linux>>


[[opsi-407-releasenotes-packages]]
== Paketliste

.Server-Pakete:
* opsi-depotserver
* opsi-linux-support
* opsi-utils
* opsiconfd
* python-opsi
* opsi-linux-bootimage
* opsi-configed

.opsi-Pakete (Localboot):
* opsi-client-agent
* opsi-configed
* config-win10

.opsi-Pakete (netboot):
* win* 
* opsi-clonezilla

.opsi-Pakete (opsi-linux):
* centos70_
* redhat70_
* debian7-
* debian8-
* Ubuntu14-04
* Ubuntu16-04
* opensuse13-2
* sles12

* l-system-update_4.0.7.1-1.opsi

.opsi-Pakete (opsi-local-image):
* opsi-local-image-win* 
* opsi-local-image-capture
* opsi-local-image-capture-prepare


[[opsi-407-releasenotes-missing]]
== Was fehlt noch (und ist in Arbeit)

* opsi-client-agent:
** Die Möglichkeit im Rahmen 'User Profile Management' den opsi-winst komplett im Kontext des eingeloggten Users laufen zu lassen.
** Die Möglichkeit bei der Event-Ausführung dieses auf bestimmte Produkte +
einzuschränken oder aber Produkte auszuschließen. Dazu können Produktgruppen +
angegeben werden.

* opsi-linux-client-agent:
** Noch kein echter opsiclientd für folgende Distributionen: +
RedHat 7 +
CentOS 7 

* opsi-linux 4.0.7 Netboot Produkte: UEFI support


[[opsi-407-releasenotes-knownbugs]]
== Known Bugs / Known Problems


.KNOWN BUGS:

* opsi-winst 4.11.6.1: +
Im interaktiven Modus geht der Logviewer zur Zeit nicht.

.KNOWN PROBLEMS:

* ######

[[opsi-407-releasenotes-eol]]
== Abkündigung

[[opsi-407-releasenotes-eol_server]]
=== Abkündigung: Distributionen für opsi-server

In diesem Kapitel werden die Abkündigungen aufgelistet.
Diese Distributionsversionen werden aus verschiedenen Gründen nicht weiter +
von opsi unterstützt.

* ######

Siehe auch gesondertes Kapitel: <<opsi-407-releasenotes-supportmatrix>>.

[[opsi-407-releasenotes-eol_winclient]]
=== Abkündigung Clients: Windows Versionen

Ab opsi v4.0.7 werden wir die Netbootpakete für

* ######


nicht weiter pflegen. Ebenso planen wir für diese Windowsversionen die +
Unterstützung in den Update Abo’s einzustellen. +
Falls Sie hierzu Fragen oder Probleme haben, melden Sie sich bitte bei uns.

Siehe auch gesondertes Kapitel: <<opsi-407-releasenotes-netboot-windows>>.

[[opsi-407-releasenotes-eol_linclient]]
=== Abkündigung Clients: Linux Versionen

Ab opsi v4.0.7 werden wir die Netbootpakete für

* ######

nicht weiter pflegen. +
Falls Sie hierzu Fragen oder Probleme haben, melden Sie sich bitte bei uns.


[[opsi-407-releasenotes-supportmatrix]]
== opsi Support Matrix

Im folgenden finden Sie eine Übersicht auf welchen Plattformen opsi
als Server läuft.

include::../common/opsi_manual_supportmatrix.asciidoc[]

Sollten Sie den opsi-server auf einer Betriebssystemversion einsetzen, +
welche im vorigen Abschnitt nicht als Unterstützt aufgeführt ist,
so empfehlen wir Ihnen ein Betriebssystem-Update bevor Sie opsi v4.0.7 einspielen.


[[opsi-407-releasenotes-clientagent]]
== Neuer opsi-client-agent

* Neuer opsiclientd
* Neuer Kioskagent

image::opsi-client-kiosk.png["{opsi-kiosk-client}: opsi-kiosk-client: Hauptfenster", width=400]

image::opsi-client-kiosk2.png["{opsi-kiosk-client2}: opsi-kiosk-client: Aktionsbestätigung", width=400]


[[opsi-407-releasenotes-linux]]
== Linuxsupport

=== Supportmatrix

include::../common/opsi_manual_supportmatrix-linclient.asciidoc[]

=== opsi-linux-client-agent: 15 Freistarts

Der opsi-linux-client-agent beinhaltet ab opsi 4.0.7 15 Freistarts bei denen der Agent auch ohne Freischaltung verwendet werden kann.

Genauer formuliert: Nach der initalen Installation des opsi-linux-client-agent kann der der opsi-script 15 mal im Servicekontext gestartet werden ohne eine Freischaltung zu fordern. +
Dies gibt Ihnen die Möglichkeit einen Linuxrechner aufzusetzen und mit den entsprechenden opsi-Produkten für den geplanten Einsatz zu konfigurieren.
Beispielsweise können Sie nach der Installation das Produkt `l-opsi-server` aufrufen um aus dem frischinstallierten Rechner einen opsi-server zu machen.

Für eine dauerhafte Pflege des installierten Linuxrechners über diese 15 Freistarts hinaus benötigen Sie aber eine Freischaltung dieses Features

=== Neue boolsche Funktion waitForPackageLock

Bei Installationen unter Linux kann es gerade nach einem Neustart vorkommen,
das ein Installationsversuch über das Paketsystem der Distribution scheitert,
da diese gerade durch einen anderen Prozess belegt ist.

Für diese Problematik gibt es jetzt die neue boolsche Funktion: +
`waitForPackageLock(<seconds timeout string>,<bool should we kill>)` +
Liefert 'true' zurück wenn das Linux Packagesystem nicht gesperrt ist. +
Ist es gesperrt, so wird <seconds timeout string> Sekunden auf die Freigabe gewartet. +
Ist der Timeout erreicht,
so wird der Prozess welcher den Lock erzeugt hat abgeschossen wenn <bool should we kill> gleich 'true' ist. Dieses Vorgehen ist aber nicht empfohlen.

Beispiel:
[source,winst]
----
Message "Try to get Package Lock..."
if waitForPackageLock("60","false")
	comment "we got the package lock."
else
	LogError "could not get Package Lock"
	isFatalError "package lock failed"
endif
----

=== Erweiterung der Funktion getLinuxVersionMap

Die Funktion `getLinuxVersionMap` liefert als weiteren Key 'SubRelease'.
Dem Key 'SubRelease' wird auf SLES Systemen der Patchlevelstand als Wert zugewiesen.
Also bei SLES11SP4: 'SubRelease=4'.

=== Das Produkt l-opsi-server

###############################

=== Einrichtung eines lokalen deb http Repository

#######

==== debian8

#######

==== ubuntu16-04

######

==== UCS4.1

######


==== UCS4.0

######



////
include::../common/opsi_manual_linux.asciidoc[]
////


[[opsi-407-releasenotes-opsi-script]]
== opsi-script / opsi-winst 4.11.6

* Security Upgrade zu Windows SSL Libraries 1.0.2h (libeay32.dll, ssleay32.dll) +
Update des SSL Protokolls auf TLS autonegotiation

* Neue Dokumentationen:

** opsi-winst-refrence-card mit Themen bezogener Funktionsübersicht (by topic)

* Neue Stringlist Funktion:

`setStringInListAtIndex(`<newstring>,<list>,<indexstr>`) : stringlist`   //since 4.11.6 [W/L]


* Neu: Funktionen zum Handling von JSON

[[opsi-winst-rc-json]]
=== opsiservicecall und JSON Funktionen [W/L]

Diese Funktionen dienen dazu JSON Ausdrücke auf String oder Stringlisten zu analysieren
und zu modifizieren. Notwendig ist hierfür, die Struktur des zu bearbeitenden JSON-Ausdrucks zu kennen
und zu verstehen. Dies kann dazu verwendet werden um mit über opsiservicall Sektionen
mit den objektorientierten opsi-webservice Methoden zu arbeiten. 

`jsonIsValid(`<jsonstr>`) : boolean`  //since 4.11.6: [W/L] +
Liefert 'true' zurück wenn, <jsonstr> einen gültigen JSON Ausdruck enthält.

`jsonIsArray(`<jsonstr>`) : boolean`  //since 4.11.6: [W/L] +
Liefert 'true' zurück wenn, <jsonstr> ein gültiges JSON Array enthält.

`jsonIsObject(`<jsonstr>`) : boolean`  //since 4.11.6: [W/L] +
Liefert 'true' zurück wenn, <jsonstr> ein gültiges JSON Object enthält.

`jsonAsObjectHasKey(`<jsonstr>,<keystr>`) : boolean`  //since 4.11.6: [W/L] +
Liefert 'true' zurück wenn, <jsonstr> ein gültiges JSON Object welches <keystr> als key enthält. +
Folgendes Beispiel würde 'true' zurückliefern: +
[source,winst]
----
jsonAsObjectHasKey('{"productVersion" : "4.4.1","packageVersion" : "2","productId" : "jedit"}','productId')
----

`jsonAsArrayCountElements(`<jsonstr>`) : intstr`  //since 4.11.6: [W/L] +
Wenn <jsonstr> ein gültiges JSON Array enthält ist der Rückgabewert ein String mit der Zahl der Elemente des Arrays. +
Im Fehlerfall = '"0"'

`jsonAsObjectCountElements(`<jsonstr>`) : intstr`  //since 4.11.6: [W/L] +
Wenn <jsonstr> ein gültiges JSON Object enthält ist der Rückgabewert ein String mit der Zahl der Elemente des Objects. +
Im Fehlerfall = '"0"'


`jsonAsArrayGetElementByIndex(`<jsonstr>, <indexstr>`) : jsonstring`  //since 4.11.6: [W/L] +
Liefert vom JSON Array <jsonstr> das Element mit dem Index <indexstr> +
Der Index beginnt bei 0. +
Im Fehlerfall = '""'

`jsonAsObjectGetValueByKey(`<jsonstr>, <keystr>`) : valuestring`  //since 4.11.6: [W/L] +
Liefert vom JSON Object <jsonstr> den Wert des Key <keystr> +
Im Fehlerfall = '""'


`jsonAsObjectSetValueByKey(`<jsonstr>, <keystr>,<valuestring>`) : jsonstring`  //since 4.11.6: [W/L] +
Liefert einen String mit dem in <jsonstr> übergebenen JSON Object bei dem für den Key <keystr>
 der Wert <valuestring> gesetzt ist. Ist der Key nicht vorhanden, so wird er erzeugt. +
Wenn <valuestring> als Stringwert erzeugt werden soll (also in doppelten Anführungszeichen),
dann verwenden Sie besser die folgende Funktion: `jsonAsObjectSetStringtypeValueByKey`. +
Im Fehlerfall = '""'

`jsonAsObjectSetStringtypeValueByKey(`<jsonstr>, <keystr>,<valuestring>`) : jsonstring`  //since 4.11.6: [W/L] +
Liefert einen String mit dem in <jsonstr> übergebenen JSON Object bei dem für den Key <keystr>
der Wert <valuestring> als String (also in doppelten Anführungszeichen) gesetzt ist. 
Ist der Key nicht vorhanden, so wird er erzeugt. +
Wenn <valuestring> nicht als Stringwert erzeugt werden soll ,
dann verwenden Sie besser die vorherige Funktion: `jsonAsObjectSetValueByKey`. +
Im Fehlerfall = '""'


`jsonAsArrayPutObjectByIndex(`<jsonstr>, <indexstr>, <objectstr>`) : jsonstring`  //since 4.11.6: [W/L] +
Liefert einen String mit dem in <jsonstr> übergebenen JSON Array bei dem am Index <indexstr>
das Object <objectstr> gesetzt ist. +
Im Fehlerfall = '""'


`jsonAsArrayToStringList(`<jsonstr>`) : stringlist`  //since 4.11.6: [W/L] +
Liefert einen String mit dem in <jsonstr> übergebenen JSON Array als Stringliste mit einem Arrayelement pro Zeile.

`jsonStringListToJsonArray(`<strlist>`) : jsonstr`  //since 4.11.6: [W/L] +
Liefert einen String mit einem JSON Array der die Zeilen der Stringliste <strlist>
als Elemente enthält.

`jsonAsObjectGetKeyList(`<jsonstr>`) : stringlist`  //since 4.11.6: [W/L] +
Liefert eine Stringliste mit den Keys der im JSON Object <jsonstr> vorhandnen Keys.

Example +
Read productOnClient objects from file, change the clientId to the actual machine
and store the data to the opsi-server.
[source,winst]
----
[Actions]
requiredWinstVersion >= "4.11.6"

DefVar $ProductId$  
DefVar $poc_file$
DefVar $objectStr$
DefVar $ArrayStr$

DefStringlist $pocList$

set $poc_file$ = "c:\tmp\product_on_client.json"

Message "Restore productOnClient from file ..."
comment " get Restore data from file ..."
Set $ArrayStr$ = strLoadTextFile($poc_file$)
if not(jsonIsValid($ArrayStr$))
	LogError "got no valid json from file"
	isFatalError
endif
if not(jsonIsArray($ArrayStr$))
	LogError "got no json Array from file"
	isFatalError
endif

comment "get list from array"
set $pocList$ = jsonAsArrayToStringList($ArrayStr$)
comment "loop over list"
for %pocindex% = "0" to calculate(count($pocList$)+"-1") do sub_set_clientid_in_poclist
comment "convert modified list to json array"
set $ArrayStr$ = jsonStringListToJsonArray($pocList$)
set $ArrayStr$ = unquote2($ArrayStr$,"[]")
comment "write back"
opsiServiceCall_updatePOC

[sub_set_clientid_in_poclist]
set $objectStr$ = takeString("%pocindex%", $poclist$)
set $objectStr$ = jsonAsObjectSetStringtypeValueByKey(($objectStr$, "clientId","%opsiserviceUser%")
set $poclist$ = setStringInListAtIndex($objectStr$,$poclist$,"%pocindex%")

[opsiServiceCall_updatePOC]
"method": "productOnClient_updateObjects"
"params": [
					'$ArrayStr$',
					]
----

[[opsi-winst-rc-process]]
=== Prozess und Script Funktionen [W/L]

`waitForPackageLock(`<seconds timeout string>,<bool should we kill>`) : bool` //since 4.11.6.1 [L] +
Liefert 'true' zurück wenn das Linux Packagesystem nicht gesperrt ist. +
Ist es gesperrt,
so wird <seconds timeout string> Sekunden auf die Freigabe gewartet. +
Ist der Timeout erreicht,
so wird der Prozess welcher den Lock erzeugt hat abgeschossen wenn <bool should we kill> gleich 'true' ist.
Dieses Vorgehen ist aber nicht empfohlen.

`processIsRunning(`<process name>`) : boolean`  //since 4.11.6.1  [W/L] +
Liefert 'true' wenn der Prozess <process name> in der aktuellen Prozessliste ist.

Es gibt drei Varianten des `shellCall` Befehls:


* `shellCall (`<command string>`) : stringlist (output)`
* `shellCall (`<command string>`) : noresult`
* `shellCall (`<command string>`) : string (exitcode)`

Alle drei führen <command string> in der standard shell (cmd.exe / bash) aus.
Die Funktionen unterscheiden sich aber bezüglich des Rückgabewertes

* `shellCall (`<command string>`) : stringlist (output)` //since 4.11.4.2 [W/L] +
Liefert den output von <command string> als Stringliste.
[source,winst]
----
set $list$= shellCall('net start')
----
Ist eine Abkürzung für den Ausdruck:
[source,winst]
----
set $list$ = getOutStreamFromSection ('DosInAnIcon_netstart winst /sysnative')

[DosInAnIcon_netstart]
net start
----

* `shellCall (`<command string>`) : noresult` //since 4.11.6.1 [W/L] +
Liefert keinen output.
[source,winst]
----
shellCall('net start')
----
Ist eine Abkürzung für den Ausdruck:
[source,winst]
----
DosInAnIcon_netstart winst /sysnative

[DosInAnIcon_netstart]
net start
----


* `shellCall (`<command string>`) : string (exitcode)` //since 4.11.6.1 [W/L] +
Liefert den Exitcode von <command string> als String.
[source,winst]
----
set $exitcode$ = shellCall('net start')
----
Ist eine Abkürzung für den Ausdruck:
[source,winst]
----
DosInAnIcon_netstart winst /sysnative
set $exitcode$ = getLastExitcode

[DosInAnIcon_netstart]
net start
----

* `startProcess(`<string>`) : string (exitcode)` //since 4.11.6.1 [W/L] +
Startet das Programm <string> als Prozess und liefert den Exitcode zurück. +
[source,winst]
----
set $exitcode$ = startProcess('setup.exe /S')
----
Ist eine Abkürzung für den Ausdruck:
[source,winst]
----
Winbatch_setup
set $exitcode$ = getLastExitcode

[Winbatch_setup]
setup.exe /S
----
Tatsächlich basiert `startProcess` intern auf den selben Routinen wie `winbatch` und verarbeitet daher auch die selben Modifier:

* `/LetThemGo` +
Verschiebt den aufgerufenen Prozess in den Hintergrund und wartet *nicht* auf dessen Beendigung;
d.h. das sofort die nächste Zeile der WinBatch-Sektion bzw. die nächste Zeile des übergeordneten Programms abgearbeitet werden.

* `/TimeOutSeconds` <seconds> +
Bricht das Warten auf das Processende oder eine Wartebedingung (`/WaitForProcessEnding`) nach Ablauf von <seconds> ab, auch wenn das Prozessende oder die Wartebedingung noch nicht erfüllt ist. +
Der Prozess auf dessen Ende gewartet werden sollte wird nicht gestopt. +
Kann seit Version 4.11.3 auch alleine (z.B. ohne `/WaitForProcessEnding`) verwendet werden, aber nicht zusammen mit `/WaitSeconds`. +
Seit 4.11.4.6 wird der Zeitablauf bis zum Timeout über den Fortschrittsbalken angegeben.

* `/WaitSeconds` [number of seconds] +
Die Parametrisierung /WaitSeconds [AnzahlSekunden] modifiziert das Verhalten dahingehend, dass '{opsi-winst}/opsi-script' jeweils erst nach [AnzahlSekunden] die Skriptbearbeitung fortsetzt. Die angegebene Zeit stoppt '{opsi-winst}/opsi-script' auf jeden Fall. In der Default-Einstellung wird zusätzlich auf das Ende der angestoßenen Prozesse gewartet. Ist letzteres nicht gewünscht, so kann der Parameter mit dem Parameter /LetThemGo kombiniert werden.
 
* `/WaitForProcessEnding` <program name> +
Wartet darauf, das sich der Prozess mit dem Namen <program name> beendet. +
Kann und sollte mit `/TimeOutSeconds` kombiniert werden.

*  `/32Bit` //seit 4.11.3.5  [W] +
Das ist der Default. Die in der Sektion angegebene Pfade werden als 32 Bit Pfade interpretiert. +
Beispiel: `c:\windows\system32\regedit.exe` ruft (auch auf einem 64bit System) die 32 Bit 'regedit.exe' auf.

*  `/64Bit` //seit 4.11.3.5  [W] +
Die in der Sektion angegebene Pfade werden als 64 Bit Pfade interpretiert. +
Beispiel: `c:\windows\system32\regedit.exe` ruft (auf einem 64bit System) die 64 Bit 'regedit.exe' auf.

*  `/SysNative` //seit 4.11.3.5  [W] +
Die in der Sektion angegebene Pfade werden gemäß der OS Architektur interpretiert. +
Beispiel: `c:\windows\system32\regedit.exe` ruft auf einem 64bit System die 64 Bit 'regedit.exe' und auf einem 32bit System die 32 Bit 'regedit.exe'auf.

[[opsi-winst-rc-cryptfunc]]
=== Crypt / Hash related functions [W/L]

`encryptStringBlow(`<keystring>,<datastring>`) : string`  //since 4.11.6 [W/L] +
Verschlüsselt <datastring> mit dem Key <keystring> unter Verwendung von Blowfish und liefert den verschlüsselten Wert zurück.

`decryptStringBlow(`<keystring>,<datastring>`) : string`  //since 4.11.6 [W/L] +
Entschlüsselt <datastring> mit dem Key <keystring> unter Verwendung von Blowfish und liefert den entschlüsselten Wert zurück.

`md5sumFromFile(`<path to file>`) : string`  //since 4.11.6 [W/L] +
Liefert die md5summe der unter <path to file> gefundenen Datei zurück. +
Im Fehlerfall ist der Rückgabewert ein Leerstring.

[[opsi-winst-rc-timefunc]]
=== time / date related functions

`timeStampAsFloatStr : string` (Floating Number - format: 'days.decimal days') //since 4.11.6 [W/L] +
Liefert einen aktuellen Timestamp als Fließkommazahlstring. Dabei ist Zahl vor dem Komma die Tage
seit dem 30. Dezember 1899. Nach dem Komma kommt die Zeit in Bruchteilen des Tages. +
Just for Fun: Warum nicht der 31. Dezember 1899: ? +
siehe http://www.delphibasics.co.uk/RTL.asp?Name=TDateTime



[[opsi-winst-rc-misc]]
=== Misc news

* `getMSVersionMap` +
* Hat einen neuen Key Eintrag: `ReleaseID`. Der dazugehörige Wert gibt die Release von 'Windows 10' an wie z.B. '1511'. +
Leerstring wenn nicht vorhanden. +
Der Wert kommt aus der Registry: "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion" "ReleaseID"
* Hat einen neuen Key Eintrag: `prodInfoText`.Der dazugehörige Wert gibt die verwendeten Windows Edition als String an wie z.B. 'PRODUCT_PROFESSIONAL'.
* Hat einen neuen Key Eintrag: `prodInfoNumber`.Der dazugehörige Wert gibt die verwendeten Windows Edition als Zahl an wie z.B. '48'.

[cols="3,3,15"]
|==========================
| DecNum | HexNum | Text 
|  00 | 00 | An unknown product
|  01 | 01 | Ultimate Edition"
|  02 | 02 | Home Basic Edition
|  03 | 03 | Home Premium Edition
|  04 | 04 | Enterprise Edition
|  05 | 05 | Home Basic Edition
|  06 | 06 | Business Edition
|  07 | 07 | Server Standard Edition (full installation)
|  08 | 08 | Server Datacenter Edition (full installation)
|  09 | 09 | Small Business Server
|  10 | 0A | Server Enterprise Edition (full installation)
|  11 | 0B | Starter Edition
|  12 | 0C | Server Datacenter Edition (core installation)
|  13 | 0D | Server Standard Edition (core installation)
|  14 | 0E | Server Enterprise Edition (core installation)
|  15 | 0F | Server Enterprise Edition for Itanium-based Systems
|  16 | 10 | Business Edition
|  17 | 11 | Web Server Edition (full installation)
|  18 | 12 | Cluster Server Edition
|  19 | 13 | Home Server Edition
|  20 | 14 | Storage Server Express Edition
|  21 | 15 | Storage Server Standard Edition
|  22 | 16 | Storage Server Workgroup Edition
|  23 | 17 | Storage Server Enterprise Edition
|  24 | 18 | Server for Small Business Edition
|  25 | 19 | Small Business Server Premium Edition
|  26 | 1A | PRODUCT_HOME_PREMIUM_N
|  27 | 1B | PRODUCT_ENTERPRISE_N
|  28 | 1C | PRODUCT_ULTIMATE_N
|  29 | 1D | PRODUCT_WEB_SERVER_CORE
|  30 | 1E | Windows Essential Business Server Management Server
|  31 | 1F | Windows Essential Business Server Security Server
|  32 | 20 | Windows Essential Business Server Messaging Server
|  33 | 21 | Server Foundation
|  34 | 22 | PRODUCT_HOME_PREMIUM_SERVER
|  35 | 23 | PRODUCT_SERVER_FOR_SMALLBUSINESS_V
|  36 | 24 | Server Standard Edition without Hyper-V (full installation)
|  37 | 25 | Server Datacenter Edition without Hyper-V (full installation)
|  38 | 26 | Server Enterprise Edition without Hyper-V (full installation)
|  39 | 27 | Server Datacenter Edition without Hyper-V (core installation)
|  40 | 28 | Server Standard Edition without Hyper-V (core installation)
|  41 | 29 | Server Enterprise Edition without Hyper-V (core installation)
|  48 | 30 | PRODUCT_PROFESSIONAL
|  49 | 31 | PRODUCT_PROFESSIONAL_N
|  50 | 32 | PRODUCT_SB_SOLUTION_SERVER
|  51 | 33 | PRODUCT_SERVER_FOR_SB_SOLUTIONS
|  52 | 34 | PRODUCT_STANDARD_SERVER_SOLUTIONS
|  53 | 35 | PRODUCT_STANDARD_SERVER_SOLUTIONS_CORE
|  54 | 36 | PRODUCT_SB_SOLUTION_SERVER_EM
|  55 | 37 | PRODUCT_SERVER_FOR_SB_SOLUTIONS_EM
|  56 | 38 | PRODUCT_SOLUTION_EMBEDDEDSERVER
|  57 | 39 | PRODUCT_SOLUTION_EMBEDDEDSERVER_CORE
|  59 | 3B | PRODUCT_ESSENTIALBUSINESS_SERVER_MGMT
|  60 | 3C | PRODUCT_ESSENTIALBUSINESS_SERVER_ADDL
|  61 | 3D | PRODUCT_ESSENTIALBUSINESS_SERVER_MGMTSVC
|  62 | 3E | PRODUCT_ESSENTIALBUSINESS_SERVER_ADDLSVC
|  63 | 3F | PRODUCT_SMALLBUSINESS_SERVER_PREMIUM_CORE
|  64 | 40 | PRODUCT_CLUSTER_SERVER_V
|  65 | 41 | PRODUCT_EMBEDDED
|  66 | 42 | PRODUCT_STARTER_E
|  67 | 43 | PRODUCT_HOME_BASIC_E
|  68 | 44 | PRODUCT_HOME_PREMIUM_E
|  69 | 45 | PRODUCT_PROFESSIONAL_E
|  70 | 46 | PRODUCT_ENTERPRISE_E
|  71 | 47 | PRODUCT_ULTIMATE_E
|  72 | 48 | PRODUCT_ENTERPRISE_EVALUATION
|  84 | 54 | PRODUCT_ENTERPRISE_N_EVALUATION
|  98 | 62 | PRODUCT_CORE_N
|  99 | 63 | PRODUCT_CORE_COUNTRYSPECIFIC
| 100 | 64 | PRODUCT_CORE_SINGLELANGUAGE
| 101 | 65 | PRODUCT_CORE
| 121 | 79 | PRODUCT_EDUCATION
| 122 | 7A | PRODUCT_EDUCATION_N
| 125 | 7D | Windows Enterprise 2015 LTSB
| 126 | 7E | Windows Enterprise 2015 LTSB N
| 129 | 81 | Windows Enterprise 2015 LTSB Evaluation
| 130 | 82 | Windows Enterprise 2015 LTSB N Evaluation   
|==========================


* `getLinuxVersionMap` +
Die Funktion `getLinuxVersionMap` liefert als weiteren Key 'SubRelease'.
Dem Key 'SubRelease' wird auf SLES Systemen der Patchlevelstand als Wert zugewiesen.
Also bei SLES11SP4: 'SubRelease=4'.

* `ShellBatch /showoutput` +
Shows the output of the called command in a seperate window. +
Now also available at Linux. +
Now moves the main Window to top/right and the ouptup window to left/down.

* `strLoadTextfile`  and `strLoadTextFileWithEncoding` +
Reads the firs line of the given file. Now without newline chars.

* repaired product ordering for `product_sort_algorithm 1` 

[[opsi-407-releasenotes-python-opsi]]
== python-opsi 4.0.7.

###################

[[opsi-407-releasenotes-netboot-windows]]
== opsi Support Matrix Windows Clients

Im folgenden finden Sie eine Übersicht auf welchen Windows Plattformen opsi
als Client läuft.

include::../common/opsi_manual_supportmatrix-winclient.asciidoc[]


[[opsi-407-releasenotes-installation]]
== Hinweise zur Installation

Wir empfehlen vor der Installation des Updates eine Sicherung Ihres Backends +
mittels {opsi-backup} durchzuführen:
[source,prompt]
----
opsi-backup create
----

Die Produkte welche im Rahmen dieses Releases veröffentlicht werden, +
sind in etlichen Teilen voneinander abhängig. +
Sie sollten daher nicht versuchen, nur Teile zu installieren.

Wir empfehlen zuerst den Server und danach die opsi-Produkte zu aktualisieren.

Wir empfehlen nach dem Update die Ausführung von ``opsi-setup --set-rights``, +
um sicher zu stellen, dass die Zugriffsberechtigungen korrekt gesetzt sind. +
Die Ausführung des Befehls kann mehrere Minuten in Anspruch nehmen.


[[opsi-407-releasenotes-installation-opsipackages]]
=== Hinweise zum Aktualisieren von opsi-Paketen

////
Bitte nachstehenden Block bei release nicht löschen sondern auskommentieren
////


Zur Installation der testing Serverpakete müssen Sie das opsi Repository ändern von `opsi40` auf `opsi40-testing`. +
Zum Beispiel bei Ubuntu 14.04: +
`deb http://download.opensuse.org/repositories/home:/uibmz:/opsi:/opsi40/xUbuntu_14.04 ./` +
ersetzen durch: +
`deb http://download.opensuse.org/repositories/home:/uibmz:/opsi:/opsi40-testing/xUbuntu_14.04 ./`


Danach müssen Sie Ihre Pakete updaten. +


Zum Beispiel bei Ubuntu / Debian:
[source,prompt]
----
aptitude update
aptitude full-upgrade
----

Zur Installation der opsi Produkte:

fügen Sie in die Datei +
`/etc/opsi/opsi-product-updater.conf` +
folgende Sektion ein:


[source,prompt]
----
[repository_opsi_406_testing]
baseUrl = http://download.uib.de
dirs = opsi4.0/testing/opsi-v406/products/localboot, opsi4.0/testing/opsi-v406/products/netboot
active = true
username =
password =
autoInstall = false
autoUpdate = true
autoSetup = false
onlyDownload = false
----

Hängen Sie je nach Bedarf an die `dirs` Zeile noch an:

* `, opsi4.0/testing/opsi-v406/opsi-linux`

* `, opsi4.0/testing/opsi-v406/opsi-local-image`

////
[repository_opsi_406_experimental]
baseUrl = http://download.uib.de
dirs = opsi4.0/experimental/opsi-v406/products/localboot, opsi4.0/experimental/opsi-v406/products/netboot, opsi4.0/experimental/opsi-v406/products/opsi-linux
active = true
username =
password =
autoInstall = false
autoUpdate = true
autoSetup = false
onlyDownload = false
----
////

Setzen Sie in der Sektion `[repository_uib]` folgende Zeile:
[source,prompt]
----
active = false
----
Danach rufen sie den opsi-product-updater auf.


Um alle Pakete zu installieren:
[source,prompt]
----
opsi-product-updater -i -vv
----

Um nur Updates zu installieren:
[source,prompt]
----
opsi-product-updater -vv
----

////
Bitte vorstehenden Block bei release nicht löschen sondern auskommentieren
////

////
Die Installation erfordert keine besonderen Arbeiten. Sie erfolgt im Rahmen der normalen Updates ihres Servers und der opsi-Produkte.

Sie sollten dabei zuerst den Server updaten. Benutzen Sie dazu die Befehle entsprechend Ihrer Linux-Distribution. +

Wir empfehlen in der Datei `/etc/opsi/opsi-product-updater.conf`
in der Sektion `[repository_uib]` den Eintrag `excludes` wie folgt zu modifizieren, damit Sie auch Produkte bekommen welche mit `win*` anfangen::
[source,prompt]
----
excludes =
----

Wenn Sie die  opsi-linux Produkte benötigen so hängen Sie an den `dirs` Eintrag: +
den Pfad `opsi4.0/products/opsi-linux` an.

Wenn Sie die  opsi-local-image Produkte benötigen so hängen Sie an den  `dirs` Eintrag den Pfad `opsi4.0/products/opsi-local-image` an.

Danach die opsi-Produkte. Dies erledigt der opsi-product-updater:

[source,prompt]
----
opsi-product-updater -i -vv
----

Um nur Updates zu installieren:
[source,prompt]
----
opsi-product-updater -vv
----

Sollten Sie eine Multidepot Umgebung haben, so machen Sie zunächst das Upgrade auf Ihrem config-server, bevor Sie die Depots upgraden.

Falls Sie Produkt-IDs mit einer Länge von mehr als 32 Zeichen verwenden wollen und das MySQL-Backend einsetzen, so führen Sie bitte ein Update der Tabellen-Definition auf Ihrem Config-Server mittels opsi-setup durch:


[source,prompt]
----
opsi-setup --update-mysql
----
////

[[opsi-407-releasenotes-misc]]
== Sonstiges

[[opsi-407-releasenotes-misc-changelogs]]
=== Changelogs:


[[opsi-407-releasenotes-misc-changelogs-opsi-configed]]
==== Changelog opsi-configed

#############

[[opsi-407-releasenotes-misc-changelogs-opsi-client-agent]]
==== Changelog opsi-client-agent

###############

[[opsi-407-releasenotes-misc-changelogs-config-win10]]
###############

[[opsi-407-releasenotes-misc-changelogs-opsi-script]]
==== Changelog opsi-script / opsi-winst
###############


[[opsi-407-releasenotes-misc-changelogs-windows-netboot]]
==== Changelog windows netboot products
###############

[[opsi-407-releasenotes-misc-changelogs-linux-netboot]]
==== Changelog linux netboot products

###############

.centos70

###############


.debian7

###############


.debian8

###############


.opensuse13-2
###############

.sles12
###############

.redhat70
###############

.Ubuntu14-04
###############

[[opsi-407-releasenotes-misc-changelogs-linux-localboot]]
==== Changelog linux localboot products
l-system-update 4.0.7.1-1 stable urgency=low

  * waitForPackageLock
  * new property apt_get_autoremove to remove old auto installed kernels from debian familiy systems (default=false)

-- d.oertel <d.oertel@uib.de> Wed, 11 May 2016 15:00:00 + 0100


[[opsi-407-releasenotes-misc-changelogs-opsi-local-image]]
==== Changelog opsi-local-image

###############


[[opsi-407-releasenotes-misc-changelogs-misc-netboot]]
==== Changelog misc netboot products

###############

[[opsi-407-releasenotes-misc-changelogs-python-opsi]]
==== Changelog python-opsi

###############

[[opsi-407-releasenotes-misc-changelogs-opsiconfd]]
==== Changelog opsiconfd

opsiconfd (4.0.6.14-1) stable; urgency=medium

  * Small improvements during statistics collections and display.
  * opsiconfd will log statistics at shutdown with level notice.

 -- Niko Wenselowski <n.wenselowski@uib.de>  Fri, 01 Apr 2016 11:00:03 +0200

###############

[[opsi-407-releasenotes-misc-changelogs-opsi-utils]]
==== Changelog opsi-utils

opsi-utils (4.0.7.1-1) testing; urgency=medium

  * opsi-convert: If you are logging into a file the loglevel will be DEBUG.
  * opsi-product-updater: The notification mail will now have the DATE field
    in the header. The field is formatted as specified in RFC 5322.
  * opsi-package-manager: Setting -v now sets an implicit -q to show the
    output. If using '-p ask' no -q will be set to be able to still
    select the wanted properties.

 -- Niko Wenselowski <n.wenselowski@uib.de>  Mon, 23 May 2016 14:31:10 +0200

opsi-utils (4.0.6.14-1) testing; urgency=medium

  * opsi-makeproductfile: Avoid reference to undefined 'incremental'.

 -- Niko Wenselowski <n.wenselowski@uib.de>  Fri, 29 Apr 2016 12:21:49 +0200

opsi-utils (4.0.6.13-1) testing; urgency=medium

  * opsi-makeproductfile: now using argparse internally
  * opsi-admin got received a welcome message.
  * Fixed typo in German translation.
  * opsi-convert: show custom application name if used against webinterface
    of another server to be able to easily spot the corresponding requests.
  * opsi-product-updater: Attempts to close open connections now more reliable.
  * opsi-makeproductfile: use argparse instead of getopt.
  * opsi-product-updater: running with -p <productId> now implies -i.

 -- Niko Wenselowski <n.wenselowski@uib.de>  Thu, 28 Apr 2016 12:29:16 +0200

opsi-utils (4.0.6.12-1) experimental; urgency=medium

  * opsi-package-manager: return error when trying to remove non installed
    package
  * opsi-package-manager: logs into package.log with LogLevel 4
  * Added logrotate config for /var/log/opsi/opsi-package-manager.log

 -- Mathias Radtke <m.radtke@uib.de>  Tue, 12 Apr 2016 15:56:31 +0200

opsi-utils (4.0.6.11-1) experimental; urgency=medium

  * opsi-backup: Warn during restore if no backends are given.
  * Various small changes for easier maintenance.
  * opsi-package-manager: only query for depot information if required.

 -- Niko Wenselowski <n.wenselowski@uib.de>  Mon, 04 Apr 2016 17:00:33 +0200

###############

####################

[[opsi-407-releasenotes-misc-changelogs-opsi-linux-bootimage]]
==== Changelog opsi-linux-bootimage

###############

[[opsi-407-releasenotes-misc-changelogs-opsi-depotserver]]
==== Changelog opsi-depotserver

###############

####################

[[opsi-407-releasenotes-misc-changelogs-opsi-atftp]]
==== Changelog opsi-atftp


####################

[[opsi-407-releasenotes-misc-changelogs-opsipxeconfd]]
==== Changelog opsipxeconfd

opsipxeconfd (4.0.7.1-1) stable; urgency=medium

  * Refactored internal code for locking.

 -- Niko Wenselowski <n.wenselowski@uib.de>  Thu, 19 May 2016 12:39:40 +0200

###############

[[opsi-407-releasenotes-misc-changelogs-opsi4ucs]]
==== Changelog opsi4ucs


####################

[[opsi-407-releasenotes-misc-changelogs-opsi-swaudit]]
==== Changelog opsi-swaudit
####################

 [[opsi-407-releasenotes-misc-changelogs-opsi-template]]
==== Changelog opsi-template
####################

