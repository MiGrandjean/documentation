////
; Copyright (c) uib gmbh (www.uib.de)
; This documentation is owned by uib
; Until we found a better license:
; All rights reserved.
; credits: http://www.opsi.org/credits/
////

:Author:    uib gmbh
:Email:     info@uib.de
:Date:      08.06.2011
:Revision:  4.0.1
:toclevels: 6


include::../common/opsi_terms.asciidoc[]

[[opsi-manual-security]]
== Security

[[opsi-manual-security-introduction]]
=== Einführung

Opsi ist ein mächtiges Werkzeug zur zentralen Administration vieler Clients. Damit steht der '{opsi-server}' natürlich auch im besonderen Fokus der Sicherheitsbetrachtung. Wer den '{opsi-server}' kontrolliert, kontrolliert auch die Clients. Wer einem Client davon überzeugen kann er sei der richtige opsi-server, der kontrolliert den Client.

Wieviel Energie und Geld Sie in die Absicherung der opsi Infrastruktur stecken sollten hängt von Ihren Sicherheitsbedürfnis und vom Einsatzszenario ab. Ein '{opsi-server}' in der 'cloud' ist z.B. gefährdeter als einer in einem abgeschlossenen Inselnetz.

Im folgenden haben wir die wichtigsten uns bekannten Maßnahmen und Probleme zusammengetragen.

Wir danken an dieser Stelle allen Kunden und Anwendern die uns auf Probleme hingewiesen und damit zur Sicherheit beigetragen haben. Wir bitten Sie darum Probleme die Ihnen auffallen zunächst an info@uib.de zu melden bevor das Problem öffentlich gemacht wird.

[[opsi-manual-security-staytuned]]
=== Informiert bleiben
Informationen über Security relevante opsi Updates werden veröffentlicht in:

News Bereich des opsi forums: +
https://forum.opsi.org/viewforum.php?f=1

In der opsi Mailingliste: +
https://lists.sourceforge.net/lists/listinfo/opsi-announce_de

[[opsi-manual-security-server]]
=== Allgemeine Serversicherheit

Die opsi Software auf einem Server kann nicht sicherer als der Server selbst sein. Daher ist es wichtig, dass Sie Ihren '{opsi-server}' regelmäßig aktualisieren, d.h. die vom Distributor angebotenen Security Updates auch einspielen. Dis gilt sowohl für den '{opsi-configserver}' wie auch für die '{opsi-depotserver}'.

Sie können auf dem Server Programme installieren, welche Sie per eMail informieren wenn es Paketupdates gibt.

Debian, Ubuntu:: apticron

RHEL, CentOS::  yum-updatesd

Darüber hinaus gibt es viele Möglichkeiten Linuxserver weiter abzusichern. Dies ist aber nicht das Thema dieses Handbuchs. Gerne beraten wir Sie hierzu im Rahmen eines Support- und Pflegevertrages.

[[opsi-manual-security-depotshare]]
=== Read Only depotshare
Der von den Clients verwendete depot_share sollte read-only sein.
Dis ist wichtig um zu unterbeinden, dass ein Vireninfizierter Rechner evtl. während der Installation über opsi den share infiziert und dann der Virus über opsi weiterverbreitet wird.

Seit opsi 4.0.1 gibt es den share 'opsi_depot' welcher read-only ist. Damit dieser auch verwendet führen Sie dazu aus:

[source,prompt]
----
opsi-setup --auto-configure-samba
----

Dieser Befehl erzeugt einen neuen share 'opsi_depot', welcher read-only ist. Dieser share verweist auf das Verzeichnis `/var/lib/opsi/depot`. Je nach Distribution des Servers wird von diesem Verzeichnis aus ein Link nach `/opt/pcbin/install` gelegt. 

Damit der neue share auch verwendet wird, müssen Sie auf dem '{opsi-configserver}' zusätzlich folgendes Script ausführen:

[source,prompt]
----
for depot in $(opsi-admin -dS method host_getIdents unicode "{\"type\":\"OpsiDepotserver\"}"); do
   echo "Depot: $depot"
   depot_remote=$(opsi-admin -dS method host_getObjects [] "{\"id\":\"$depot\"}" | grep "depotRemoteUrl=" | cut -d "=" -f2)
   depot_local=$(opsi-admin -dS method host_getObjects [] "{\"id\":\"$depot\"}" | grep "depotLocalUrl=" | cut -d "=" -f2)
   depot_remote_new=$(echo $depot_remote | sed "s|/opt_pcbin/install|/opsi_depot|")
   depot_local_new=$(echo $depot_local | sed "s|/opt/pcbin/install|/var/lib/opsi/depot|")
   servertype=$(opsi-admin -dS method host_getObjects [] "{\"id\":\"$depot\"}" | grep "type=" | cut -d "=" -f2)
   opsi-admin -d method host_updateObjects "{\"type\":\"$servertype\",\"id\":\"$depot\",\"depotLocalUrl\":\"$depot_local_new\",\"depotRemoteUrl\":\"$depot_remote_new\"}"
done
----

[[opsi-manual-security-client2server]]
=== Authentifizierung des Clients beim Server
Der Client authentifiziert sich beim Server mit seinem FQDN sowie dem opsi-host-key.
Clientseitig liegt dieser key in der Datei `%programfiles%\opsi.org\opsi-client-agent\opsiclientd\opsiclientd.conf` und ist nur mit administrativen Rechten lesbar. Serverseitig liegen die opsi-host-keys im jeweiligen Backend (z.B. unter `/etc/opsi/pckeys`).

Zusätzlich zu dieser Authentifizierung kann der opsiconfd angewiesen werden, zu überprüfen ob die IP-Nummer unter der sich der Client meldet auch zu dem angegebenen Clientnamen passt. Um dieses Verhalten zu aktivieren setzen sie in der `/etc/opsi/opsiconfd.conf` folgenden Parameter:

[source,configfile]
----
verify ip = yes
----
und reloaden den opsiconfd

[source,prompt]
----
/etc/init.d/opsiconfd reload
----
CAUTION: Verwenden Sie diese Feature nur wenn Sie eine vollstängig funktionierende Namensauflösung (vorwärts wie Rückwärts) für Ihre Clients haben.

[[opsi-manual-security-server2client]]
=== Authentifizierung des Servers beim Client

Seit opsi 4.0.1 gibt es verschieden Möglichkeiten den client prüfen zulassen ob der Server der Kontaktiert wird der richtige ist.

==== Variante 1: verify_server_cert

Bei der ersten Kontaktaufnahme zu einem opsi-server wird dessen SSL-Zertifikat akzeptiert und unter `C:\opsi.org\opsiclientd\server-certs` abgespeichert.
Bei der nächsten Kontaktaufnahme wird der 'public key' des agespeicherten Zertifikats ermittelt und mit diesem ein Zufallsstring sowie die eigenen Zugangsdaten verschlüsselt. Diese Daten werden an den Server übergeben. Der Server entschlüsselt mit dem 'public key' seines SSL-Zertifikats diese Daten und sendet zum Beweis der erfolgreichen entschlüsselung den Zufallsstring an den Client zurück. Nach erfolgreicher Prüfung des zurückgegbenen Zufallsstrings akzeptiert der Client des Server als für ihn gültigen 'opsi-server'.

Auf diese Weise kann verhindert werden, dass per Angriff auf das DNS opsi-clients falsche Server als 'opsi-server' akzeptieren.
Diese Methode minimiert das Risiko, das bei einem Serverumzug Clients den neuen Server nicht mehr akzeptieren, da sich die Serverzertifikate von einem auf einen anderen Server übertragen lassen.

Die Schwäche dieser Methode ist die Möglichkeit eines 'Man-in-the-middle' Angriffs, da nicht aus oben genannten Gründen genau nicht geprüft wird ob das akzeptierte Zertifikat für genau diesen Server ausgestellt ist.

Die Prüfung betrifft die Kommunikation mit dem 'opsi-configserver'. Ist als +clientconfig.depot.protocol+ +webdav+ angegeben so wird auch der 'opsi-depotserver' entsprechend geprüft. <<opsi-manual-wansupport-depot-protocol>>

Um diese Methode zu aktivieren, muss in der `opsiclientd.conf` in der Sektion '[global]' folgender Parameter gesetzt werden:
[source,configfile]
----
verify_server_cert = true
----
Dies machen Sie serverweit am besten mit folgenden Befehl:

[source,prompt]
----
opsi-admin -d method config_createBool opsiclientd.global.verify_server_cert "verify_server_cert" true
----

==== Variante 2: verify_server_cert_by_ca

Dieser Mechanismus funktioniert analog zu der Art und Weise wie Browser die SSL-Zertifikate von Webservern klaglos akzeptieren wenn diese auf genau den FQDN ausgestellt sind unter dem der Server angesprochen wird und gleichzeitig von einer Organisation signiert ist deren Root-CA dem Browser bekannt ist.

Der opsicliend enthält eine nur für diesen Zweck erstellte Root-CA der 'uib gmbh' und akzepiert jedes Zertifikat, das mit dieser Root-CA durch die 'uib gmbh' erstellt und signiert ist und gleichzeitig auf genau den FQDN ausgestellt ist unter dem der Server angesprochen wird. Ist eine der beiden Bedingungen nicht erfüllt, so verweigert der Client die Kommunikation.

Diese Methode ist sicherer als die oben beschriebene, erfordert aber den Erwerb von Zertifikaten von der 'uib gmbh'. Die Bedingungen und Preise zum Erwerb solcher Zertifikate erfahren Sie auf der Preisliste der 'uib gmbh'. http://uib.de/www/service_support/support/index.html
Die Einnahmen aus dem Zertifikatsverkauf fließen in die Pflege der opsi-Security.

Um diese Methode zu aktivieren, muss in der `opsiclientd.conf` in der Sektion '[global]' folgender Parameter gesetzt werden:
[source,configfile]
----
verify_server_cert_by_ca = true
----

Dies machen Sie serverweit am besten mit folgenden Befehl:
[source,prompt]
----
opsi-admin -d method config_createBool opsiclientd.global.verify_server_cert_by_ca "verify_server_cert_by_ca" true
----

[[opsi-manual-security-clientcontrolserver]]
=== Authentifizierung beim controlserver des Client

Der opsiclientd hat eine eigene Webservice Schnittstelle die es erlaubt dem opsiclientd Anweisungen von aussen zu verarbeiten (<<opsi-manual-clientagent-control>>). 

Dazu muss man sich an diesem Webservice authentifizieren.
Dies geschieht entweder mittels des lokalen Administrator-Accounts (ein leeres Passwort ist unzulässig)
oder mittels der '{opsi-host-id}' (FQDN / vollständiger Host-Name inkl. DNS-Domain) als Benutzername und des '{opsi-host-key}s' als Passwort.

[[opsi-manual-security-adminnetwork]]
=== Konfiguration eines Admin-Networks

Die Idee eines Adminnetworks ist es, administrative Zugriffe auf Server nicht aus dem allgemeinen Produktivnetz zu erlauben, sondern nur von einem speziellen eigenständigen Netz zu dem nicht alle Zugang haben.

Zwar müssen alle 'opsi-clients' Zugang zum opsi-webservice haben, diese dürfen aber nur Ihre eigenen Daten ändern. Ein administrativer Zugang zum Webservice setzt die Mitgliedschaft in der Gruppe 'opsiadmin' voraus. 

Über die Option +[global] admin networks+ in der `/etc/opsi/opsiconfd.conf` kann der administrative Zugriff auf den 'opsiconfd' auf Verbindungen von bestimmten Netzwerkadressen eingeschränkt werden. +
Es können mehrere Netzwerkadressen durch Kommas getrennt angegeben werden. +
Nicht-administrative Client-Verbindungen können auch aus anderen Netzwerken erfolgen.

Der default ist:
[source,configfile]
----
admin networks = 0.0.0.0/0
----
und erlaubt Zugriff von allen Netzen.

Eine Konfiguration wie z.B.
[source,configfile]
----
admin networks = 127.0.0.1/32, 10.1.1.0/24
----
würde administrative Zugriffe nur vom Server selbst und aus dem Netz '10.1.1.0' erlauben.

[[opsi-manual-security-pcpatch]]
=== Der user pcpatch

Der user 'pcpatch' dient in opsi 4 ausschließlich dem mounten des depotshares durch den Client (und zur Zeit noch dem schreiben und lesen von Image Dateien durch die Netboot Produkte ntfs-write bzw ntfs-restore). 

Normalerweise fällt das unverschlüsselte Passwort des users pcpatch niemand in die Hande. Wir sind aber auf Möglichkeiten hingewiesen worden wie dies doch möglich ist. Um den Schaden der hierdurch entstehen kann zu minimieren empfehlen wir folgende Maßnahmen.

In der `/etc/samba/smb.conf` in allen Share-Definitionen ausser 'opsi_depot' dem user pcpatch den Zugriff verbieten über den Eintrag:
[source,configfile]
----
invalid users = root pcpatch
----

Alternativ +
In der `/etc/samba/smb.conf` dem user pcpatch auf Leserechte beschränken durch den Eintrag in der [global] Sektion: 

[source,configfile]
----
read list = pcpatch
----

Als weitere Maßnahme sollten Sie das pcpatch Passwort öfters wechseln. Da niemand das pcpatch Passwort wissen muss (ausser opsi) können Sie es z.B. durch den regelmäßigigen Aufruf (z.B. per cronjob) des folgenden Scriptes auf ein zufälliges Passwort setzen.

[source,prompt]
----
#!/bin/bash
# random password generator by typedeaF
# original from
# http://www.osix.net/modules/article/?id=570
# adapted to opsi by uib gmbh

# Sets the maximum size of the password the script will generate
MAXSIZE=8

# Holds valid password characters. I choose alpha-numeric + the shift-number keyboard keys
# I put escape chars on all the non alpha-numeric characters just for precaution
array1=(
q w e r t y u i o p a s d f g h j k l z x c v b n m Q W E R T Y U I O P A S D
F G H J K L Z X C V B N M 1 2 3 4 5 6 7 8 9 0 ! @ # $ % ^ & * ( )
)

# Used in conjunction with modulus to keep random numbers in range of the array size
MODNUM=${#array1[*]}

# Keeps track of the number characters in the password we have generated
pwd_len=0

while [ $pwd_len -lt $MAXSIZE ]
do
  x=$(($RANDOM%500))
  y=0
  while [ $y -lt $x ]
  do
    ((y++))
    index=$(($RANDOM%$MODNUM))
  done
  mypass=${mypass}${array1[$index]}
  ((pwd_len++))
done

#echo "Setting Pcpatch Password to ${mypass}"
opsi-admin -d task setPcpatchPassword ${mypass}

exit 0
----

Wenn Sie die Netboot Produkte ntfs-write-image bzw. ntfs-restore-image nicht verwenden, so können Sie zusätzlich die Anmeldung des users 'pcpatch' am Server unterbinden in dem Sie in der `/etc/passwd` dem user 'pcpatch' die Shell
+/bin/false+ zuweisen.



