////
; Copyright (c) uib gmbh (www.uib.de)
; This documentation is owned by uib
; and published under the german creative commons by-sa license
; see:
; http://creativecommons.org/licenses/by-sa/3.0/de/
; http://creativecommons.org/licenses/by-sa/3.0/de/legalcode
; english:
; http://creativecommons.org/licenses/by-sa/3.0/
; http://creativecommons.org/licenses/by-sa/3.0/legalcode
;
; credits: http://www.opsi.org/credits/
////

:Author:    uib gmbh
:Email:     info@uib.de
:Revision:  1
:toclevels: 6
:toc:
:numbered:
:doctype:   book

opsi Directory Connector
========================

include::../common/manual_copyright.asciidoc[]

[[introduction]]
Einführung
----------

The opsi-AD-connector is a tool to transfer data from an directory service
to an opsi installation.
This avoids the need of maintaining data in two separate systems.

[[requirements]]
Anforderungen
-------------

Das Quell-Verzeichnis muss das LDAP-Protokoll implementieren.

Das Zeil-Opsi-System sollte opsi 4.0.7 oder neuer verwenden.
Ältere Versionen können funktionieren, wurden aber nicht getestet.

Die Maschine, auf welcher der Connector laufen soll, muss über das
Netzwerk Zugriff auf den Directory- und opsi-Server haben.
Es ist möglich alle Komponenten auf der gleichen Maschine zu betreiben,
aber es wird davon ausgegangen, dass jeweils getrennte Maschinen
verwendet werden.

Hardware-Anforderungen
~~~~~~~~~~~~~~~~~~~~~~

Diese Anforderungen richten sich an eine einfache Verwendung in einer kleinen Umgebung mit bis zu 500 Clients.
Diese Anforderungen fallen in großen Umgebungen gegebenenfalls größer aus, weshalb Anpassungen notwendig sein können.

* 256 MB freier Arbeitsspeicher
* Netzwerkverbindungen

Software-Anforderungen
~~~~~~~~~~~~~~~~~~~~~~

Auf der Maschine muss folgendes installiert sein.

* Python 3.4 oder neuer

Die folgenden Module für Python 3:

* ldap3
* requests

Durch die Verwendung standardisierter Protokolle zur Kommunikation werden
keine opsi- oder Verzeichnisdienst-spezifischen Komponenten benötigt.

[[configuration]]
Konfiguration
-------------

Der Connector kann über eine Vielzahl an Einstellungsmöglichkeiten an
verschiedenste Umgebungen angepasst werden.

Die Konfiguration geschieht über eine Konfigurationsdatei im JSON-Format.
Zur Angabe von boolschen Werten verwenden Sie bitte `true` oder `false`.
Text muss mit doppelten Anführungszeichen eingegeben werden, beispielsweise "das ist Text".

Directory-Einstellungen
~~~~~~~~~~~~~~~~~~~~~~~

Diese Einstellungen werden benötigt um eine Verbindung zum Verzeichnisdienst
herzustellen und den Suchbereich auf bestimmte Bereiche und Objekte einzugrenzen.

[source,json]
----
{
    "directory": {
        "address": "ldap://192.168.12.34",
        "user": "DOMAIN\\opsiconnector",
        "password": "insertpasswordhere",
        "search_base": "dc=testcompy,dc=local",
        "search_query_computers": "(objectClass=computer) ",
        "search_query_groups": "(objectClass=organizationalUnit)",
        "connection_options": {
            "start_tls": true
        }
    },
    …
}
----

Unter `address` muss angegeben werden unter welcher Adresse der Server angesprochen wird.
`user` und `password` werden für die Authentifikation an selbigem verwendet.

Über `search_base` wird angegeben ab welchem Punkt nach passenden Element
gesucht wird.
Über `search_query_computers` und `search_query_groups` können Bedingungen für die Suche nach Eintragen konfiguriert werden.

Entweder `search_query_computers` oder `search_query_groups` oder beides
muss konfiguriert sein. Um eine Bedingung zu deaktivieren,
kann der Wert auf `""` gesetzt werden.

Verhaltens-Einstelllungen
~~~~~~~~~~~~~~~~~~~~~~~~~

Die Einstellungen steuern das Verhalten des Conenctors.

[source,json]
----
{
    …
    "behaviour": {
        "write_changes_to_opsi": true,
        "root_dir_in_opsi": "Directory",
        "update_existing_clients": true,
        "prefer_location_from_directory": true
    },
    …
}
----

Wird `write_changes_to_opsi` auf `false` gesetzt werden keine Daten nach opsi geschrieben.
Mit dieser Einstellung ist es möglich die Verbindungseinstellungen zu überprüfen, bevor sie angewendet werden.

Per `root_dir_in_opsi` wird angegeben welche Gruppe in opsi als Wurzelgruppe verwerndet werden soll.
Es muss von Ihnen sichergestellt werden, dass diese Gruppe existiert.

Wird `update_existing_clients` auf `false` gesetzt, so werden bereits in opsi existierende Clients nicht verändert.
Wird dieser Wert auf `true` gesetzt, so werden möglicherweise manuell gesetzte Daten mit den Werten aus dem Directory überschrieben.

Falls `prefer_location_from_directory` auf `true` gesetzt, werden Clients in opsi an die Position verschoben, welche sie im Directory haben.
Für das Deaktivieren dieses Verhalten, muss dieser Wert auf `false` gesetzt werden.

Mappings
~~~~~~~~

Mit einem derart flexiblen System wie ein Verzeichnisdienst benötigt der
Connector Informationen darüber welche Attribute im Directory auf welche
Attribute in opsi angewendet werden sollen.

[source,json]
----
{
    …
    "mapping": {
        "client": {
            "cid": "name",
            "cdescription": "description",
            "cnotes": "",
            "chardwareAddress": "",
            "cipAddress": "",
            "cinventoryNumber": "",
            "coneTimePassword": ""
        },
        "group": {
            "gid": "name",
            "gdescription": "description",
            "gnotes": ""
        }
    },
    …
}
----

Es gibt jeweils ein Mapping für Clients und eines für Gruppen.

opsi-Verbindungs-Einstellungen
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Hierüber wird gesteuert wie der Connector sich zu opsi verbindet.

[source,json]
----
{
    …
    "opsi": {
        "address": "https://localhost:4447",
        "username": "syncuser",
        "password": "secret",
        "connection_options": {
            "verify_certificate": true
        }
    }
}
----

Unte `address` ist die Adresse des opsi-Servers einzutragen.
Vergessen Sie nicht die Angabe des Ports!

Mittels `username` und `password` wird geregelt welche Zugangsdaten zur
Authentifizierung am opsi-Server verwendet werden.

Es ist zu empfehlen einen speziellen Benutzer für die Synchronisation anzulegen.
Bitte entnehmen Sie dem Handbuch die notwendigen Schritte.

Unter `connection_options` werden Optionen für die Verbindung zum
opsi-Server festgelegt.
Mittels `verify_certificate` wird die Überprüfung des Server-Zertifikats
gesteuert.
Für selbstsignierte Zertifikate kann dieser Wert auf `false` gesetzt werden.
