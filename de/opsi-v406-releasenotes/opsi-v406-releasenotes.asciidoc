////
; Copyright (c) uib gmbh (www.uib.de)
; This documentation is owned by uib
; and published under the german creative commons by-sa license
; see:
; http://creativecommons.org/licenses/by-sa/3.0/de/
; http://creativecommons.org/licenses/by-sa/3.0/de/legalcode
; english:
; http://creativecommons.org/licenses/by-sa/3.0/
; http://creativecommons.org/licenses/by-sa/3.0/legalcode
;
; credits: http://www.opsi.org/credits/
////

////
;***************************************************************************
; Subversion:
; $Revision:  $ $Author: oertel $
; $Date: $
;***************************************************************************
////

:Author:    uib gmbh
:Email:     info@uib.de
:Revision:  4.0.6
:doctype:   book

// Include common opsi terms
include::../common/opsi_terms.asciidoc[]

= opsi Version 4.0.6 Release Notes

// Include common opsi copyright
include::../common/opsi_manual_copyright.asciidoc[]

[[opsi-406-releasenotes-overview]]
== Übersicht der Neuerungen

Das opsi Service Releases 4.0.6 weist eine Fülle von Neuerungen und Detailverbesserungen auf. Hier eine Übersicht:

* Ab opsi 4.0.6 werden (ausschließlich) folgende Distributionen als opsi-server unterstützt: +
** Ubuntu: 12.04 (Precise), 14.04 (Trusty), 14.10 (Utopic Unicorn)
** Debian: 6.0 (Squeeze), 7.0 (Wheezy)
** Univention Corporate Server (UCS): 3.2, 4.0
** openSUSE 12.3, 13.1
** SLES 11SP3, 12
** RHEL 6, 7
** CentOS 6, 7

Sollten Sie opsi auf einer Betriebssystemversion einsetzen, welche oben nicht aufgeführt ist,
so empfehlen wir Ihnen ein Betriebsystem-Update bevor Sie opsi v4.0.6 einspielen.

* Neues opsi-bootimage basierend auf Ubuntu Precise / Kernel 3.15.1 mit Unterstützung für aktuelle Hardware

* Windows Netboot Produkte +
** winpe Partition jetzt NTFS formatiert (auf nicht UEFI Systemen)

* opsi-winst / opsi-script (4.11.5.2): +

** Files Kommandos für Hardlinks, Symbolische Links, Rename und Move in Files Sektionen

** For-To Schleife

** Switch / Case Statement

** Neue Stringlistfunktion: `removeFromListByContaining`

** Neue Stringlistfunktion: `LoadTextFileWithEncoding(` <file name> `,` <encoding>`)`

** Neue Stringfunktion `unquote2(<string>,<quote-string>)`

** Neue Stringfunktion `GetShortWinPathName(<longpath string>)`

** Neue Stringfunktion `GetConfidentialProductProperty (` <PropertyName>, <DefaultValue>`)`

** Neue boolean Funktion `CompareDotSeparatedNumbers(<str1>, <relationstr>, <str2>)`

** Neue boolean Funktion `CompareDotSeparatedStrings(<str1>, <relationstr>, <str2>)`

** Neues Statement `UpdateEnvironment`. Aufruf von `UpdateEnvironment` fordert Windows auf die Umgebungsvariablen aus der Registry neu einzulesen (NT6 only)

** Files Kommando `del`: ACHTUNG verändertes Verhalten: Ähnlich wie schon beim copy Befehl: +
Wenn eine Datei in Benutzung ist, kann sie im Rahmen eines Reboots gelöscht werden. Das '{opsi-winst}/opsi-script' default-Verhalten ist dabei, dass ein Datei in Benutzung zum Löschen beim nächsten Reboot markiert wird UND die '{opsi-winst}/opsi-script' Reboot Markierung gesetzt wird. Das Setzen der Option `-c` stellt den automatischen Reboot aus. Das Löschen wird in diesem Fall erst dann vervollständigt, wenn ein Reboot auf eine andere Weise ausgelöst wird.

** Upgrade der SSL Libraries auf 1.0.2a, update des SSL Protokolls auf TLS 1.2

** Siehe auch gesondertes Kapitel: <<opsi-script>>.

* Linux Netboot Produkte:

** Die neue Generation der Linux Netbootprodukte arbeitet mit dem Orginal Installer der Distribution und einer entsprechenden Antwortdatei.

** Produkte auf dieser Basis gibt es für: SLES12, Ubuntu14-04, Debian7, Debian8

** Siehe auch gesondertes Kapitel.

* opsi-configed: 

** Der opsi-configed kann jetzt seine Tabellen auch als PDF-Exporte für einen PDF-Viewer zur Verfügung stellen oder als 
Datei exportieren.

** Auf der Seite Hardwareinformationen des opsi-configed wird ein automatisierter Weg für die PC-spezifische Treiberintegration angeboten. 
Der ByAudit-Treiberpfad wird entsprechend den Anforderungen des Bootimages erzeugt und auf Wunsch angelegt. Anschließend 
können die Treiberdateien auch mittels des opsi-configed direkt auf den Konfigserver kopiert werden, wo dann auch die Dateizugriffsrechte korrekt 
gesetzt werden.

** Es sind an diversen Stellen optimierte Datenzugriffe für das MySQL-Backend implementiert.




** ########

* opsi-client-agent: +

** Überarbeitetes Script `opsi-deploy-client-agent`. +
Damit es ist einfach möglich zur Verteilung mit einer IP-Adresse zu
arbeiten. +
Außerdem wurde die Möglichkeit zum Kopieren der Dateien auf `mount` zurück +
zu greifen wieder eingeführt. +
Das Script wird selbstständig ermitteln welche Art von Adresse übergeben
wird. Zur manuellen Bestimmung, stehen Parameter bereit.
** Feature zur Steuerung von den Paketen, die für die einzelnen Events freigeschaltet oder ausgeschlossen werden sollen, über den configed mit den Produktgruppen.

* python-opsi:

** Zahlreiche Verbesserungen und Features in der Python-Library von opsi


////
Für Details lesen Sie bitte das opsi-v405-releasenotes Handbuch bzw. die überarbeiteten opsi Handbücher.
////

[[opsi-406-releasenotes-knownbugs]]
== Known Bugs / Known Problems


.KNOWN BUGS:

* ######

.KNOWN PROBLEMS:

* ######

[[opsi-406-releasenotes-eol]]
== Abkündigung

In diesem Kapitel werden die Abkündigungen aufgelistet. Diese Distributionsversionen werden aus verschiedenen Gründen nicht mehr weiter von opsi unterstützt.

* Univention Corporate Server: Die Versionen 3.0 und 3.1 sind von Univention abgekündigt und werden nicht mehr unterstützt.

[[opsi-406-releasenotes-eol_windows]]
=== Abkündigung: Windows Versionen

Ab opsi v 4.0.5 werden wir die Netbootpakete für Windows Vista und Server 2008 nicht mehr weiter pflegen. Ebenso planen wir für diese Windowsversionen die Unterstützung in den Update Abo's einzustellen. Wer hierzu Fragen oder Probleme hat möge sich bei uns melden.

Windows XP / Server 2003 ist bekanntermaßen von Microsoft nicht mehr (bzw. Windows 2003 eingeschränkt) unterstützt. Wir werden, wegen der weiten Verbreitung, diese Pakete noch eine Zeitlang pflegen. Trotzdem kündigen wir auch hier an, diese Pflege in absehbarer Zeit einzustellen und empfehlen Ihnen dringend den Wechsel auf eine neuere Windows Version (oder Linux).

[[opsi-406-releasenotes-installation]]
== Hinweise zur Installation

Wir empfehlen vor der Installation des Updates (sicherheitshalber) mit opsi-backup eine Sicherung Ihres Backends durchzuführen:
[source,prompt]
----
opsi-backup create
----


Die Produkte welche im Rahmen dieses Releases veröffentlicht werden, sind in etlichen Teilen voneinander abhängig. Sie sollten daher nicht versuchen nur Teile zu installieren.

Sie sollten dabei zuerst den Server updaten und danach die opsi-Produkte.

Beim Update eines bestehenden opsi-Servers kann es vorkommen, dass eine neue Version `/etc/opsi/opsi.conf` eingespielt werden kann und der Paketmanager Ihres Systems Sie fragt, wie vorgegangen werden soll.
Falls eine solche Nachfrage kommt und Sie diese Datei nicht geändert haben, so können Sie diese Datei gefahrlos durch die neue Version ersetzen.
Falls Sie die Datei geändert haben oder sich unsicher sind, verweigern Sie das Ersetzen bitte.

Wie oben beschrieben könnte ebenso eine neue Version der `/etc/opsi/opsi-product-updater.conf` für ein Update vorgeschlagen werden. 
In der neuen Version kann jetzt ein Smtp-Benutzer mit Smtp-Passwort für die Authentifizierung eingetragen werden, falls dies benötigt wird. Zudem wurde der Eintrag
für die Exclude-Files entfernt (exclude = ^win* ), was dazu führen wird, dass die Windows-Netbootprodukte von der Aktualisierung nicht mehr ausgeschlossen werden. 

Wir empfehlen nach dem Update die Ausführung von ``opsi-setup --set-rights``, um sicher zu stellen, dass die Berechtigungen in den verwendeten Ordnern korrekt sind. Die Ausführung des Befehls kann mehrere Minuten in Anspruch nehmen.

[[opsi-406-releasenotes-aktualisierung-opsivm]]
=== Hinweise zur Aktualisierung der opsi server vm Version 4.0.6

Beim Aktualisieren des 'opsi-depotserver' Paketes kann es sein, dass Sie die Daten für das SSL-Zertifikat erneut eingeben müssen.


[[opsi-406-releasenotes-installation-opsipackages]]
=== Hinweise zum Aktualisieren von opsi-Paketen

////
Bitte nachstehenden Block bei release nicht löschen sondern auskommentieren
////

Zur Installation der testing Serverpakete müssen Sie das opsi Repository ändern von `opsi40` auf `opsi40-testing`. +
Zum Beispiel bei Ubuntu 14.04: +
`deb http://download.opensuse.org/repositories/home:/uibmz:/opsi:/opsi40/xUbuntu_14.04 ./` +
ersetzen durch: +
`deb http://download.opensuse.org/repositories/home:/uibmz:/opsi:/opsi40-testing/xUbuntu_14.04 ./`

Danach müssen Sie Ihre Pakete updaten. +
Zum Beispiel bei Ubuntu / Debian:
[source,prompt]
----
aptitude update
aptitude full-upgrade
----

Zur Installation der testing opsi Produkte
`/etc/opsi/opsi-product-updater.conf`

[source,prompt]
----
[repository_opsi_406_testing]
baseUrl = http://download.uib.de
dirs = opsi4.0/experimental/opsi-v406/products/localboot, opsi4.0/experimental/opsi-v406/products/netboot, opsi4.0/experimental/opsi-v406/products/opsi-linux
#dirs = dirs = opsi4.0/testing/opsi-v406/products/localboot, opsi4.0/testing/opsi-v406/products/netboot, opsi4.0/testing/opsi-v405/opsi-linux
active = true
username = 
password = 
autoInstall = false
autoUpdate = true
autoSetup = false
onlyDownload = false 
----

in der Sektion `[repository_uib]` folgende Zeile zu setzen:
[source,prompt]
----
active = false
----
Danach rufen sie den opsi-product-updater auf.
Um alle Pakete zu installieren:
[source,prompt]
----
opsi-product-updater -i -vv
----

Um nur Updates zu installieren:
[source,prompt]
----
opsi-product-updater -vv
----

////
Bitte vorstehenden Block bei release nicht löschen sondern auskommentieren
////

////
Die Installation erfordert keine besonderen Arbeiten. Sie erfolgt im Rahmen der normalen Updates ihres Servers und der opsi-Produkte.

Sie sollten dabei zuerst den Server updaten. Benutzen Sie dazu die Befehle entsprechend Ihrer Linux-Distribution. +

Wir empfehlen in der Datei `/etc/opsi/opsi-product-updater.conf` 
in der Sektion `[repository_uib]` den Eintrag `excludes` wie folgt zu modifizieren, damit Sie auch Produkte bekommen welche mit `win*` anfangen::
[source,prompt]
----
excludes =
----

Wenn Sie die  opsi-linux Produkte benötigen so hängen Sie an den  `dirs` Eintrag: +

[source,prompt]
----
dirs = opsi4.0/products/localboot, opsi4.0/products/netboot
----
den Pfad `opsi4.0/products/opsi-linux` an.

Wenn Sie die  opsi-local-image Produkte benötigen so hängen Sie an den  `dirs` Eintrag den Pfad `opsi4.0/products/opsi-local-image` an.

Danach die opsi-Produkte. Dies erledigt der opsi-product-updater:

[source,prompt]
----
opsi-product-updater -i -vv
----

Um nur Updates zu installieren:
[source,prompt]
----
opsi-product-updater -vv
----

Sollten Sie eine Multidepot Umgebung haben, so machen Sie zunächst das Upgrade auf Ihrem config-server, bevor Sie die Depots upgraden.

Falls Sie Produkt-IDs mit einer Länge von mehr als 32 Zeichen verwenden wollen und das MySQL-Backend einsetzen, so führen Sie bitte ein Update der Tabellen-Definition auf Ihrem Config-Server mittels opsi-setup durch:


[source,prompt]
----
opsi-setup --update-mysql
----
////

[[opsi-script]]
== opsi-script / opsi-winst 4.11.5.2

* Security Upgrade zu Windows SSL Libraries 1.0.2a (libeay32.dll, ssleay32.dll) +
Update des SSL Protokolls auf TLS 1.2

.In Files Sektionen:

* `hardlink` <existing file> <new file> // since 4.11.5 [W/L] +
Ein existierender <new file> wird überschrieben. +
`hardlink` funktioniert nur auf Filesystemen die Hardlinks unterstützen
wie NTFS und Standard Linux Filesysteme.

* `symlink` <existing file> <new file> // since 4.11.5 [W/L] +
Unter Windows ist `symlink` erst ab NT6 und aufwärts verfügbar ! +
Ein existierender <new file> wird überschrieben. +

* `rename` <old filename> <new filename> // since 4.11.5 [W/L] +
`move` <old filename> <new filename> // since 4.11.5 [W/L] +
Es gibt keine Unterschiede zwischen `rename` und `move`, es sind zwei Namen für die selbe Funktion +
Ein existierender <new file> wird überschrieben. +
 +
Windows: <new filename> darf in einem anderen Directory liegen oder auch in einem anderen Volume / Disk. Im zweiten Fall, wird die Datei kopiert und danach das Original gelöscht. +
Läßt sich das Ziel nicht erstellen (Datei in Verwendung) so wird die Operation beim nächsten Reboot fertiggestellt. Das funktioniert natürlich nur wenn das Zielfilesystem zum Reboot-Zeitpunkt verfügbar ist, also nicht auf Netzwerkshares. In diesem Fall wird auch automatisch ein Reboot nach dem Ende des Scriptes ausgelöst. Dies läst sich aber mit der Option `-c` (continue) unterdrücken. +
Die Erstellung von Junctions unter Windows wird noch nicht unterstützt. +
 +
Linux: <new filename> darf in einem anderen Directory liegen aber nicht in einem anderen Filesystem / Partition. Die Option `-c` wird unter Linux ignoriert. +
 +
Example: 
[source,winst]
----
[Files_link_move]
del "$HomeTestFiles$\files\hardlink.txt"
hardlink "$HomeTestFiles$\files\dummy.txt" "$HomeTestFiles$\files\hardlink.txt"
del "$HomeTestFiles$\files\symlink.txt"
symlink "$HomeTestFiles$\files\dummy.txt" "$HomeTestFiles$\files\symlink.txt"
del "$HomeTestFiles$\files\temp\rename.txt"
del "$HomeTestFiles$\files\temp\move.txt"
copy "$HomeTestFiles$\files\dummy2.txt" "$HomeTestFiles$\files\temp\"
rename "$HomeTestFiles$\files\temp\dummy2.txt" "$HomeTestFiles$\files\temp\rename.txt"
copy "$HomeTestFiles$\files\dummy2.txt" "$HomeTestFiles$\files\temp\"
move "$HomeTestFiles$\files\temp\dummy2.txt" "$HomeTestFiles$\files\temp\move.txt"
----

* Die Funktion `del` und `delete`  +
Windows: Läßt sich die Datei nicht löschen (Datei in Verwendung) so wird die Operation beim nächsten Reboot fertiggestellt. In diesem Fall wird auch automatisch ein Reboot nach dem Ende des Scriptes ausgelöst. Dies läst sich aber mit der Option `-c` (continue) unterdrücken. +
Linux: Die Option `-c` wird unter Linux ignoriert.

.For-To Schleife [W/L] 

* Zum mehrfachen Ausführen eines Befehls oder einer Subsektion.

* Syntax:

`for` %<temporary string variable>% `=` <start string> `to` <end string> `do` <one statement> //since 4.11.5 [W/L]

Die temporäre Variable %<temporary string variable>% muss nicht und darf nicht deklariert werden und ist in der aufgerufenen Subsektion als Konstante verfügbar.

* Example: 

Code from opsi-winst-test:
[source,winst]
----
message "for to loop"
set $ConstTest$ = "12345"
set $CompValue$ = ""
for %s% = "1" to "5" do sub_iteration_test
if ($ConstTest$ = $CompValue$)
	comment "passed"
else
	set $TestResult$ = "not o.k."
	LogWarning "failed"
endif

[sub_iteration_test]
set $CompValue$ = $CompValue$ + '%s%'
----

ergibt den Log:

[source,winst]
----
message for to loop
Set  $ConstTest$ = "12345"
  The value of the variable "$ConstTest$" is now: "12345"
Set  $CompValue$ = ""
  The value of the variable "$CompValue$" is now: ""

~~~~~~ Looping through:  '1', '2', '3', '4', '5'
  
  ~~~~~~~ Start Sub ~~~~~~~  sub_iteration_test
  Set  $CompValue$ = $CompValue$ + '1'
    The value of the variable "$CompValue$" is now: "1"
  
  ~~~~~~~ End Sub   ~~~~~~~  sub_iteration_test
  
  
  ~~~~~~~ Start Sub ~~~~~~~  sub_iteration_test
  Set  $CompValue$ = $CompValue$ + '2'
    The value of the variable "$CompValue$" is now: "12"
  
  ~~~~~~~ End Sub   ~~~~~~~  sub_iteration_test
  
  
  ~~~~~~~ Start Sub ~~~~~~~  sub_iteration_test
  Set  $CompValue$ = $CompValue$ + '3'
    The value of the variable "$CompValue$" is now: "123"
  
  ~~~~~~~ End Sub   ~~~~~~~  sub_iteration_test
  
  
  ~~~~~~~ Start Sub ~~~~~~~  sub_iteration_test
  Set  $CompValue$ = $CompValue$ + '4'
    The value of the variable "$CompValue$" is now: "1234"
  
  ~~~~~~~ End Sub   ~~~~~~~  sub_iteration_test
  
  
  ~~~~~~~ Start Sub ~~~~~~~  sub_iteration_test
  Set  $CompValue$ = $CompValue$ + '5'
    The value of the variable "$CompValue$" is now: "12345"
  
  ~~~~~~~ End Sub   ~~~~~~~  sub_iteration_test
  

~~~~~~ End Loop
If
  $ConstTest$ = $CompValue$   <<< result true
  ($ConstTest$ = $CompValue$)   <<< result true
Then
  comment: passed
Else
EndIf
----

.Switch / Case Statement [W/L] 

* Syntax:

----
Switch <string expression> 
  Case <string const>
    <statement(s)> 
  EndCase
  [DefaultCase
    <statement(s)> 
   EndCase]
EndSwitch
----

* Examples:

Code from opsi-winst-test:
[source,winst]
----
set $ConstTest$ = "5"
Switch $ConstTest$
	Case "1"
		set $CompValue$ = "1"
	EndCase
	Case "2"
		set $CompValue$ = "2"
	EndCase
	Case "3"
		set $CompValue$ = "3"
	EndCase
	Case "4"
		set $CompValue$ = "4"
	EndCase
	Case "5"
		set $CompValue$ = "5"
	EndCase
	Case "6"
		set $CompValue$ = "6"
	EndCase
	Case "7"
		set $CompValue$ = "7"
	EndCase
	DefaultCase
		set $CompValue$ = "notexisting"
	EndCase
EndSwitch
if ($ConstTest$ = $CompValue$)
	comment "passed"
else
	set $TestResult$ = "not o.k."
	LogWarning "failed"
endif
----

.
[source,winst]
----
[Sub_check_exitcode]
comment "Test for installation success via exit code"
set $ExitCode$ = getLastExitCode
; informations to exit codes see
; http://msdn.microsoft.com/en-us/library/aa372835(VS.85).aspx
; http://msdn.microsoft.com/en-us/library/aa368542.aspx
Switch $ExitCode$
	Case "0"
		comment "Looks good: setup program gives exitcode zero"
	EndCase
	Case "1605"
		comment "ERROR_UNKNOWN_PRODUCT	1605"
		comment "This action is only valid for products that are currently installed."
		comment "Uninstall of a not installed product failed - no problem"
	EndCase
	Case "1641"
		comment "looks good: setup program gives exitcode 1641"
		comment "ERROR_SUCCESS_REBOOT_INITIATED	164"	
		comment "The installer has initiated a restart." 
		comment "This message is indicative of a success."
		ExitWindows /Reboot
	EndCase
	Case "3010"
		comment "looks good: setup program gives exitcode 3010"
		comment "ERROR_SUCCESS_REBOOT_REQUIRED	3010"
		comment "A restart is required to complete the install."
		comment "This message is indicative of a success."
		ExitWindows /Reboot
	EndCase
	DefaultCase
		logError "Fatal: Setup program gives an unknown exitcode unequal zero: " + $ExitCode$
		isFatalError "Exit Code: "+ $ExitCode$
	EndCase
EndSwitch
----

.Parameter für Sektionen

* Bei `ShellBatch`, `ShellInAnIcon`, `DosBatch`, `DosInAnIcon`, `ExecWith` +
sind nun als Parameter neben Stringkonstanten auch Stringvariablen erlaubt (aber keine String Funktionen).

Example:

Code from opsi-winst-test:
[source,winst]
----
comment "Testing parameters for ShellBatch"
set $ConstTest$ = "Hello world"
set $list$ = getOutStreamFromSection('DosInAnIcon_with_parameter world')
set $CompValue$ = takeString(2,$list$)
if ($ConstTest$ = $CompValue$)
	comment "ShellBatch parameter passed"
else
	set $TestResult$ = "not o.k."
	LogWarning "ShellBatch parameter failed"
endif

comment "Testing parameters for ShellBatch"
set $ConstTest$ = "Hello world"
set $tmp$ = "world"
set $list$ = getOutStreamFromSection('DosInAnIcon_with_parameter $tmp$')
set $CompValue$ = takeString(2,$list$)
if ($ConstTest$ = $CompValue$)
	comment "ShellBatch parameter passed"
else
	set $TestResult$ = "not o.k."
	LogWarning "ShellBatch parameter failed"
endif
----

ergibt den Log:

[source,winst]
----
comment: Testing parameters for ShellBatch
Set  $ConstTest$ = "Hello world"
  The value of the variable "$ConstTest$" is now: "Hello world"
Set  $list$ = getOutStreamFromSection('DosInAnIcon_with_parameter world')
  
  DosInAnIcon_with_parameter
    c:\opsi.org\tmp\_opsiscript_Kj23Ej02.cmd saved back
    Executing "cmd.exe" /C c:\opsi.org\tmp\_opsiscript_Kj23Ej02.cmd world
    ExitCode 0
                
                output:
                --------------
                
                C:\Windows\system32>echo Hello world 
                Hello world
    
    The file: c:\opsi.org\tmp\_opsiscript_Kj23Ej02.cmd has been deleted
    retrieving strings from getOutStreamFromSection [switch to loglevel 7 for debugging]
        (string   0)
        (string   1)C:\Windows\system32>echo Hello world 
        (string   2)Hello world
        
Set  $CompValue$ = takeString(2,$list$)
    retrieving strings from $list$ [switch to loglevel 7 for debugging]
        (string   0)
        (string   1)C:\Windows\system32>echo Hello world 
        (string   2)Hello world
        
  The value of the variable "$CompValue$" is now: "Hello world"
If
  $ConstTest$ = $CompValue$   <<< result true
  ($ConstTest$ = $CompValue$)   <<< result true
Then
  comment: ShellBatch parameter passed
Else
EndIf

comment: Testing parameters for ShellBatch
Set  $ConstTest$ = "Hello world"
  The value of the variable "$ConstTest$" is now: "Hello world"
Set  $tmp$ = "world"
  The value of the variable "$tmp$" is now: "world"
Set  $list$ = getOutStreamFromSection('DosInAnIcon_with_parameter $tmp$')
  
  DosInAnIcon_with_parameter
    c:\opsi.org\tmp\_opsiscript_Kz50Gi50.cmd saved back
    Executing "cmd.exe" /C c:\opsi.org\tmp\_opsiscript_Kz50Gi50.cmd world
    ExitCode 0
                
                output:
                --------------
                
                C:\Windows\system32>echo Hello world 
                Hello world
    
    The file: c:\opsi.org\tmp\_opsiscript_Kz50Gi50.cmd has been deleted
    retrieving strings from getOutStreamFromSection [switch to loglevel 7 for debugging]
        (string   0)
        (string   1)C:\Windows\system32>echo Hello world 
        (string   2)Hello world
        
Set  $CompValue$ = takeString(2,$list$)
    retrieving strings from $list$ [switch to loglevel 7 for debugging]
        (string   0)
        (string   1)C:\Windows\system32>echo Hello world 
        (string   2)Hello world
        
  The value of the variable "$CompValue$" is now: "Hello world"
If
  $ConstTest$ = $CompValue$   <<< result true
  ($ConstTest$ = $CompValue$)   <<< result true
Then
  comment: ShellBatch parameter passed
Else
EndIf
----

.Funktionen und Aufrufe

* `UpdateEnvironment` [W]: +
Sendet Windows das Signal das Environment aus der Registry neu einzulesen.
Anzuwenden nachdem Umgebungsvariablen wie z.B. PATH in der Registry verändert, gesetzt oder gelöscht wurden. +
ABER: Normale DosBatch oder Winbatch Aufrufe erben trotzdem das 'alte' Environment. Daher danach `winbatch` mit dem Parameter `/RunElevated` verwenden. +
Daher funktioniert diese Funktion nur bei Windows >= NT6.

Example:
[source,winst]
----
comment "Set Environment Variables and check for it ...."
Registry_add_environment /sysnative
UpdateEnvironment

comment "This will not work because the environment is inherited from the running process"
set $list$ = shellCall('set opsi-script-test')

comment "This will work because this new started process will get a new environment"
winbatch_check_environment /RunElevated
if ("42" = getlastExitCode)
	comment "passed"
else
	comment "failed"
endif

[Registry_add_environment]
openkey [HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\Environment]
set "opsi-script-test"="deleteme"

[winbatch_check_environment]
"%system%\cmd.exe" /c "if %opsi-script-test%==deleteme exit 42"
----

* `sleepseconds` [W/L] +
Als Parameter für die Anzahl der Sekunden sind nun auch Stringausdrücke erlaubt,
also auch Stringvariablen und Stringfunktionen.

* `MaximizeWinst` [W/L] +
Vergrößert das opsi-script Fenster auf das Maximum.

* Suchpfad für `include_insert` und `include_append` ist um `%ScriptPath%/../lib` erweitert worden und gilt nun auch für externe `sub` -Sektionen.  +

Für alle Funktionen gilt: +
<file name> ist:

* Ein kompletter Pfad zu einer Datei. [W/L] 

* Eine Datei in `%ScriptPath%` [W/L]

* Eine Datei in `%opsiScriptHelperPath%\lib` [W] +
Entspricht: '%ProgramFiles32Dir%\opsi.org\opsiScriptHelper\lib'

* Eine Datei in `%ScriptPath%/../lib` [W/L]

* Eine Datei in `%WinstDir%\lib` [W]

Die Prüfung erfolgt in dieser Reihenfolge. Die erste Datei die gefunden wird, wird genommen.

* `LoadTextFileWithEncoding(` <file name> `,` <encoding>`)` [W/L] +
Liefert eine Stringliste mit dem Inhalt von <file name> welcher beim Einlesen von <encoding> in das laufende Encoding des Systems konvertiert wurde.

* `removeFromListByContaining(`<search string>`,` <target list>`)` [W/L] +
Liefert eine Kopie von <target list> bei der alle Zeilen entfernt sind in denen  
<search string> vorkommt. Der Vergleich ist case insensitiv.

* `removeFromListByContaining(`<search list>`,` <target list>`)` [W/L] +
Liefert eine Kopie von <target list> bei der alle Zeilen entfernt sind in denen ein String aus <search list> vorkommt. Der Vergleich ist case insensitiv.

Examples:

File "%Scriptpath%\test-files\encoding\10lines.txt" is:
----
line 1
line 2
line 3
line 4
line 5
line 6
line 7
line 8
line 9
line 10
----

Code from opsi-winst-test:

[source,winst]
----
comment ""
comment "-------------------------------------"
comment "Testing: "
message "removeFromListByContaining"
set $string1$ = "%Scriptpath%\test-files\encoding\10lines.txt"
set $list1$ = loadTextFileWithEncoding($string1$, "cp1252")
comment "search with string"
comment "search with string constant"
set $ConstTest$ = "9"
set $list2$ = removeFromListByContaining("line 5", $list1$)
set $CompValue$ = count($list2$)
if ($ConstTest$ = $CompValue$)
	comment "passed"
else
	set $TestResult$ = "not o.k."
	LogWarning "failed"
endif

set $ConstTest$ = "9"
set $list2$ = removeFromListByContaining("LINE 5", $list1$)
comment "the match is case insensitive"
set $CompValue$ = count($list2$)
if ($ConstTest$ = $CompValue$)
	comment "passed"
else
	set $TestResult$ = "not o.k."
	LogWarning "failed"
endif


set $ConstTest$ = "0"
set $list2$ = removeFromListByContaining("line", $list1$)
set $CompValue$ = count($list2$)
if ($ConstTest$ = $CompValue$)
	comment "passed"
else
	set $TestResult$ = "not o.k."
	LogWarning "failed"
endif

set $ConstTest$ = "8"
comment "searchstr 1 will found in 'line 1' and 'line 10'"
set $list2$ = removeFromListByContaining("1", $list1$)
set $CompValue$ = count($list2$)
if ($ConstTest$ = $CompValue$)
	comment "passed"
else
	set $TestResult$ = "not o.k."
	LogWarning "failed"
endif

comment "search with string function"
set $ConstTest$ = "9"
set $list2$ = removeFromListByContaining(trim(" line 5 "), $list1$)
set $CompValue$ = count($list2$)
if ($ConstTest$ = $CompValue$)
	comment "passed"
else
	set $TestResult$ = "not o.k."
	LogWarning "failed"
endif

comment "search with string variable"
set $string1$ = "line 5"
set $ConstTest$ = "9"
set $list2$ = removeFromListByContaining($string1$, $list1$)
set $CompValue$ = count($list2$)
if ($ConstTest$ = $CompValue$)
	comment "passed"
else
	set $TestResult$ = "not o.k."
	LogWarning "failed"
endif

comment "search with string list"
comment "search with string list variable"
set $list3$ = createStringList ('1', '2', '3', '4', '5')
comment "searchstr 1 will found in 'line 1' and 'line 10'"
set $ConstTest$ = "4"
set $list2$ = removeFromListByContaining($list3$, $list1$)
set $CompValue$ = count($list2$)
if ($ConstTest$ = $CompValue$)
	comment "passed"
else
	set $TestResult$ = "not o.k."
	LogWarning "failed"
endif

comment "search with string list variable"
comment "searchstr 1 will found in 'line 1' and 'line 10'"
set $ConstTest$ = "4"
set $list2$ = removeFromListByContaining(createStringList ('1', '2', '3', '4', '5'), $list1$)
set $CompValue$ = count($list2$)
if ($ConstTest$ = $CompValue$)
	comment "passed"
else
	set $TestResult$ = "not o.k."
	LogWarning "failed"
endif
----

* Stringfunktion `unquote2(<string>,<quote-string>)` [W/L] +
Funktioniert wie `unquote(<string>,<quote-string>)` mit folgenden Unterschieden: +
Wenn <quote-string> ein Zeichen lang ist, wird diese Zeichen als erwartetes 'Quote Zeichen' für den Anfang und das Ende von <string> genommen. Wenn <quote-string> zwei Zeichen lang ist, wird das erste Zeichen als erwartetes 'Quote Zeichen' für den Anfang und das zweite Zeichen als erwartetes 'Quote Zeichen' für den Ende von <string> genommen. Beispiel: `"()"` +
Die Funktion liefert <string> unverändert zurück, wenn nicht sowohl für Anfang und Ende die erwarteten 'Quote Zeichen' gefunden werden.

* Logging im `silent_install` Modus:
Wird opsi-script / opsi-winst aus einem `silent_install` Event gestartet (z.B für die Inventarisierung im Hintergrund), so werden die Logs immer im Append Mode an den Server gesendet als an den vorhandenen Log angehängt.

* Stringfunktion `GetShortWinPathName(<longpath string>)` [W] +
Liefert den Shortpath (8.3) von <longpath string>. Lässt sich für <longpath string> kein Shortpath finden, so liefert die Funktion einen leeren String. + Beispiel: `GetShortWinPathName("C:\Program Files (x86)")` liefert `"C:\PROGRA~2"`

* `GetConfidentialProductProperty (` <PropertyName>, <DefaultValue>`)` //since 4.11.5.2 +
verhält sich wie `GetProductProperty` nur das der resultierende Wert als confidential string behandelt und damit nicht gelogged wird. +
Sinnvoll um z.B. Passwörter aus einem Produktproperty abzufragen. Siehe auch `SetConfidential`

* Boolsche Funktion `CompareDotSeparatedStrings(`<str1>,<relation str>,<str2>`)`  //since 4.11.5.2: [W/L] +
vergleicht zwei Strings vom Typ <str>[.<str>[.<str>[.<str>]]] unter Verwendung des <relation str> der eins von den folgenden Werten haben darf: [<,<=,=,>=,>]. +
siehe auch: Stringfunktion `CompareDotSeparatedStrings(`<string1>, <string2>`)`

* Boolsche Funktion `CompareDotSeparatedNumbers(`<str1>,<relation str>,<str2>`)`  //since 4.11.5.2: [W/L] +
vergleicht zwei Strings vom Typ <zahl>[.<zahl>[.<zahl>[.<zahl>]]] unter Verwendung des <relation str> der eins von den folgenden Werten haben darf: [<,<=,=,>=,>]. +
siehe auch: Stringfunktion `CompareDotSeparatedNumbers(`<string1>, <string2>`)`

Example: +
The code:
[source,winst]
----
set $string1$ = "1.2.30.4.5"
set $string2$ = "1.20.30.4.5"
if CompareDotSeparatedNumbers($string1$, "<", $string2$)
	comment "passed"
else
	set $TestResult$ = "not o.k."
	LogWarning "failed"
endif
if CompareDotSeparatedNumbers($string1$, "<=", $string2$)
	comment "passed"
else
	set $TestResult$ = "not o.k."
	LogWarning "failed"
endif
if CompareDotSeparatedNumbers($string1$, "=<", $string2$)
	comment "passed"
else
	set $TestResult$ = "not o.k."
	LogWarning "failed"
endif
if CompareDotSeparatedNumbers($string1$, "=", $string2$)
	set $TestResult$ = "not o.k."
	LogWarning "failed"
else
	comment "passed"
endif
if CompareDotSeparatedNumbers($string1$, ">=", $string2$)
	set $TestResult$ = "not o.k."
	LogWarning "failed"
else
	comment "passed"
endif
if CompareDotSeparatedNumbers($string1$, "=>", $string2$)
	set $TestResult$ = "not o.k."
	LogWarning "failed"
else
	comment "passed"
endif
if CompareDotSeparatedNumbers($string1$, ">", $string2$)
	set $TestResult$ = "not o.k."
	LogWarning "failed"
else
	comment "passed"
endif
----
produce the log:
[source,winst]
----
Set  $string1$ = "1.2.30.4.5"
  The value of the variable "$string1$" is now: "1.2.30.4.5"
Set  $string2$ = "1.20.30.4.5"
  The value of the variable "$string2$" is now: "1.20.30.4.5"
If
    Checking if "1.2.30.4.5" is "<" than / as "1.20.30.4.5"
  CompareDotSeparatedNumbers($string1$, "<", $string2$)   <<< result true
Then
  comment: passed
Else
EndIf
If
    Checking if "1.2.30.4.5" is "<=" than / as "1.20.30.4.5"
  CompareDotSeparatedNumbers($string1$, "<=", $string2$)   <<< result true
Then
  comment: passed
Else
EndIf
If
    Checking if "1.2.30.4.5" is "=<" than / as "1.20.30.4.5"
  CompareDotSeparatedNumbers($string1$, "=<", $string2$)   <<< result true
Then
  comment: passed
Else
EndIf
If
    Checking if "1.2.30.4.5" is "=" than / as "1.20.30.4.5"
  CompareDotSeparatedNumbers($string1$, "=", $string2$)   <<< result false
Then
Else
  comment: passed
EndIf
If
    Checking if "1.2.30.4.5" is ">=" than / as "1.20.30.4.5"
  CompareDotSeparatedNumbers($string1$, ">=", $string2$)   <<< result false
Then
Else
  comment: passed
EndIf
If
    Checking if "1.2.30.4.5" is "=>" than / as "1.20.30.4.5"
  CompareDotSeparatedNumbers($string1$, "=>", $string2$)   <<< result false
Then
Else
  comment: passed
EndIf
If
    Checking if "1.2.30.4.5" is ">" than / as "1.20.30.4.5"
  CompareDotSeparatedNumbers($string1$, ">", $string2$)   <<< result false
Then
Else
  comment: passed
EndIf
----



.opsi-Linux Support:

* Winbatch Sektionen werden jetzt auch unter Linux unterstützt.

* LinkFolder Sektionen werden jetzt auch unter Linux unterstützt. +
Erlaubte BaseFolder sind: `common_programs`,`common_autostart`,`desktop`, `autostart` +
Subfolder ist immer "" (leer).
Die Link Option `icon_index` wird ignoriert. +
Als zusätzliche Link Option gibt es: `link_categories`. Hier sind folgende durch Semikolon getrennt und abgeschlossene Werte erlaubt: `AudioVideo`, `Audio`, `Video`, `Development`, `Education`, `Game`, `Graphics`, `Network`, `Office`, `Settings`, `System`, `Utility` +
Die LinkFolder Sektion unter Linux funktioniert für unterschiedliche Desktopsysteme.

* `shellCall` liefert jetzt den korrekten exitcode des aufgerufenen Befehls zurück. Technisch gesehen wird der übergebene Befehl durch ` || exit $?` ergänzt, so daß die aufgerufene shell (/bin/bash) den exitcode des eigentlichen Befehls zurück gibt.

[[opsi-406-releasenotes-python-opsi]]
== python-opsi 4.0.6.

Die von opsi verwendeten Python-Bibliotheken haben zahlreiche
Verbesserungen und Fehlerkorrekturen erhalten.

Weiterhin wurden einige Funktionalitäten von externen Scripten direkt in
die Library verlagert, damit diese bei geringerem Pflegeaufwand einfach
an unterschiedlichen Stellen verwendet werden können.

In diesem Rahmen gibt es die folgenden neuen Module:
`OPSI.Util.Task.Rights` beinhaltet Methoden zum Setzen von Ordner- und
Dateirechten.
OPSI.Util.Task.UpdateBackend.MySQL` beinhaltet Methoden zum
Aktualisieren des MySQL-Backends.

Die Funktion `OPSI.Types.forceList` erkennt nun Tupel und Generatoren
und wandelt diese in eine Liste um. Generatoren werden dabei
aufgebraucht.

Bei der Zertifikatserstellung mit Methoden aus dem Modul
`OPSI.Util.Task.Certificate` wird nun eine Seriennummer zufällig
erstellt, falls keine Seriennummer vorhanden ist.
Bei einer vorhandenen Seriennummer wird diese erhöht.
Dadurch wird der Beschreibung in RFC5820 gefolgt und vermieden, dass die
Seriennummer unterschiedlicher Zertifikate gleich ist.
Dies findet bei der Verwendung von `opsi-setup --renew-opsiconfd-cert`.

Die Arbeitsweise des Moduls `OPSI.SharedAlgorithm` wurde geändert, so
dass das Modul nun nicht mehr aus Strings besteht, die evaluiert werden,
da diese Möglichkeit von keiner offiziellen Komponente verwendet wurde.
Die Methode `backend_getSharedAlgorithm` wird bei Verwendung jetzt einen
Fehler werfen.

Die Methoden zur Bestimmung der Produktreihenfolge wurden überarbeitet. Wenn eine
zirkuläre Abhängigkeit erkannt wird, wird jetzt bei jeder Methode ein Fehler geworfen. 
Außerdem wird jetzt bei jeder Methode eine Warnung 
in die Logdatei geschrieben, wenn eine Produktabhängigkeit definiert ist, 
die im Widerspruch zu einer definierten Priorität steht und dann zu 
unvorhersehbaren Resultaten führen kann. 

Die Methode `OPSI.System.Windows.mount` akzeptiert durch einen
freundlicherweise von Markus Kötter eingereichten Patch nun als Ziel
den Wert `dynamic`. Dadurch wird es möglich, dass an einen
eigenständig ermittelten Punkt ein Laufwerk eingehangen wird.
Somit kann ein Rechner mit aktuellem opsi-client-agent selbst einen
freien Laufwerksbuchstaben ermitteln, an welchem der Depot-Share
eingehangen wird.
Um dieses Feature zu nutzen, muss das Property
`clientconfig.depot.drive` eines Clients auf den Wert `dynamic` gesetzt
werden. Die Ergänzung des Properties auf dem opsi-Server um diesen Wert
kann mittels `opsi-setup --init-current-config` angestoßen werden.
Dieses Feature benötigt den aktuellen `opsi-client-agent` auf dem Client.

Die Treiberintegration behandelt Ordner, die auf einen Unterstrich enden,
genau so wie Ordner, die auf einen Punkt enden. Dadurch werden Probleme
mit Dateisystembeschränkungen unter Windows vermieden.
Beispiel: Für ByAudit-Treiberintegration für einen Rechner vom Hersteller
`Dilbert Inc.` nennen Sie den Ordner `Dilbert Inc_`.

* opsi Serverkomponenten: +
Diverse Verbesserungen und Bugfixes in den Serverpaketen.

** Auf der Info-Page des opsi-Servers wird eine Statistik über die Anzahl +
der von außen aufgerufenen Methoden bereit gestellt.

** Die Kürzung der Logfiles durch den opsiconfd ist nun konfigurierbar.
Zuvor wurden die Logfiles auf ~5MB begrenzt, um zu verhindern, dass
durch große Mengen übertragener Logdateien die Festplatte des Servers
gefüllt wird.
Dieses Verhalten wird standardmaßig beibehalten, es kann jedoch über das
Attribut `max log size` in der Sektion `global` der Datei
`/etc/opsi/opsiconfd.conf` geändert oder deaktiviert werden.

Um dennoch ein einfaches Aufräumen der Logfiles zu ermöglichen, wird eine
erweiterte logrotate-Konfiguration ausgeliefert. Diese ist zu finden
`/etc/logrotate.d/opsiconfd`.
In dieser Datei findet sich auch ein Konfigurationsabschnitt für die Datei
`/var/log/opsi/package.log`. Bei dieser Datei fand in der Vergangenheit
keine Kürzung statt.

** Im MySQL-Backend haben nun alle Spalten, welche auf die ID eines
Hosts referenzieren die gleiche Länge - 255 Zeichen.
Neue Backends werden automatisch korrekt erstellt.
Um bestehende Backends anzupassen, führen Sie bitte
`opsi-setup --update-mysql` aus.

** Bei der Initialisierung des MySQL-Backends wird, wenn bei der
Initialisierung die Verbindung zur Datenbank nicht hergestellt werden
kann, 5 Sekunden gewartet, bevor ein weiterer Verbindungsversuch
unternommen werden kann.

** Die Werkzeuge `opsi-product-updater`, `opsi-newprod` und
`opsi-package-manager` nutzen jetzt alle die gleiche Funktion zum Setzen
der Datei-Zugriffsrechte, damit diese konsistent gesetzt sind.

** Ein freundlicherweise von Antoine Guevara eingereichter Patch
ermöglicht es einen beliebigen Betreff für durch das Werkzeug
`opsi-product-updater` versendete E-Mails anzugeben.
Der Betreff kann durch das Attribut `subject` in der Sektion
`notification` in der Datei `/etc/opsi/opsi-product-updater.conf`
festgelegt werden.

** Das Werkzeug `opsi-admin` hat einen neuen Task bekommen: +
setActionRequestWhereOutdatedWithDependencies
Dieser imitiert das Verhalte von setActionRequestWhereOutdated, arbeitet
aber auch mit den entsprechenden Dependencies des Produkt.
Vielen Dank an Daniel Koch für das Einsenden das Patches.

[[opsi-configed]]
== opsi-configed 4.0.6.

####################

[[opsi-406-releasenotes-bootimage]]
== opsi-linux-bootimage
####################

[[opsi-manual-linux]]
== opsi Linux Support


[[opsi-manual-linux-preconditions]]
=== Vorbedingungen für den opsi Linux Support


Technische Voraussetzungen sind opsi 4.0.5 mit den Paketständen:

.Benötigte Pakete
[options="header"]
|==========================
|opsi-Paket|Version
|opsi-linux-bootimage|>= 20140805-1
|==========================

Der opsi Support für Linux besteht aus einem Teil der von Anfang an Opensource ist (den Netbootprodukten)
und einem kofinanzierten Teil (dem client-agenten).

Dieser opsi-linux-client-agent ist eine
http://uib.de/de/opsi-erweiterungen/erweiterungen/[kofinanzierte opsi Erweiterung]. +
Das bedeutet, das Sie zum Einsatz eine Freischaltdatei benötigen. Diese Freischaltung erhalten Sie wenn Sie die Erweiterung kaufen. Zu Evaluierungszwecken stellen wir Ihnen auch eine zeitlich befristete Freischaltung kostenlos zur Verfügung ( -> mail an info@uib.de). +
Weitere Details zum Umgang mit Modulen finden Sie im opsi manual.
////
<<opsi-manual-modules>>.
////

[[opsi-manual-linux-introduction]]
=== Einführung

*Ein Management-Werkzeug für Windows und Linux*

Ziel der Erweiterung von opsi um die Unterstützung von Linux-Systemen ist die Schaffung eines Managementsystems für heterogene Umgebungen. Der Fokus liegt dabei auf der möglichst vollständigen Integration beider Welten in die gleichen Management Vorgänge und Werkzeuge.

Dies bedeutet, eine Linux-Installation wird auf die gleiche Weise angestoßen wie eine Windows-Installation. Der opsi-client-agent unter Linux basiert auf dem selben Code wie der unter Windows und ist (soweit sinnvoll)
befehlskompatibel.

*Linux distributionsübergreifend*

Der Linux Support von opsi ist distributionsübergreifend angelegt. +
Die Distributionen:

* Debian
* Ubuntu
* OpenSuse / SLES (Suse Linux Enterprise Server)
* Fedora / RHEL (RedHat Enterprise Linux)
* CentOS

werden gleichwertig unterstützt.

[[opsi-manual-linux-netboot-v406]]
=== Linux Netboot Produkte v406 auf Basis des Distributionseigenen Installers

Während bei den opsi-linux Netboot Produkten welche mit opsi v405 veröffentlicht wurden die Installation des Ziel Linux weitgehend vom Netboot Produkt gesteuert wurde, setzen die entsprechenden Produkte ab v406 auf den Distributions eigenen Installer.

Dis ist ein grundsätzlicher Umbau, der dazu führt, das sowohl Aufbau als auch Verhalten der Produkte unterschiedlich zu den bisherigen Produkten sind. +
Hier eine Übersicht:

* Ähnlich wie bei der Windows Installation wird für den Installer eine Antwortdatei bereit gestellt welche vom Installer zur nichtinteraktiven Installation genutzt wird.

* Der distributionseigene Installer ist nicht wie bei Windows ein Programm das aufgerufen wird, sondern in einer Kombination aus Distributions eigenem Kernel und initrd implementiert.

* Die gesamte Grundinstallation inclusive Partitionierung, LVM, Basissoftware, etc liegt in der Hand des Installers und wird nicht mehr durch das bootimage durch geführt.

* Bei den Suse- und RedHat-artigen Distributionen werden die Installationsquellen von Ihnen bereit gestellt in dem Sie die Installations DVD als ISO-Datei auf dem Depotshare ablegen. Diesev Verfahren ähnelt der Situation unter Windows nur das der Ablageort ein anderer ist und sie bei Windows den Inhalt der Installations DVD ablegen und nicht den ISO-File.

* Bei den Debian-artigen werden die Installationsquellen aus dem Netz verwendet.

* Zur weiteren Pflege der Installation kann der opsi-linux-client-agent im Rahmen der Basisinstalltion mit installiert werden.

Abläufe der neuen Installationsmimik:

. Das opsi-linux-bootiamge wird gebootet löscht die Partitionstabelle und erstellt eine kleine temporäre Hilfsparition.

. Das opsi-linux-bootimage holt sich das Distributions eigene initrd und entpackt es auf der Hilfspartition.

. Das opsi-linux-bootimage holt sich die generische Vorlage für die Antwortdatei, patcht (personalisiert) diese und legt sie dann in das initrd Verzeichnis

. Das opsi-linux-bootimage erstellt weitere Hilfscripte und Konfigurationsdateien (z.B. zur Installation des opsi-linux-client-agent) und legt sie dann in das initrd Verzeichnis.

. Das opsi-linux-bootimage packt das gepatchte initrd Verzeichnis wieder zusammen

. Das opsi-linux-bootimage bootet den Distributions Kernel mit dem gepatchten Distributions initrd per kexec.

. Der Distributionskernel mit dem gepatchten initrd installiert das Zielsystem unattended und installiert abschließend den opsi-linux-client-agent.

Vorteile:

* Die Installation findet exakt gemäß den Anforderungen des Distributors statt. Dies ist immer ein Vorteil aber natürlich im Unternehmensumfeld als Ausgangsbedingung für Supportverträge besonders wichtig.

* Die Integration neuer Releases in opsi wird einfacher (schneller).

* Bei den Suse- und RedHat-artigen Distributionen findet die Installation aus auf dem opsi-server liegenden Installationsquellen statt und ist damit schneller und unempfindlich gegen Störungen beim Zugriff auf Repositories im Internet

Nachteile:

* Im Moment noch keine Unterstützung für UEFI-Rechner. Die Informationen über die UEFI Umgebung gehen im Moment noch bei dem kexec Boot verloren. Wir hoffen, das wir dieses Problem mit einem neueren bootimage irgendwann beheben können.

[[opsi-manual-linux-netboot-v406-prepare]]
==== Bereitstellung und der Installationsmedien auf dem Server

Die Bereitstellung der Installationsmedien für die Suse- und RedHat-artigen Distributionen erfolgt auf einem neuen / zusätzlichen nfs share.

Dazu muß ein NFS-Server auf dem opsi-server installiert und konfiguriert sein:

In opsi v406 Stable wird dies über eingesondertes Paket erfolgen. Bis diese verfügbar ist muß noch Hand angelegt werden:

* Auf dem opsi-server muß das entsprechende nfs-server Paket installiert sein. Auf Debian, Ubuntu, Suse ist dies das Paket: nfs-kernel-server. Auf Centos, Fedora, Redhat ist es das Paket nfs-utils.

* Der share `opsi_nfs_share` muß angelegt und exportiert werden:

** Verzeichnis erzeugen: +
`mkdir -p /var/lib/opsi/depot/opsi_nfs_share`

** In der Datei /etc/exports den Eintrag: +
`/var/lib/opsi/depot/opsi_nfs_share *(ro,no_root_squash,insecure,async,subtree_check)` +
erzeugen.

** Zum aktivieren des Exports aufrufen: +
`exportfs -r`

** Zur Kontrolle des erfolgreichen exports aufrufen: +
`showmount -e localhost` +
Die Ausgabe sollte sein: +
`Export list for localhost: +
/var/lib/opsi/depot/opsi_nfs_share *`

* Der share `opsi_nfs_share` hat folgenden Verzeichnis aufbau: +
`opsi_nfs_share/<productId>/<arch>/<dvd>.iso` +
zum Beispiel: +
`opsi_nfs_share/opensuse13-2/64/openSUSE-13.2-DVD-x86_64.iso` +
Die Installationsdatei muß als Extension `.iso` haben, der Rest ist egal. Liegen in einem Verzeichnis mehrere `.iso` Dateien so ist nicht definiert welche verwendet wird.

* Kopieren Sie die Installations DVD an den entsprechenden Platz im `opsi_nfs_share` und führen Sie aus: +
`opsi-set-rights /var/lib/opsi/depot/opsi_nfs_share` +
WICHTIG: Verwenden Sie die Standard Installations DVD's der Distribution. Modifizierte Installations DVD's haben eventuell einen anderen Aufbau und funktionieren nicht.

Die opsi v406 Netbootprodukte für Debian und Ubuntu beziehen Ihre Installations Dateien nicht aus einem ISO-File. Vielmehr werden diese von uns mit dem Standard Netboot Kernel und initrd ausgeliefert. Alle weiteren benötigten Pakete werden über das Internet bezogen. Zur Entlastung Ihrer Netzwekverbindung kann bei vielen Installationen daher die Verwendung eines apt-cache sinnvoll sein. +
Siehe auch Kapitel <<opsi-manual-linux-debproxy>>

[[opsi-manual-linux-netboot-v406-generalproperties]]
==== Allgemeine Properties der opsi v406 Linux Netboot Produkte

Die folgenden Properties finden Sie zur Steuerung der Linuxinstallation in allen v406 Netbootprodukten:

* `askbeforeinst`: +
Soll das Starten der Installation am Client bestätigt werden müssen?  (Default='true')

* `architecture`: +
Architektur Auswahl, beeinflusst die Auswahl des bootimages und die Installationsarchitektur.  (Default='64bit')

* `language` oder `locale`: +
Welche Sprache / locale soll installiert werden.  (Default=Distributionsabhängig / 'de')

* `console_keymap`: +
Zu installierendes Tastaturlayout.  (Default=Distributionsabhängig / 'de')

* `timezone`: +
Welche Zeitzone soll verwendet werden?. (Default='Europe/Berlin')

* `root_password`: +
Passwort für root.  (Default='linux123')

* `user_password`: +
Passwort für user.  (Default='linux123')

* `online_repository`: +
Repository der Distribution für die Installation. (Nicht bei SLES) (Default=Distributionsabhängig)

* `opsi_online_repository`: +
Repository der opsi-server Pakete. (Default=Distributionsabhängig)

* `proxy`: +
Proxystring (wenn benötigt) in der Form: `http://<ip>:<port>`. (Default=pass:[''])

* `install_opsi-client-agent`: +
Installiere den Linux opsi-client-agent (Kofinanzierungsprojekt: Sie benötigen eine Aktivierung durch die /etc/opsi/modules) . (Default='false')

* `setup_after_install`: +
Welche opsi Produkte sollen zum Abschluss der Betriebssysteminstallation auf setup gestellt werden. (Default='')

[[opsi-manual-linux-netboot-v406-special]]
==== Die einzelnen Netboot Produkte

[[opsi-manual-linux-netboot-v406-special-ubuntu14-04]]
===== Die Produkte: debian7 , debian8 und ubuntu14-04

Die Basis Installation erfolgt direkt aus dem Netz.

Das Produkt hat produktiven Status..

Das Produkt hat folgende zusätzliche Properties:

----
[ProductProperty]
type: unicode
name: encrypt_password
multivalue: False
editable: True
description: Password for disk encryption (only if encrypt_logical_volumes=true)
values: ["linux123"]
default: ["linux123"]

[ProductProperty]
type: unicode
name: partition_disk
multivalue: False
editable: True
description: Disk to use first or complete device path
values: ["first", "/dev/sda", "/dev/sdb"]
default: ["first"]

[ProductProperty]
type: unicode
name: partition_method
multivalue: False
editable: False
description: regular: use the usual partition types for your architecture / lvm: use LVM to partition the disk / crypto: use LVM within an encrypted partition
values: ["regular", "lvm", "crypto"]
default: ["lvm"]

[ProductProperty]
type: unicode
name: partition_recipe
multivalue: False
editable: False
description: atomic: all files in one partition / home: separate /home partition / multi: separate /home, /usr, /var, and /tmp partitions
values: ["atomic", "home", "multi"]
default: ["atomic"]

[ProductProperty]
type: unicode
name: desktop_package
multivalue: True
editable: False
description: Desktop package to install (standard = no desktop)
values: ["ubuntu-desktop", "kubuntu-desktop", "lubuntu-desktop", "xubuntu-desktop", "ubuntu-gnome-desktop"]
default: ["standard"]

[ProductProperty]
type: unicode
name: language_packs
multivalue: True
editable: False
description: language packages to install 
values: ["ar", "bg", "by", "cf", "de", "dk", "en", "es", "et", "fa", "fi", "fr", "gr", "il", "it", "kg", "kk", "lt", "mk", "nl", "no", "pl", "ro", "ru", "sg","sr", "ua", "uk", "us", "wo"]
default: ["de"]
----



[[opsi-manual-linux-netboot-v406-special-opensuse13-02]]
===== Das Produkt opensuse13-2


Das Produkt hat folgende zusätzliche Properties:

----
[ProductProperty]
type: unicode
name: networkdevice
multivalue: False
editable: True
description: interface to conigure (vbox:enp0s3 / esxi:ens32)
values: ["eno1", "ens1", "ens32", "enp0s1","enp0s2","enp0s3"]
default: ["enp0s3"]


[ProductProperty]
type: bool
name: install_unattended
description: If false then do interactive installation
default: True
----

[[opsi-manual-linux-netboot-v406-special-sles12]]
===== Das Produkt sles12

Das Produkt hat folgende zusätzliche Properties:

----
[ProductProperty]
type: unicode
name: productkey
multivalue: False
editable: True
description: email:regcode-sles for suse_register. Is only used if the  host parameter  `license-management.use` is set to  false . If it set to  True  the license key will be get from the license management module. / La clé de licence pour l'installation. Est utilisée uniquement si dans "Réseau et paramètres supplémentaires" `license-management.use` est défini à false (faux) . Si c'est réglé sur True (vrai) la clé de licence sera obtenue du module de gestion des licences.
values: ["", "myemail@example.com:xxxxxxxxxxxxxx"]
default: [""]

[ProductProperty]
type: bool
name: suse_register
description: set to false, if you don't want to register your system online, if you set this to false you have to give local repositories
default: True

[ProductProperty]
type: unicode
name: local_repositories
multivalue: True
editable: True
description: list of local repositories to use. Syntax: "repository description", example entry: "http://sles.example.com/suse/repo NameForRepo"
values: [""]
default: [""]

[ProductProperty]
type: unicode
name: networkdevice
multivalue: False
editable: True
description: interface to conigure (vbox:enp0s3 / esxi:ens32)
values: ["eno1", "ens1", "ens32", "enp0s1","enp0s2","enp0s3"]
default: ["enp0s3"]

[ProductProperty]
type: bool
name: install_unattended
description: If false then do interactive installation
default: True
----

[[opsi-manual-linux-netboot-v406-special-redhat70]]
===== Die Produkte redhat70 und centos70

Das Produkt hat folgende zusätzliche Properties:

----
[ProductProperty]
type: bool
name: install_unattended
description: If false then do interactive installation
default: True

[ProductProperty]
type: unicode
name: selinux_mode
multivalue: False
editable: False
description: In which mode should SELinux run ?
values: ["enforcing", "permissive", "disabled"]
default: ["permissive"]

[ProductProperty]
type: unicode
name: partition_method
multivalue: False
editable: False
description: plain: Regular partitions with no LVM or Btrfs. / lvm: The LVM partitioning scheme. / btrfs: The Btrfs partitioning scheme. / thinp: The LVM Thin Provisioning partitioning scheme. 
values: ["plain", "lvm", "btrfs", "thinp"]
default: ["lvm"]

[ProductProperty]
type: unicode
name: productkey
multivalue: False
editable: True
description: email:regcode for subscription_register. Is only used if the  host parameter  `license-management.use` is set to  false . If it set to  True  the license key will be get from the license management module. / La clé de licence pour l'installation. Est utilisée uniquement si dans "Réseau et paramètres supplémentaires" `license-management.use` est défini à false (faux) . Si c'est réglé sur True (vrai) la clé de licence sera obtenue du module de gestion des licences.
values: ["", "myemail@example.com:xxxxxxxxxxxxxx"]
default: [""]

[ProductProperty]
type: bool
name: subscription_register
description: set to false, if you don't want to register your system online, if you set this to false you have to give local repositories
default: True
----




[[opsi-manual-linux-netboot-405]]
=== Linux Netboot Produkte v405 

*Basis-Installation des OS per Netboot*

Für die Installation eines Linux Basissystems wird zunächst per Netboot das Standard opsi-linux-bootimage gebootet (welches auch für die Windows-Installationen zum Einsatz kommt). +
Von diesem Bootimage aus wird die Zielplatte partitioniert (/ und swap) und formatiert. Nun folgt die Installation des Grundsystems (mit Netz und ssh aber ohne X11). Die Abläufe dieser Grundinstallation unterscheiden sich naturgemäß zwischen den unterschiedlichen Distributionen erheblich. Gemeinsam ist, dass die Installation direkt aus den Originalpaketen der Distribution erfolgt.

Auf diese Basisinstallation können optional die opsi-Pakete installiert werden, um aus dem System einen opsi-Server (z.B. neuen Depotserver) zu machen. +
Ebenfalls optional kann nun der opsi-client-agent für Linux installiert werden. Dieser ist dann für die Installation und Konfiguration weiterer Software zuständig.

Die opsi Netboot Produkte zur Linuxinstallation sind bereits als Open Source freigegeben.

Bedingt dadurch, dass die Basisinstallation aus dem Standard opsi-linux-bootimage erfolgt, gibt es distributionsabhängig unterschiedlich bestimmte Dinge, welche sich erst in der Umgebung nach dem ersten Boot des Systems konfigurieren bzw. installieren lassen. Beispiele hierfür sind die se-linux Installation bei den 'RedHat artigen' bzw. die Konfiguration der Tastatur bei den 'Debian artigen'. Hierfür gibt es ein Standard Localbootprodukt `l-os-postinst` welches diese Aufgaben übernimmt.

[[opsi-manual-linux-netboot-generalproperties-405]]
==== Allgemeine Properties der v405 Linux Netboot Produkte

Die folgenden Properties finden Sie zur Steuerung der Linuxinstallation in allen Netbootprodukten:

* `askbeforeinst`: +
Soll das Starten der Installation am Client bestätigt werden müssen?  (Default='true')

* `architecture`: +
Architektur Auswahl, beeinflusst die Auswahl des bootimages und die Installationsarchitektur.  (Default='64bit')

* `system_partition_size`: +
Größe der Systempartition. Die Größe kann in Prozent der Festplattengröße oder als absoluter Wert (G=Gigabyte) angegeben werden. Wenn Sie einen kleineren Wert als 100% angeben, wird der verbleibende Rest als Datenpartition verwendet (wenn das Property data_partion_create = true).  (Default='100%')

* `swap_partition_size`: +
Größe der Swappartition.  (Default='2000M')

* `data_partition_create`: +
Verwende freien Plattenplatz zur Erstellung einer Datenpartition. (true/false).  (Default='true')

* `data_partition_preserve`: +
Soll eine existierende Datenpartition erhalten werden ? +
*always* = Installation abbrechen wenn der Erhalt einer gefundenen Partition mit dem Label 'data' mit den angegebenen Partitionierungsdaten nicht möglich ist. +
*if_possible* = Wird eine Partition mit dem Label 'data' gefunden und der Erhalt dieser Partition ist gemäß der angegebenen Partionierungsdaten nicht möglich so wird die Partition gelöscht. +
*never* = Die gesamte Partitionstabelle wird immer neu geschrieben.  (Default='never')

* `language`: +
Welche Sprache / locale soll installiert werden.  (Default='de')

* `console_keymap`: +
Zu installierendes Tastaturlayout.  (Default=Distributionsabhängig / 'de')

* `timezone`: +
Welche Zeitzone soll verwendet werden?. (Default='Europe/Berlin')

* `root_password`: +
Passwort für root.  (Default='linux123')

* `user_password`: +
Passwort für user.  (Default='linux123')

* `install_opsi_server`: +
Installiere die opsi-server Pakete. (Default='false')

* `online_repository`: +
Repository der Distribution für die Installation. (Nicht bei SLES) (Default=Distributionsabhängig)

* `opsi_online_repository`: +
Repository der opsi-server Pakete. (Default=Distributionsabhängig)

* `proxy`: +
Proxystring (wenn benötigt) in der Form: `http://<ip>:<port>`. (Default=pass:[''])

* `additional_packages`: +
Welche zusätzlichen Pakete sollen installiert werden? Angabe der Pakete Leerzeichen separiert. (Default=pass:[''])

* `wget_and_execute`: +
Url (http) einer Datei welche am Ende der Installation geholt und ausgeführt wird. (Default=pass:[''])

* `install_opsi-client-agent`: +
Installiere den Linux opsi-client-agent (Kofinanzierungsprojekt: Sie benötigen eine Aktivierung durch die /etc/opsi/modules) . (Default='false')

* `release`: +
(nur Debian und Ubuntu) +
Welches Release der Distribution soll installiert werden. (Default=Distributionsabhängig)

* `setup_after_install`: +
Welche opsi Produkte sollen zum Abschluss der Betriebssysteminstallation auf setup gestellt werden. (Default='l-os-postinst')

[[opsi-manual-linux-netboot-special]]
==== Die einzelnen Netboot Produkte

[[opsi-manual-linux-netboot-special-ubuntu]]
===== Ubuntu

Die Basis Installation erfolgt per debootstrap direkt aus dem Netz.

Das Produkt hat produktiven Status.

Das Produkt ist UEFI/GPT kompatibel (getestet für release=trusty).

Es gibt für diese Produkt passende opsi-server Pakete welche über 'install_opsi_server=true' installiert werden können.

[[opsi-manual-linux-netboot-special-debian]]
===== Debian

Die Basis Installation erfolgt per debootstrap direkt aus dem Netz.

Das Produkt hat produktiven Status.

Das Produkt ist UEFI/GPT kompatibel (getestet für release=wheezy).

Es gibt für diese Produkt passende opsi-server Pakete welche über 'install_opsi_server=true' installiert werden können.

[[opsi-manual-linux-netboot-special-opensuse]]
===== OpenSuse

Die Basis Installation erfolgt unter Verwendung von dem Produkt beiliegenden RPM Dateien.
Von daher gibt es für jedes Release ein eigenes Produkt.

.OpenSuse 12.3

Das Produkt hat produktiven Status.

Das Produkt ist *nicht* UEFI kompatibel.

Beachten Sie, das es für neue Releases evtl. noch keine opsi-server Pakete gibt und damit die Propertyeinstellung 'install_opsi_server=true' zu Fehlern führen kann.

.OpenSuse 13.1

Das Produkt hat produktiven Status.

Das Produkt ist *nicht* UEFI kompatibel .

Es gibt für diese Produkt passende opsi-server Pakete welche über 'install_opsi_server=true' installiert werden können.

Known Bugs: Bei bestimmter Hardware (z.B. VMWare ESXi) scheiter die korrekte Vorhersage des Netzwerkinterface Namens und das Netzwerkinterface bleibt unkonfigiriert.

[[opsi-manual-linux-netboot-special-sles]]
===== SLES

Die Basis Installation erfolgt unter Verwendung von dem Produkt beiliegenden RPM Dateien.
Von daher gibt es für jedes Release ein eigenes Produkt.

Da das Produkt RPM's enthält welche nicht Opensource sind, können wir es leider nicht frei zum Download anbieten. Wir können es aber unseren Kunden kostenlos zur Verfügung stellen ( -> mail an info@uib.de).
  
Das Produkt hat produktiven Status.

Beachten Sie, das es für neue Releases evtl. noch keine opsi-server Pakete gibt und damit die Propertyeinstellung 'install_opsi_server=true' zu Fehlern führen kann.

Das Produkt ist *nicht* UEFI kompatibel.

Das Produkt kennt folgende zusätzlichen Properties:

* `use_gpt` +
Wenn `true` wird die Festplatte (auch im MBR-BIOS Mode) mit GPT partitioniert. Hierfür wird dann auch eine Bootpartition benötigt. Wenn das  Property `boot_partition_size` auf 0 steht wird automatisert trotzdem eine Bootpartition mit der Größe 1 GB erzeugt.

* `boot_partition_size` +
Größe der Bootpartition. Wenn 0 wird keine Bootpartition erzeugt.

* `kernel_modules` +
Leerzeichen getrennte Liste der zusätzlich zu ladenden Kernelmodule (z.B. für spezielle Festplatten Controller).

* `suse_register` +
Wenn `true` wird der Server online registriert. Hierzu wird die email Adresse und der Key der Registrierung in der Form `email:productkey` benötigt. Dieser wird abhängig von dem Hostparameter `license-management.use` aus dem Lizenzmanagement oder aus dem Property `productkey` geholt. +
Wenn `false` muss im Property `local_repositories` mindestens ein geeigneter Repositoryserver angegeben werden.

* `productkey` +
email Adresse und der Key der Registrierung in der Form `email:productkey` (falls nicht das Lizenzmanagement verwendet wird).

* `local_repositories` +
Leerzeichen getrennte Liste von Repositories welche per zypper eingebunden werden in der Form: "http://myserver.local Description"

Das Property `online_repository` entfällt.

[[opsi-manual-linux-netboot-special-centos]]
===== CentOS 

Die Basis Installation erfolgt unter Verwendung von dem Produkt beiliegenden RPM Dateien.
Von daher gibt es für jedes Release ein eigenes Produkt.

.CentOS 6.5

Das Produkt ist noch in Entwicklung. Bekannte Probleme sind: die Lokalisierung.

Es gibt für diese Produkt passende opsi-server Pakete welche über 'install_opsi_server=true' installiert werden können.

Das Produkt ist *nicht* UEFI kompatibel.

.CentOS 7

Das Produkt ist noch nicht verfügbar.

[[opsi-manual-linux-netboot-special-fedora]]
===== Fedora

Die Basis Installation erfolgt unter Verwendung von dem Produkt beiliegenden RPMs.
Von daher gibt es für jedes Release ein eigenes Produkt.

.Fedora 20

Das Produkt hat testing Status.

Beachten Sie, das es für neue Releases evtl. noch keine opsi-server Pakete gibt und damit die Propertyeinstellung 'install_opsi_server=true' zu Fehlern führen kann.

Das Produkt ist *nicht* UEFI kompatibel .

[[opsi-manual-linux-netboot-special-rhel]]
===== RHEL

Das produkt ist noch nicht verfügbar.

[[opsi-manual-linux-clientagent]]
=== opsi-linux-client-agent

Der opsi-client-agent für Linux ist Bestandteil des Kofinanzierungsprojektes 'Linux Agent' und derzeit kostenpflichtig.

Der opsi-client-agent für Windows besteht im Kern aus zwei Komponenten:

. dem Service `opsiclientd`

. dem Actionprocessor `opsi-winst / opsi-script`

Der opsi-client-agent für Linux basiert auf einer Portierung des Windows Clientagenten nach Linux.

Der `opsiclientd` ist im ersten Release noch nicht fertig portiert und ist deshalb zunächst durch das Programm `opsiscriptstarter` ersetzt, welcher die Aufgaben des `opsiclientd` beim Systemstart übernimmt:

* Kontakt mit dem opsi-Server: Prüfen ob Aktionen gesetzt sind
* Mounten des Depot Shares
* Starten des Actionprocessors
* Unmount des Depot Shares
* Senden der Logdatei an den Server

Der Actionprocessor heißt unter Linux opsi-script und ist aus den selben Quellen gebaut wie der opsi-winst unter Windows. Damit steht unter Linux die gleiche Scriptsyntax zur Verfügung wie unter Windows. Weiterhin sind alle nicht plattformspezifischen Funktionen umgesetzt wie z.B: 

* File handling
* String und Stringlisten Funktionen
* Ausführen von externen Scripten und Programmen
* Kommunikation mit dem opsi-Server
* Patchen von Konfigurationsdateien

Natürlich gibt es unter Linux keine Funktionen zum Patchen der Registry, dafür aber neue linuxspezifische Funktionen wie z.B.:

* getLinuxDistroType
* getLinuxVersionMap

Das Logging des opsi-script ist analog zur dem des opsi-winst unter Windows.

Anders als bei Windows gibt es den opsi-script neben einer grafischen Version für die Arbeit unter X-Windows zusätzlich in einer noGUI Version für Systeme ohne grafische Oberfläche.

[[opsi-manual-linux-clientagent-places]]
=== opsi-linux-client-agent: Pfade

Wie 'sich das gehört' verteilt sich der linux-opsi-client-agent weitläufig:

Die Binaries:

`/usr/bin/opsi-script` (X11)

`/usr/bin/opsi-script-nogui` (ohne X11)

`/usr/bin/opsiscriptstarter` (vorläufiger opsiclientd Ersatz)

Die Hilfsdateien:

`usr/bin/winstskin/`

Die Konfigurationen:

`/etc/opsi-client-agent/opsiclientd.conf` (Konfiguration des opsiscriptstarter/opsiclientd)

`/etc/opsi-client-agent/opsi-script.conf` (in Vorbereitung)

Die Logs / Temps:

`/var/log/opsi-client-agent`

[[opsi-manual-linux-clientagent-knownbugs]]
=== opsi-linux-client-agent: Known Bugs

Das kopieren von vielen Dateien von einem smb-share ist abhängig von der Samba Version fehlerhaft. Es werden nicht alle Dateien kopiert.

Workaround:
Statt:
[source,winst]
----
[Files_copy_netboot]
copy -s "%scriptPath%/installfiles/*" "$target$/installfiles/"
----
verwenden:
[source,winst]
----
[ShellInAnIcon_opsi_copy_netboot]
set -x
export PATH=/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin
cd "%scriptPath%"
tar cf - installfiles | ( cd "$target$/installfiles/" ; tar xf - )
----


[[opsi-manual-linux-scriptexample]]
==== Beispiel Scriptteile

Unter Windows gilt für die Softwareverteilung: Die Installation von Software ist genauso wichtig wie die anschließende Konfiguration der Software. +
Unter Linux stehen die meisten Pakete über die Repositories der Distribution zur Verfügung. Dadurch wird der Installationsanteil kleiner, der Konfigurationsanteil aber bleibt. Weiterhin gibt es auch Applikationen, welche nicht über die Standardrepositories verfügbar sind. Hier müssen
unter Umständen zunächst weitere Repositories dem System hinzugefügt werden bzw. Installationsquellen dem Paket zugefügt werden. Wichtig ist, dass alle Installations- und Konfigurationsarbeiten zentral vom opsi-Server
gesteuert und dort auch geloggt werden. 

Im folgenden Beispiele für folgende Aufgaben in einem beispielhaften Script für den opsi-linux-client-agent:

* Beenden wenn es nicht unter Linux läuft
* Feststellen des Distributionstyps zur Entscheidung zwischen `apt-get`, `zypper` und `yum`
* Feststellen der genauen Linux Version
* Installation eines Paketes
* Hinzufügen eines Repositories

Beispiel: Beenden wenn es nicht unter Linux läuft:

[source,winst]
----
[Actions]
requiredWinstVersion >= "4.11.4.1"
ScriptErrorMessages=off

DefVar $OS$

set $OS$ = GetOS

if not($OS$ = "Linux")
	LogError "Wrong OS: Product: " + $ProductId$ + "is only for Linux"
	isFatalError "Wrong OS"
endif
----

Beispiel: Feststellen des Distributionstyps:

[source,winst]
----
[Actions]
requiredWinstVersion >= "4.11.4.1"
ScriptErrorMessages=off

DefVar $distrotype$

set $distrotype$ = getLinuxDistroType

if $distrotype$ = 'debian'
	ShellInAnIcon_Upgrade_deb
else
	LogError "Wrong Distro: This Product is for Debian/Ubuntu only"
	isFatalError "Wrong distro"
endif

if not("0" = getLastExitCode)
	Message "failed ShellInAnIcon_Upgrade"
	LogError "failed ShellInAnIcon_Upgrade"
	isFatalError "failed Upgrade"
endif


[ShellInAnIcon_Upgrade_deb]
set -x
export DEBIAN_FRONTEND=noninteractive
apt-get --yes install aptitude
apt-get update
apt-get --yes dist-upgrade
exit $?
----


Beispiel: Feststellen der genauen Linux Version und Installation eines Paketes:

[source,winst]
----
[Actions]
requiredWinstVersion >= "4.11.4.1"
ScriptErrorMessages=off

DefVar $distCodeName$
DefVar $distroName$
DefVar $distRelease$
DefVar $desktop$

DefStringList $linuxInfo$

set $linuxInfo$ = getLinuxVersionMap
set $distCodeName$ = getValue("Codename", $linuxInfo$)
set $distRelease$ = getValue("Release", $linuxInfo$)
set $distroName$  = getValue("Distributor ID", $linuxInfo$)

set $desktop$ = GetProductProperty("desktop", "kde")


if $distrotype$ = 'suse'
	if $desktop$ = "unity"
		Message " No Unity on SUSE - fallback to KDE ..."
		set $desktop$ = "kde"
	endif ; unity

	
	if $desktop$ = "kde"
		if ($distroName$ = 'openSUSE project')
			ShellInAnIcon_kde_suse
		endif
		if ("SUSE LINUX" = $distroName$) and ($distRelease$ = "11")
			ShellInAnIcon_kde_sles11
		endif
		if not("0" = getLastExitCode)
			LogError "failed ShellInAnIcon"
			Message "failed kde"
			isFatalError "failed kde"
		endif
	endif ; kde
endif; suse type

[ShellInAnIcon_kde_suse]
set -x
zypper --no-gpg-checks --non-interactive install patterns-openSUSE-kde4 patterns-openSUSE-kde4_basis
zypper --no-gpg-checks --non-interactive install splashy-branding-openSUSE
exit $?

[ShellInAnIcon_kde_sles11]
set -x
zypper --no-gpg-checks --non-interactive install --auto-agree-with-licenses -t pattern kde
exit $?
----


Beispiel: Hinzufügen eines Repositories:
[source,winst]
----
[Actions]
requiredWinstVersion >= "4.11.4.1"
ScriptErrorMessages=off

DefVar $distCodeName$
DefVar $distroName$
DefVar $distRelease$
DefVar $desktop$

DefStringList $linuxInfo$

set $linuxInfo$ = getLinuxVersionMap
set $distCodeName$ = getValue("Codename", $linuxInfo$)
set $distRelease$ = getValue("Release", $linuxInfo$)
set $distroName$  = getValue("Distributor ID", $linuxInfo$)

set $desktop$ = GetProductProperty("desktop", "kde")


if $distroName$ = 'Ubuntu'

	if $desktop$ = "cinnamon"
		set $desktopPackage$ = $desktop$
		ShellInAnIcon_ubuntu_cinnamon
		if not("0" = getLastExitCode)
			Message "failed ShellInAnIcon_ubuntu_cinnamon"
			LogError "failed ShellInAnIcon_ubuntu_cinnamon"
			isFatalError "failed cinnamon"
		endif
	endif ; cinnamon
endif; ubuntu

[ShellInAnIcon_ubuntu_cinnamon]
set -x
export DEBIAN_FRONTEND=noninteractive
# we need to get the add-apt-repository command
apt-get --yes --force-yes install python-software-properties
# the cinnamon repository
add-apt-repository ppa:gwendal-lebihan-dev/cinnamon-stable
apt-get update
apt-get --yes install ubuntu-desktop
exit $?
----

[[opsi-manual-linux-localboot]]
=== Linux Localboot Produkte

Hier einige Lokalbootprodukte welche zum Standardumfang des opsi Linuxsupports gehören.

[[opsi-manual-linux-localboot-l-os-postinst]]
==== l-os-postinst

Dieses Produkt übernimmt jene Teile der Basisinstallation welche sich vom bootimage nicht korrekt ausführen lassen.

Dies ist für die unterschiedlichen Distributionen:

* Fedora / CentOS: 

** Installation von se-linux

* Fedora: 

** Installation von se-linux

Das Produkt hat eine Abhängigkeit zu dem Produkt 'l-system-update' welches vor dem Lauf von 'l-os-postinst' aufgerufen wird. +
Das Produkt hat eine hohe Priorität, d.h. es wird vor 'normalen' Produkten ausgeführt.

[[opsi-manual-linux-localboot-l-desktop]]
==== l-desktop

Das Produkt l-desktop installiert ein Desktop Paket auf dem Rechner.

Über das Property `desktop` kann der zu installierende Desktop ausgewählt werden. Dabei ist zu beachten, das nicht alle Desktops auf allen Distributionen verfügbar sind. So gibt es z.B. 'Unity' nur unter Ubuntu. Wird ein nicht verfügbarer Desktop gewählt so wird ein Distributionsspezifischer Defaultdesktop installiert. Weiterhin haben die Desktop Pakete einen unterschiedlichen Umfang welcher abhängig von Distribution und Desktop sich auf die eigentliche Desktop Software beschränken kann oder auch Basisprodukte wie libreoffice, firefox, PDF-Reader usw. enthalten kann.

Das Property `desktop` hat folgende Werte:

* Gnome +
Default für Debian, Fedora, CentOS, RHEL +
Verfügbar auf allen Distributionen.

* KDE +
Default für SLES, OpenSuse
Verfügbar auf allen Distributionen.

* Unity +
verfügbar nur für Ubuntu

* Cinnamon +
verfügbar nur für Ubuntu

* xfce4 +
Verfügbar auf Ubuntu, Debian, Fedora.

* lxde +
Verfügbar auf Ubuntu, Debian.


[[opsi-manual-linux-localboot-l-system-update]]
==== l-system-update
Dieses Produkt aktualisiert das System.

[[opsi-manual-linux-localboot-l-swaudit]]
==== l-swaudit
Softwareinventarisierung auf Basis des Paketmanagers

[[opsi-manual-linux-localboot-l-hwaudit]]
==== l-hwaudit

Hardwareinventarisierung. +
Die Hardwareinventarisierung basiert zur Zeit auf der in Python implementierten Methode wie sie auch vom bootimage verwendet wird. Dazu muß das Paket `python-opsi` aus dem opsi-Repository der Distribution installiert werden. Ist für die Distribution kein opsi-Repository verfügbar, so scheitert auch die Hardwareinventarisierung.

[[opsi-manual-linux-localboot-l-jedit]]
==== l-jedit

Java basierter Editor mit Syntaxhighlighting für opsi-script. Ist noch kein Java installiert, so wird dies automatisch durchgeführt.


[[opsi-manual-linux-inventory]]
=== Inventarisierung

Zur Inventarisierung werden die Daten durch den Clientagenten erhoben und an den Server gesendet. Die Hardwareinventarisierung basiert auf den schon im Bootimage implementierten Methoden. 

Die Softwareinventarisierung basiert auf den Daten des Paketmanagements der verwendeten Distribution.

[[opsi-manual-linux-uefi]]
=== UEFI / GPT Unterstützung

Ab opsi v 4.0.5 sind eine zunehmende Anzahl von Linuxprodukten auch UEFI/GPT kompatibel. Details siehe hierzu in der obigen Auflistung der Netbootprodukte.

[[opsi-manual-linux-roadmap]]
=== Roadmap

Die Linux Unterstützung von opsi ist neu. Das bedeutet auch, dass wir im ersten Release noch nicht alle Features verwirklicht haben. +
Weitere Features werden folgen wie:

* Portierung des opsiclientd nach Linux
* Frei konfigurierbare Partitionierung
* Logical Volume Management
* Patchen von XML- und JSON-Dateien
* Patchen von hierarchischen Konfigurationsdateien wie dhcpd.conf


[[opsi-manual-linux-debproxy]]
=== Proxy für deb Pakete einrichten und verwenden

Eine brauchbare Anleitung zur Erstellung eines eigenen Ubuntu Proxy finden Sie hier:

http://wiki.ubuntuusers.de/Lokale_Paketquellen/Apt-Cacher-ng

http://www.gambaru.de/blog/2011/10/26/apt-cacher-ng-ein-proxy-server-fur-debian-und-ubuntu/




[[opsi-406-releasenotes-misc]]
== Sonstiges

[[opsi-406-releasenotes-misc-changelogs]]
=== Changelogs:


[[opsi-406-releasenotes-misc-changelogs-opsi-configed]]
==== Changelog opsi-configed
////
opsi-configed (4.0.5.1.2-1) testing; urgency=low
////
####################

[[opsi-406-releasenotes-misc-changelogs-opsi-client-agent]]
==== Changelog opsi-client-agent

////
opsi-client-agent (4.0.5.1-8) stable; urgency=low
////
####################

[[opsi-406-releasenotes-misc-changelogs-opsi-script]]
==== Changelog opsi-script / opsi-winst

opsi-winst/opsi-script (4.11.5.2) stable; urgency=low

  * upgrade to ssl Libraries 1.0.2a (libeay32.dll, ssleay32.dll)
  * files commands move / rename / hardlink / symlink now work with overwrite; fixes #1435
  * if move / rename fails (file is in use) we retry it with MOVEFILE_DELAY_UNTIL_REBOOT
    So the move will be done at the next reboot. Reboot will be set automatically if not Option -c is set.
  * file command del / delete now with option -c and retry to delete on next boot if file in use ; fixes # 788
  * osfunc: new function opsiunquotestr2
  * new string function unquote2(s1,s2): like unquote but:
        removes only quotes if they found at start and end
        s2 may be two chars long. Then the first char is the start mark
        and the second char is the end mark
  * osparser: GetString: new boolean switch requote
  * osparser: GetString requote=true: change double quoted (""str"") to alternative double quoted ('""');  references #1284
  * new string function: GetShortWinPathName(longpath) ; fixes #581
        Windows only
        Gives short path (8.3) from a long path e.g.
        GetShortWinPathName("C:\Program Files (x86)") gives "C:\PROGRA~2"
        In case of Error the result is an empty string
  * osfunc: startprocess_cp: translate windows showWindowFlag to TProcess TShowWindowOptions
  * osparser: doRegistryHack* : fix for not HKCU reg enties in loginscripts; fixes #1538
  * oswebservice: more log for "unexpected Result from webservice in retrieveJSONObject, number of lines: 0"
  * new string function: GetConfidentialProductProperty : like GetProductProperty but handles the result as confidential string ; fixes #462
  * fixes at GetNTVersion for Win10
  * new boolean function CompareDotSeparatedNumbers(<str1>,<relation str>,<str2>)
        <relation str> may be: one of [<,<=,=,>=,>]
  * new boolean function CompareDotSeparatedStrings(<str1>,<relation str>,<str2>)
        <relation str> may be: one of [<,<=,=,>=,>]
  * hide non visible processes (SW_HIDE) like winbatch or shellInAnIcon
  * (Security Update) oswebservice: use TLS1.2 instead of SSLv3

-- Detlef Oertel <d.oertel@uib.de>  Wed,  01 Apr 2015:15:00:00 +0200


opsi-winst/opsi-script (4.11.5.1) stable; urgency=low

  * osparser: commandline := 'cmd64.exe /c "reg delete ""'+key_completepath+'"" /f'; (fixes #1299)
  * port of the changes since 4.11.4.6 to Linux
  * osparser: New files commands hardlink, symlink, rename, move
  * osfunc: new tuibinstall methods: hardlink, symlink, rename (Linux / Windows ; fixes #1319, #362)
  * osparser: execDosBatch: The path to temporary file is only quoted if it contains spaces
  * osparser: execDosBatch: Variables are now allowed as Parameters (but no functions) fixes #1312
  * osparser: executeWith: Variables are now allowed as Parameters (but no functions)
  * osparser: doAktionen: Variables and functions are now allowed as sleepsecond Parameters; fixes #1193
  * osparser: %SriptPath%/../lib as additional Path in Search path for includes; fixes #1201
  * osparser: searchpath for includes are now works also for sub <file> ; fixes #1201
  * New loop statement: for %s% = $start$ to $stop$ do <statement> ;  references #407
      - $start$ and $stop$ has to be integer strings
      - $start$ < $stop$ is required
      - in fact a stringlist $start$ to $stop$ is generated over which we iterate while loop
  * osparser: tsLoopForTo  for %s% = $start$ to $stop$ do <statement>
  * osparser: activating winbatch for linux ; fixes #1170
  * replacing opsi-winst constants by opsi-script
  * osparser: produceStringList: New (overloaded) stringlist function (references #1110):
              - removeFromListByContaining(<search string>, <target list>) removes  <search string> from <target list>
              - removeFromListByContaining(<search list>, <target list>) removes  <search list> from <target list>
              - both functions search case insensitive for a matching substring
  * ospparser: fix for filexists* to detect symlinks
  * upgrade to ssl Libraries 1.0.1L (libeay32.dll, ssleay32.dll)
  * osmain: GetParameter + StartProgramModes: more try - except : port from 4.11.4.16
  * osparser: doOpsiServiceCall: more try - except : port from 4.11.4.16
  * osparser: doTextPatchMain: do not use CheckFileExists in SaveToFile ; references #171
  * HowToBuild.txt ; fixes #1372
  * oswebservice: finishOpsiConf: if runproductlist then Logg-Appendmode := true; references #1379
  * new Statement: UpdateEnvironment : Triggers Windows to reload Environment from Registry; Win only; references #1364
  * new Control Statement: Switch  ; references  #740
    - osparser: Switch <string expr ; normally variable>
                  Case <string expr; normally const>
                    statments
                  EndCase
                  [Defaultcase
                    statments
                  EndCase]
                EndSwitch
  * LinkFolder for Linux activated: No BaseFolder, No SubFolder, No Iconindex
      but link_categories: 'AudioVideo',
      'Audio', 'Video', 'Development', 'Education', 'Game', 'Graphics',  'Network',
      'Office', 'Settings', 'System', 'Utility'
      // from http://standards.freedesktop.org/menu-spec/menu-spec-1.0.html#category-registry
      changes in osparser, osfunclin and new unit oslindesktop
  * some more ExpandFilename calls to handle incorrect path delimiter
  * oswebservice: sendlog: replace old writeLog by new log_write method
  * New Statement: MaximizeWinst at osparser
  * New Functions LoadTextFileWithEncoding(file,encoding) strLoadTextFileWithEncoding(file,encoding) at osparser
  * osencoding: LoadFromFileWithEncoding
  * oswebservice: sendlog: at Linux do not convert logstrings to uft8
  * oslog: dependentadd: more try except
  * osparser: sleepseconds (tsSleep): more try except and more logging
  * osparser: winbatch: trim targetfilename
  * osparser: shellBatch: Parameter at Linux (wrong bash parameter)
  * osmain: User Profile Management (runloginscripts) is now free
  * osmain: do not switch opsi-script to setup (even if it is opsi-winst); references # 1437

-- Detlef Oertel <d.oertel@uib.de>  Thu,  22 Dec 2014:15:00:00 +0200

opsi-winst/opsi-script (4.11.4.14) stable; urgency=low

  * less (only 512 chars) debug output: oswebservice: retrieveJSONObject: log ResultLines.Strings[0] if Result = nil
  * oswebservice: retrieveJSONObject: FillChar(buffer^, 655360,' '); before read to buffer
  * manifest extended for win 10: <supportedOS Id="{8e0f7a12-bfb3-4fe8-b9a5-48fd50a15a9a}"/>

-- Detlef Oertel <d.oertel@uib.de>  Thu,  04 Dec 2014:15:00:00 +0200


opsi-winst/opsi-script (4.11.4.13) stable; urgency=low

  * more debug output: oswebservice: retrieveJSONObject: log ResultLines.Strings[0] if Result = nil

-- Detlef Oertel <d.oertel@uib.de>  Wed,  12 Nov 2014:15:00:00 +0200


opsi-winst/opsi-script (4.11.4.12) stable; urgency=low

  * fix: osmain: StartProgramModes: correct Path to the opsiclientd.conf in batch mode
  * Logdevel while writing log to Service decreased
  * fix: command typo: ErrorsOccuredSinceMark is wrong, now also allowed: ErrorsOccurredSinceMark  fixes #1121
  * bakup files of log now are opsi-script.log.x where x is 0 - 8
  * do not run login scripts if user is 'opsisetupadmin' fixes #1248

-- Detlef Oertel <d.oertel@uib.de>  Fri,  24 Oct 2014:15:00:00 +0200


opsi-winst/opsi-script (4.11.4.11) stable; urgency=low

  * new unit: SystemCriticalU
  * osmain: in StartprogramModes set SystemCritical.IsCritical := true;
  * osmain: in BuildPC set SystemCritical.IsCritical := true;
  * osmain: in Terminateapp set SystemCritical.IsCritical := false;
  * osmain: in different execept set SystemCritical.IsCritical := false;

-- Detlef Oertel <d.oertel@uib.de>  Wed,  09 Oct 2014:15:00:00 +0200



[[opsi-406-releasenotes-misc-changelogs-windows-netboot]]
==== Changelog windows netboot products

////
windows (4.0.5-4) stable; urgency=low
////
####################

[[opsi-406-releasenotes-misc-changelogs-linux-netboot]]
==== Changelog linux netboot products
////
*Debian*

debian-4.0.5-4 stable; urgency=low

*Ubuntu*

ubuntu-4.0.5-7 testing; urgency=low

*openSUSE*

opensuse13-1_13.01-6 stable; urgency=low

opensuse12-3_12.03-5 stable; urgency=low

*sles11sp3*

*centos65*

centos65_6.5-3 testing; urgency=low

*Fedora 20*

fedora_20_20-4 stable; urgency=low
////
####################

[[opsi-406-releasenotes-misc-changelogs-opsi-local-image]]
==== Changelog opsi-local-image

////
*opsi-local-image-backup*

opsi-local-image-win* (4.0.5.1-3) stable; urgency=low

*opsi-local-image-capture*

opsi-local-image-capture (4.0.5.1-5) stable; urgency=low


*opsi-local-image-delimage*


*opsi-local-image-prepare*

opsi-local-image-win* (4.0.5.1-3) stable; urgency=low

*opsi-local-image-restore*

opsi-local-image-restore (4.0.5.1-2) stable; urgency=low

*opsi-local-image-sysprep*

opsi-local-image-sysprep (4.0.5.1-1) stable; urgency=low

*opsi-local-image-win**

opsi-local-image-win* (4.0.5.1-6) stable; urgency=low

*opsi-local-image-ubuntu*

opsi-local-image-ubuntu (4.0.5.1-1) stable; urgency=low
////
####################

[[opsi-406-releasenotes-misc-changelogs-python-opsi]]
==== Changelog python-opsi

////
python-opsi (4.0.5.15-1) experimental; urgency=low
////
####################

[[opsi-406-releasenotes-misc-changelogs-opsipxeconfd]]
==== Changelog opsipxeconfd
////
opsipxeconfd (4.0.5.3-6) experimental; urgency=low
////
####################

[[opsi-406-releasenotes-misc-changelogs-opsiconfd]]
==== Changelog opsiconfd
////
opsiconfd (4.0.5.2-1) experimental; urgency=low
////
####################

[[opsi-406-releasenotes-misc-changelogs-opsi-utils]]
==== Changelog opsi-utils
////
opsi-utils (4.0.5.6-2) experimental; urgency=low
////
####################

[[opsi-406-releasenotes-misc-changelogs-opsi-linux-bootimage]]
==== Changelog opsi-linux-bootimage
////
opsi-linux-bootimage (20140919-2) stable; urgency=medium
////
####################

[[opsi-406-releasenotes-misc-changelogs-opsi-depotserver]]
==== Changelog opsi-depotserver
////
opsi-depotserver (4.0.5.11-1) experimental; urgency=low
////
####################

[[opsi-406-releasenotes-misc-changelogs-opsi-atftp]]
==== Changelog opsi-atftp
////
opsi-atftp (0.7.dfsg-4) stable; urgency=medium
////
####################

[[opsi-406-releasenotes-misc-changelogs-opsi4ucs]]
==== Changelog opsi4ucs
////
opsi4ucs (4.0.5.5-4) experimental; urgency=low
////
####################

[[opsi-406-releasenotes-misc-changelogs-opsi-swaudit]]
==== Changelog opsi-swaudit
////
swaudit (4.0.5-1) stable; urgency=low
////
####################

 [[opsi-406-releasenotes-misc-changelogs-opsi-template]]
==== Changelog opsi-template
////
opsi-template (4.0.5-1) stable; urgency=low
////
####################

